/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { BoundarySelectorDataService } from './boundary-selector-data.service';
export class BoundarySelectorResolver {
    /**
     * @param {?} router
     * @param {?} boundarySelectorDataService
     */
    constructor(router, boundarySelectorDataService) {
        this.router = router;
        this.boundarySelectorDataService = boundarySelectorDataService;
    }
    /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    resolve(route, state) {
        /** @type {?} */
        const boundaryKey = route.paramMap.get(route.data.boundaryParamName);
        if (!boundaryKey) {
            console.warn('no boundary key param found');
            return;
        }
        this.boundarySelectorDataService.setSelectedBoundaryByKey(boundaryKey);
        return this.boundarySelectorDataService.selectedBoundary$.getValue();
    }
}
BoundarySelectorResolver.decorators = [
    { type: Injectable }
];
/** @nocollapse */
BoundarySelectorResolver.ctorParameters = () => [
    { type: Router },
    { type: BoundarySelectorDataService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    BoundarySelectorResolver.prototype.router;
    /**
     * @type {?}
     * @private
     */
    BoundarySelectorResolver.prototype.boundarySelectorDataService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm91bmRhcnktc2VsZWN0b3ItcmVzb2x2ZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmeC1saWIvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9meC1ib3VuZGFyeS1zZWxlY3Rvci9zZXJ2aWNlcy9ib3VuZGFyeS1zZWxlY3Rvci1yZXNvbHZlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFBO0FBQzFDLE9BQU8sRUFBK0MsTUFBTSxFQUFXLE1BQU0saUJBQWlCLENBQUE7QUFDOUYsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sa0NBQWtDLENBQUE7QUFJOUUsTUFBTSxPQUFPLHdCQUF3Qjs7Ozs7SUFFakMsWUFBb0IsTUFBYyxFQUFVLDJCQUF3RDtRQUFoRixXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVUsZ0NBQTJCLEdBQTNCLDJCQUEyQixDQUE2QjtJQUNwRyxDQUFDOzs7Ozs7SUFFTSxPQUFPLENBQUMsS0FBNkIsRUFBRSxLQUEwQjs7Y0FDOUQsV0FBVyxHQUFXLEtBQUssQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUM7UUFFNUUsSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNkLE9BQU8sQ0FBQyxJQUFJLENBQUMsNkJBQTZCLENBQUMsQ0FBQTtZQUMzQyxPQUFNO1NBQ1Q7UUFFRCxJQUFJLENBQUMsMkJBQTJCLENBQUMsd0JBQXdCLENBQUMsV0FBVyxDQUFDLENBQUE7UUFFdEUsT0FBTyxJQUFJLENBQUMsMkJBQTJCLENBQUMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLENBQUE7SUFDeEUsQ0FBQzs7O1lBakJKLFVBQVU7Ozs7WUFKMkMsTUFBTTtZQUNuRCwyQkFBMkI7Ozs7Ozs7SUFNcEIsMENBQXNCOzs7OztJQUFFLCtEQUFnRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJ1xyXG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBSb3V0ZXJTdGF0ZVNuYXBzaG90LCBSb3V0ZXIsIFJlc29sdmUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInXHJcbmltcG9ydCB7IEJvdW5kYXJ5U2VsZWN0b3JEYXRhU2VydmljZSB9IGZyb20gJy4vYm91bmRhcnktc2VsZWN0b3ItZGF0YS5zZXJ2aWNlJ1xyXG5pbXBvcnQgeyBCb3VuZGFyeVNlbGVjdG9yUmVzb3VyY2UgfSBmcm9tICcuLi9kb21haW4vYm91bmRhcnktc2VsZWN0b3ItcmVzb3VyY2UnXHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBCb3VuZGFyeVNlbGVjdG9yUmVzb2x2ZXIgaW1wbGVtZW50cyBSZXNvbHZlPEJvdW5kYXJ5U2VsZWN0b3JSZXNvdXJjZT4ge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcm91dGVyOiBSb3V0ZXIsIHByaXZhdGUgYm91bmRhcnlTZWxlY3RvckRhdGFTZXJ2aWNlOiBCb3VuZGFyeVNlbGVjdG9yRGF0YVNlcnZpY2UpIHtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgcmVzb2x2ZShyb3V0ZTogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCwgc3RhdGU6IFJvdXRlclN0YXRlU25hcHNob3QpOiBCb3VuZGFyeVNlbGVjdG9yUmVzb3VyY2UgfCBpbXBvcnQoJ3J4anMnKS5PYnNlcnZhYmxlPEJvdW5kYXJ5U2VsZWN0b3JSZXNvdXJjZT4gfCBQcm9taXNlPEJvdW5kYXJ5U2VsZWN0b3JSZXNvdXJjZT4ge1xyXG4gICAgICAgIGNvbnN0IGJvdW5kYXJ5S2V5OiBzdHJpbmcgPSByb3V0ZS5wYXJhbU1hcC5nZXQocm91dGUuZGF0YS5ib3VuZGFyeVBhcmFtTmFtZSlcclxuXHJcbiAgICAgICAgaWYgKCFib3VuZGFyeUtleSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ25vIGJvdW5kYXJ5IGtleSBwYXJhbSBmb3VuZCcpXHJcbiAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5ib3VuZGFyeVNlbGVjdG9yRGF0YVNlcnZpY2Uuc2V0U2VsZWN0ZWRCb3VuZGFyeUJ5S2V5KGJvdW5kYXJ5S2V5KVxyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5ib3VuZGFyeVNlbGVjdG9yRGF0YVNlcnZpY2Uuc2VsZWN0ZWRCb3VuZGFyeSQuZ2V0VmFsdWUoKVxyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=