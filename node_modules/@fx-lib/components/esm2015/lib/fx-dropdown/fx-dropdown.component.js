/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
export class FxDropdownComponent {
    constructor() {
        this.cssClass = '';
        this.filterable = false;
        this.currentItemChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (!this.placeholder && this.options[0]) {
            this.currentItem = this.options[0];
        }
    }
    /**
     * @param {?} item
     * @return {?}
     */
    clickItem(item) {
        if (item && !item.disabled) {
            this.currentItem = item;
            if (item.onSelectAction) {
                item.onSelectAction();
            }
            this.currentItemChange.emit(item);
        }
    }
    /**
     * @param {?} item
     * @return {?}
     */
    getComputedLabel(item) {
        return item.label ? item.label : item.key;
    }
    /**
     * @param {?} item
     * @return {?}
     */
    isCurrentItem(item) {
        return item === this.currentItem;
    }
    /**
     * @param {?} item
     * @return {?}
     */
    isItemHighlighted(item) {
        return this.isCurrentItem(item) && this.highlightActive;
    }
    /**
     * @return {?}
     */
    getSelectedItem() {
        return this.currentItem;
    }
    /**
     * @param {?} item
     * @return {?}
     */
    setSelectedItem(item) {
        this.currentItem = item;
        this.currentItemChange.emit(item);
    }
    /**
     * @param {?} searchString
     * @return {?}
     */
    setFilterText(searchString) {
        this.filterInput = searchString;
    }
    /**
     * @param {?} entries
     * @return {?}
     */
    getFilteredList(entries) {
        if (this.filterable && this.filterInput && this.filterInput.length > 0) {
            return entries.filter((/**
             * @param {?} e
             * @return {?}
             */
            e => e.key.concat(e.label).toLowerCase().includes(this.filterInput.toLowerCase())));
        }
        else {
            return entries;
        }
    }
}
FxDropdownComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-fx-dropdown',
                template: "<div ngbDropdown [ngClass]=\"['dropdown', cssClass]\">\r\n\r\n  <button ngbDropdownToggle class=\"btn btn-secondary cursor-type no-box-shadow\">\r\n    <span *ngIf=\"currentItem\">  {{ getComputedLabel(currentItem) }} </span>\r\n    <span *ngIf=\"!currentItem\">  {{ placeholder | translate}} </span>\r\n  </button>\r\n\r\n  <div ngbDropdownMenu class=\"dropdown-menu dropdown-primary\">\r\n    <app-fx-search-input *ngIf=\"filterable\" (searchInputChangedEvent)=\"setFilterText($event)\" placeholder=\"\"\r\n                         debounceTimeInMilliseconds=\"0\" searchFieldMinLength=\"1\" class=\"full-width\">\r\n    </app-fx-search-input>\r\n\r\n    <div class=\"dropdown-item-wrapper\">\r\n      <button ngbDropdownItem class=\"dropdown-item \" [class.active]=\"isItemHighlighted(item)\"\r\n              *ngFor=\"let item of getFilteredList(options)\"\r\n              (click)=\"clickItem(item)\"\r\n              [disabled]=\"item.disabled\">\r\n        {{getComputedLabel(item)}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                styles: [":host ::ng-deep app-fx-search-input .search-input{max-width:100%;position:-webkit-sticky;position:sticky;top:0;background:#fff;padding:5px}.dropdown-menu{padding:0}.dropdown-menu .dropdown-item-wrapper{max-height:50vh;overflow:auto}"]
            }] }
];
FxDropdownComponent.propDecorators = {
    options: [{ type: Input }],
    placeholder: [{ type: Input }],
    highlightActive: [{ type: Input }],
    currentItem: [{ type: Input }],
    cssClass: [{ type: Input }],
    filterable: [{ type: Input }],
    currentItemChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    FxDropdownComponent.prototype.options;
    /** @type {?} */
    FxDropdownComponent.prototype.placeholder;
    /** @type {?} */
    FxDropdownComponent.prototype.highlightActive;
    /** @type {?} */
    FxDropdownComponent.prototype.currentItem;
    /** @type {?} */
    FxDropdownComponent.prototype.cssClass;
    /** @type {?} */
    FxDropdownComponent.prototype.filterable;
    /** @type {?} */
    FxDropdownComponent.prototype.currentItemChange;
    /**
     * @type {?}
     * @private
     */
    FxDropdownComponent.prototype.filterInput;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZngtZHJvcGRvd24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ4LWxpYi9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2Z4LWRyb3Bkb3duL2Z4LWRyb3Bkb3duLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQTtBQVE5RSxNQUFNLE9BQU8sbUJBQW1CO0lBTGhDO1FBZWtCLGFBQVEsR0FBRyxFQUFFLENBQUE7UUFFYixlQUFVLEdBQUcsS0FBSyxDQUFBO1FBRWpCLHNCQUFpQixHQUFHLElBQUksWUFBWSxFQUFnQixDQUFBO0lBb0R2RSxDQUFDOzs7O0lBaERRLFFBQVE7UUFDYixJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ3hDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQTtTQUNuQztJQUNILENBQUM7Ozs7O0lBRU0sU0FBUyxDQUFDLElBQWtCO1FBQ2pDLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUMxQixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQTtZQUN2QixJQUFJLElBQUksQ0FBQyxjQUFjLEVBQUU7Z0JBQ3ZCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQTthQUN0QjtZQUNELElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7U0FDbEM7SUFDSCxDQUFDOzs7OztJQUVNLGdCQUFnQixDQUFDLElBQWtCO1FBQ3hDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQTtJQUMzQyxDQUFDOzs7OztJQUVNLGFBQWEsQ0FBQyxJQUFrQjtRQUNyQyxPQUFPLElBQUksS0FBSyxJQUFJLENBQUMsV0FBVyxDQUFBO0lBQ2xDLENBQUM7Ozs7O0lBRU0saUJBQWlCLENBQUMsSUFBa0I7UUFDekMsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxlQUFlLENBQUE7SUFDekQsQ0FBQzs7OztJQUVNLGVBQWU7UUFDcEIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFBO0lBQ3pCLENBQUM7Ozs7O0lBRU0sZUFBZSxDQUFDLElBQWtCO1FBQ3ZDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFBO1FBQ3ZCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDbkMsQ0FBQzs7Ozs7SUFFTSxhQUFhLENBQUMsWUFBb0I7UUFDdkMsSUFBSSxDQUFDLFdBQVcsR0FBRyxZQUFZLENBQUE7SUFDakMsQ0FBQzs7Ozs7SUFFTSxlQUFlLENBQUMsT0FBdUI7UUFDNUMsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ3RFLE9BQU8sT0FBTyxDQUFDLE1BQU07Ozs7WUFBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxFQUFDLENBQUE7U0FDekc7YUFBTTtZQUNMLE9BQU8sT0FBTyxDQUFBO1NBQ2Y7SUFDSCxDQUFDOzs7WUF0RUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxpQkFBaUI7Z0JBQzNCLHFpQ0FBMkM7O2FBRTVDOzs7c0JBR0UsS0FBSzswQkFFTCxLQUFLOzhCQUVMLEtBQUs7MEJBRUwsS0FBSzt1QkFFTCxLQUFLO3lCQUVMLEtBQUs7Z0NBRUwsTUFBTTs7OztJQVpQLHNDQUF1Qzs7SUFFdkMsMENBQW9DOztJQUVwQyw4Q0FBeUM7O0lBRXpDLDBDQUEwQzs7SUFFMUMsdUNBQTZCOztJQUU3Qix5Q0FBa0M7O0lBRWxDLGdEQUFxRTs7Ozs7SUFFckUsMENBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXHJcbmltcG9ydCB7IERyb3Bkb3duSXRlbSB9IGZyb20gJy4vZG9tYWluL2Ryb3Bkb3duLWl0ZW0nXHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FwcC1meC1kcm9wZG93bicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2Z4LWRyb3Bkb3duLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9meC1kcm9wZG93bi5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGeERyb3Bkb3duQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgQElucHV0KCkgcHVibGljIG9wdGlvbnM6IERyb3Bkb3duSXRlbVtdXHJcblxyXG4gIEBJbnB1dCgpIHB1YmxpYyBwbGFjZWhvbGRlcj86IHN0cmluZ1xyXG5cclxuICBASW5wdXQoKSBwdWJsaWMgaGlnaGxpZ2h0QWN0aXZlPzogYm9vbGVhblxyXG5cclxuICBASW5wdXQoKSBwdWJsaWMgY3VycmVudEl0ZW0/OiBEcm9wZG93bkl0ZW1cclxuXHJcbiAgQElucHV0KCkgcHVibGljIGNzc0NsYXNzID0gJydcclxuXHJcbiAgQElucHV0KCkgcHVibGljIGZpbHRlcmFibGUgPSBmYWxzZVxyXG5cclxuICBAT3V0cHV0KCkgcHVibGljIGN1cnJlbnRJdGVtQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxEcm9wZG93bkl0ZW0+KClcclxuXHJcbiAgcHJpdmF0ZSBmaWx0ZXJJbnB1dDogc3RyaW5nXHJcblxyXG4gIHB1YmxpYyBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5wbGFjZWhvbGRlciAmJiB0aGlzLm9wdGlvbnNbMF0pIHtcclxuICAgICAgdGhpcy5jdXJyZW50SXRlbSA9IHRoaXMub3B0aW9uc1swXVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGNsaWNrSXRlbShpdGVtOiBEcm9wZG93bkl0ZW0pOiB2b2lkIHtcclxuICAgIGlmIChpdGVtICYmICFpdGVtLmRpc2FibGVkKSB7XHJcbiAgICAgIHRoaXMuY3VycmVudEl0ZW0gPSBpdGVtXHJcbiAgICAgIGlmIChpdGVtLm9uU2VsZWN0QWN0aW9uKSB7XHJcbiAgICAgICAgaXRlbS5vblNlbGVjdEFjdGlvbigpXHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5jdXJyZW50SXRlbUNoYW5nZS5lbWl0KGl0ZW0pXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0Q29tcHV0ZWRMYWJlbChpdGVtOiBEcm9wZG93bkl0ZW0pOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIGl0ZW0ubGFiZWwgPyBpdGVtLmxhYmVsIDogaXRlbS5rZXlcclxuICB9XHJcblxyXG4gIHB1YmxpYyBpc0N1cnJlbnRJdGVtKGl0ZW06IERyb3Bkb3duSXRlbSk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIGl0ZW0gPT09IHRoaXMuY3VycmVudEl0ZW1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBpc0l0ZW1IaWdobGlnaHRlZChpdGVtOiBEcm9wZG93bkl0ZW0pOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLmlzQ3VycmVudEl0ZW0oaXRlbSkgJiYgdGhpcy5oaWdobGlnaHRBY3RpdmVcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRTZWxlY3RlZEl0ZW0oKTogRHJvcGRvd25JdGVtIHtcclxuICAgIHJldHVybiB0aGlzLmN1cnJlbnRJdGVtXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0U2VsZWN0ZWRJdGVtKGl0ZW06IERyb3Bkb3duSXRlbSk6IHZvaWQge1xyXG4gICAgdGhpcy5jdXJyZW50SXRlbSA9IGl0ZW1cclxuICAgIHRoaXMuY3VycmVudEl0ZW1DaGFuZ2UuZW1pdChpdGVtKVxyXG4gIH1cclxuXHJcbiAgcHVibGljIHNldEZpbHRlclRleHQoc2VhcmNoU3RyaW5nOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgIHRoaXMuZmlsdGVySW5wdXQgPSBzZWFyY2hTdHJpbmdcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRGaWx0ZXJlZExpc3QoZW50cmllczogRHJvcGRvd25JdGVtW10pOiBhbnkge1xyXG4gICAgaWYgKHRoaXMuZmlsdGVyYWJsZSAmJiB0aGlzLmZpbHRlcklucHV0ICYmIHRoaXMuZmlsdGVySW5wdXQubGVuZ3RoID4gMCkge1xyXG4gICAgICByZXR1cm4gZW50cmllcy5maWx0ZXIoZSA9PiBlLmtleS5jb25jYXQoZS5sYWJlbCkudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyh0aGlzLmZpbHRlcklucHV0LnRvTG93ZXJDYXNlKCkpKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGVudHJpZXNcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19