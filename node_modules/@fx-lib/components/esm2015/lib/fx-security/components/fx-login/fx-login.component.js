/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, Input } from '@angular/core';
import { Subscription } from 'rxjs';
import { AuthenticationService } from '../../services/authentication.service';
import { UserService } from '../../services/user.service';
import { faUser } from '@fortawesome/free-solid-svg-icons/faUser';
export class FxLoginComponent {
    /**
     * @param {?} authenticationService
     * @param {?} userService
     * @param {?} changeDetector
     */
    constructor(authenticationService, userService, changeDetector) {
        this.authenticationService = authenticationService;
        this.userService = userService;
        this.changeDetector = changeDetector;
        this.btnStyle = '';
        this.dropDownStyling = '';
        this.languageSelectorRadioGroupStyling = 'fx-styling';
        this.icon = 'fa-user';
        this.fasUser = faUser;
        this.subscriptions = new Subscription();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.subscriptions.add(this.authenticationService.loginEvents.subscribe((/**
         * @return {?}
         */
        () => {
            this.username = this.userService.getUsername();
            this.changeDetector.markForCheck();
        })));
    }
    /**
     * @return {?}
     */
    isNotLoggedIn() {
        return !this.username || this.username.trim().length === 0;
    }
    /**
     * @return {?}
     */
    login() {
        this.authenticationService.loginWithRedirectUrl();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.subscriptions.unsubscribe();
    }
    /**
     * @param {?=} selectedIcon
     * @return {?}
     */
    setIcon(selectedIcon) {
        switch (selectedIcon) {
            case 'fasUser': {
                return this.fasUser;
            }
            default: {
                return this.fasUser;
            }
        }
    }
}
FxLoginComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-fx-login',
                template: "<div [ngClass]=\"dropDownStyling\">\r\n  <div ngbDropdown class=\"dropdown\">\r\n    <button [ngClass]=\"['btn', btnStyle]\" type=\"button\" id=\"dropdownLoginButton\" ngbDropdownToggle>\r\n      <fa-icon *ngIf=\"icon\" [icon]=\"setIcon(icon)\"></fa-icon>\r\n      <a *ngIf=\"icon\">&nbsp;</a>\r\n      {{ !isNotLoggedIn() ? username : 'i18n.fx-components.security.login' | translate}}\r\n    </button>\r\n\r\n    <div ngbDropdownMenu class=\"dropdown-menu\" aria-labelledby=\"dropdownLoginButton\">\r\n      <div>\r\n        <app-fx-language-selector [radioGroupStyling]=\"languageSelectorRadioGroupStyling\"></app-fx-language-selector>\r\n      </div>\r\n      <div class=\"dropdown-divider\"></div>\r\n      <button ngbDropdownItem class=\"dropdown-item\" appLogout=\"\" *ngIf=\"!isNotLoggedIn()\">\r\n        {{'i18n.fx-components.security.logout' | translate}}\r\n      </button>\r\n      <button ngbDropdownItem class=\"dropdown-item\" (click)=\"login()\" *ngIf=\"isNotLoggedIn()\">\r\n        {{'i18n.fx-components.security.login' | translate}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>",
                styles: [".login-icon{padding-right:4px}.fx-styling .no-permission-text{color:#fff}.fx-styling .btn,.fx-styling .btn:hover{color:#fff;background-color:transparent}.fx-styling .btn:focus{box-shadow:none}.fx-styling .dropdown-item:active{background-color:#004666}"]
            }] }
];
/** @nocollapse */
FxLoginComponent.ctorParameters = () => [
    { type: AuthenticationService },
    { type: UserService },
    { type: ChangeDetectorRef }
];
FxLoginComponent.propDecorators = {
    btnStyle: [{ type: Input }],
    dropDownStyling: [{ type: Input }],
    languageSelectorRadioGroupStyling: [{ type: Input }],
    icon: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    FxLoginComponent.prototype.btnStyle;
    /** @type {?} */
    FxLoginComponent.prototype.dropDownStyling;
    /** @type {?} */
    FxLoginComponent.prototype.languageSelectorRadioGroupStyling;
    /** @type {?} */
    FxLoginComponent.prototype.icon;
    /** @type {?} */
    FxLoginComponent.prototype.fasUser;
    /** @type {?} */
    FxLoginComponent.prototype.username;
    /**
     * @type {?}
     * @private
     */
    FxLoginComponent.prototype.subscriptions;
    /**
     * @type {?}
     * @private
     */
    FxLoginComponent.prototype.authenticationService;
    /**
     * @type {?}
     * @private
     */
    FxLoginComponent.prototype.userService;
    /**
     * @type {?}
     * @private
     */
    FxLoginComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZngtbG9naW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ4LWxpYi9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2Z4LXNlY3VyaXR5L2NvbXBvbmVudHMvZngtbG9naW4vZngtbG9naW4uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxlQUFlLENBQUE7QUFDdEYsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLE1BQU0sQ0FBQTtBQUNuQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQTtBQUM3RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNkJBQTZCLENBQUE7QUFFekQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLDBDQUEwQyxDQUFBO0FBT2pFLE1BQU0sT0FBTyxnQkFBZ0I7Ozs7OztJQW9CM0IsWUFBb0IscUJBQTRDLEVBQzVDLFdBQXdCLEVBQ3hCLGNBQWlDO1FBRmpDLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBdUI7UUFDNUMsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFDeEIsbUJBQWMsR0FBZCxjQUFjLENBQW1CO1FBbkI5QyxhQUFRLEdBQUcsRUFBRSxDQUFBO1FBR2Isb0JBQWUsR0FBRyxFQUFFLENBQUE7UUFHcEIsc0NBQWlDLEdBQUcsWUFBWSxDQUFBO1FBR2hELFNBQUksR0FBRyxTQUFTLENBQUE7UUFFaEIsWUFBTyxHQUFhLE1BQU0sQ0FBQTtRQUl6QixrQkFBYSxHQUFpQixJQUFJLFlBQVksRUFBRSxDQUFBO0lBS3hELENBQUM7Ozs7SUFFTSxRQUFRO1FBQ2IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFdBQVcsQ0FBQyxTQUFTOzs7UUFBQyxHQUFHLEVBQUU7WUFDM0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsRUFBRSxDQUFBO1lBQzlDLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxFQUFFLENBQUE7UUFDcEMsQ0FBQyxFQUFDLENBQUMsQ0FBQTtJQUNMLENBQUM7Ozs7SUFFTSxhQUFhO1FBQ2xCLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQTtJQUM1RCxDQUFDOzs7O0lBRU0sS0FBSztRQUNWLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxvQkFBb0IsRUFBRSxDQUFBO0lBQ25ELENBQUM7Ozs7SUFFTSxXQUFXO1FBQ2hCLElBQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFLENBQUE7SUFDbEMsQ0FBQzs7Ozs7SUFFTSxPQUFPLENBQUMsWUFBcUI7UUFDbEMsUUFBUSxZQUFZLEVBQUU7WUFDcEIsS0FBSyxTQUFTLENBQUMsQ0FBQztnQkFDZCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUE7YUFDcEI7WUFDRCxPQUFPLENBQUMsQ0FBQztnQkFDUCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUE7YUFDcEI7U0FDRjtJQUNILENBQUM7OztZQTFERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGNBQWM7Z0JBQ3hCLDhsQ0FBd0M7O2FBRXpDOzs7O1lBVFEscUJBQXFCO1lBQ3JCLFdBQVc7WUFIWCxpQkFBaUI7Ozt1QkFjdkIsS0FBSzs4QkFHTCxLQUFLO2dEQUdMLEtBQUs7bUJBR0wsS0FBSzs7OztJQVROLG9DQUNvQjs7SUFFcEIsMkNBQzJCOztJQUUzQiw2REFDdUQ7O0lBRXZELGdDQUN1Qjs7SUFFdkIsbUNBQWlDOztJQUVqQyxvQ0FBdUI7Ozs7O0lBRXZCLHlDQUF3RDs7Ozs7SUFFNUMsaURBQW9EOzs7OztJQUNwRCx1Q0FBZ0M7Ozs7O0lBQ2hDLDBDQUF5QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXHJcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnXHJcbmltcG9ydCB7IEF1dGhlbnRpY2F0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2F1dGhlbnRpY2F0aW9uLnNlcnZpY2UnXHJcbmltcG9ydCB7IFVzZXJTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvdXNlci5zZXJ2aWNlJ1xyXG5pbXBvcnQgeyBJY29uUHJvcCB9IGZyb20gJ0Bmb3J0YXdlc29tZS9mb250YXdlc29tZS1zdmctY29yZSdcclxuaW1wb3J0IHsgZmFVc2VyIH0gZnJvbSAnQGZvcnRhd2Vzb21lL2ZyZWUtc29saWQtc3ZnLWljb25zL2ZhVXNlcidcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXBwLWZ4LWxvZ2luJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vZngtbG9naW4uY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2Z4LWxvZ2luLmNvbXBvbmVudC5zY3NzJ10sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGeExvZ2luQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBidG5TdHlsZSA9ICcnXHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgcHVibGljIGRyb3BEb3duU3R5bGluZyA9ICcnXHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgcHVibGljIGxhbmd1YWdlU2VsZWN0b3JSYWRpb0dyb3VwU3R5bGluZyA9ICdmeC1zdHlsaW5nJ1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBpY29uID0gJ2ZhLXVzZXInXHJcblxyXG4gIHB1YmxpYyBmYXNVc2VyOiBJY29uUHJvcCA9IGZhVXNlclxyXG5cclxuICBwdWJsaWMgdXNlcm5hbWU6IHN0cmluZ1xyXG5cclxuICBwcml2YXRlIHN1YnNjcmlwdGlvbnM6IFN1YnNjcmlwdGlvbiA9IG5ldyBTdWJzY3JpcHRpb24oKVxyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGF1dGhlbnRpY2F0aW9uU2VydmljZTogQXV0aGVudGljYXRpb25TZXJ2aWNlLFxyXG4gICAgICAgICAgICAgIHByaXZhdGUgdXNlclNlcnZpY2U6IFVzZXJTZXJ2aWNlLFxyXG4gICAgICAgICAgICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmKSB7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLnN1YnNjcmlwdGlvbnMuYWRkKHRoaXMuYXV0aGVudGljYXRpb25TZXJ2aWNlLmxvZ2luRXZlbnRzLnN1YnNjcmliZSgoKSA9PiB7XHJcbiAgICAgIHRoaXMudXNlcm5hbWUgPSB0aGlzLnVzZXJTZXJ2aWNlLmdldFVzZXJuYW1lKClcclxuICAgICAgdGhpcy5jaGFuZ2VEZXRlY3Rvci5tYXJrRm9yQ2hlY2soKVxyXG4gICAgfSkpXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgaXNOb3RMb2dnZWRJbigpOiBib29sZWFuIHtcclxuICAgIHJldHVybiAhdGhpcy51c2VybmFtZSB8fCB0aGlzLnVzZXJuYW1lLnRyaW0oKS5sZW5ndGggPT09IDBcclxuICB9XHJcblxyXG4gIHB1YmxpYyBsb2dpbigpOiB2b2lkIHtcclxuICAgIHRoaXMuYXV0aGVudGljYXRpb25TZXJ2aWNlLmxvZ2luV2l0aFJlZGlyZWN0VXJsKClcclxuICB9XHJcblxyXG4gIHB1YmxpYyBuZ09uRGVzdHJveSgpOiB2b2lkIHtcclxuICAgIHRoaXMuc3Vic2NyaXB0aW9ucy51bnN1YnNjcmliZSgpXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0SWNvbihzZWxlY3RlZEljb24/OiBzdHJpbmcpOiBJY29uUHJvcCB7XHJcbiAgICBzd2l0Y2ggKHNlbGVjdGVkSWNvbikge1xyXG4gICAgICBjYXNlICdmYXNVc2VyJzoge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmZhc1VzZXJcclxuICAgICAgfVxyXG4gICAgICBkZWZhdWx0OiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZmFzVXNlclxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==