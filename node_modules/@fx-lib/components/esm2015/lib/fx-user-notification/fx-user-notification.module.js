/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FxUserNotificationComponent } from './components/fx-user-notification/fx-user-notification.component';
import { NgbModule } from '@ng-bootstrap/ng-bootstrap';
import { BrowserModule } from '@angular/platform-browser';
import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';
import { FormsModule } from '@angular/forms';
import { NOTIFICATION_CONFIG } from './domain/fx-notification-config';
import { FxTranslationModule } from '../fx-translation/fx-translation.module';
import { FxUserNotificationService } from './services/fx-user-notification.service';
import { FxUserNotificationLocalDevelopmentService } from './services/fx-user-notification-local-development.service';
import { FxUserSingleNotificationAreaComponent } from './components/fx-user-single-notification-area/fx-user-single-notification-area.component';
export class FxUserNotificationModule {
    /**
     * @param {?} notificationConfig
     * @return {?}
     */
    static forRoot(notificationConfig) {
        return {
            ngModule: FxUserNotificationModule,
            providers: [{
                    provide: NOTIFICATION_CONFIG,
                    useValue: notificationConfig
                },
                FxUserNotificationService]
        };
    }
    /**
     * @param {?} notificationConfig
     * @return {?}
     */
    static forLocalDevelopment(notificationConfig) {
        return {
            ngModule: FxUserNotificationModule,
            providers: [
                {
                    provide: NOTIFICATION_CONFIG,
                    useValue: notificationConfig
                },
                {
                    provide: FxUserNotificationService,
                    useClass: FxUserNotificationLocalDevelopmentService
                }
            ]
        };
    }
}
FxUserNotificationModule.decorators = [
    { type: NgModule, args: [{
                declarations: [FxUserNotificationComponent, FxUserSingleNotificationAreaComponent],
                exports: [
                    FxUserNotificationComponent,
                    FxUserSingleNotificationAreaComponent
                ],
                imports: [
                    BrowserModule,
                    CommonModule,
                    NgbModule,
                    FontAwesomeModule,
                    FormsModule,
                    FxTranslationModule
                ],
                bootstrap: [FxUserNotificationComponent]
            },] }
];
/**
 * @record
 */
export function FxNotificationConfig() { }
if (false) {
    /** @type {?} */
    FxNotificationConfig.prototype.notification_service_url;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZngtdXNlci1ub3RpZmljYXRpb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ4LWxpYi9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2Z4LXVzZXItbm90aWZpY2F0aW9uL2Z4LXVzZXItbm90aWZpY2F0aW9uLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQTtBQUN4QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUE7QUFDOUMsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sa0VBQWtFLENBQUE7QUFDOUcsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDRCQUE0QixDQUFBO0FBQ3RELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQTtBQUN6RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQTtBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUE7QUFDNUMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0saUNBQWlDLENBQUE7QUFDckUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUNBQXlDLENBQUE7QUFDN0UsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0seUNBQXlDLENBQUE7QUFDbkYsT0FBTyxFQUFFLHlDQUF5QyxFQUFFLE1BQU0sMkRBQTJELENBQUE7QUFDckgsT0FBTyxFQUFFLHFDQUFxQyxFQUFFLE1BQU0sMEZBQTBGLENBQUE7QUFrQmhKLE1BQU0sT0FBTyx3QkFBd0I7Ozs7O0lBQzVCLE1BQU0sQ0FBQyxPQUFPLENBQUMsa0JBQXdDO1FBQzVELE9BQU87WUFDTCxRQUFRLEVBQUUsd0JBQXdCO1lBQ2xDLFNBQVMsRUFBRSxDQUFDO29CQUNWLE9BQU8sRUFBRSxtQkFBbUI7b0JBQzVCLFFBQVEsRUFBRSxrQkFBa0I7aUJBQzdCO2dCQUNDLHlCQUF5QixDQUFDO1NBQzdCLENBQUE7SUFDSCxDQUFDOzs7OztJQUVNLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxrQkFBd0M7UUFDeEUsT0FBTztZQUNMLFFBQVEsRUFBRSx3QkFBd0I7WUFDbEMsU0FBUyxFQUFFO2dCQUNUO29CQUNFLE9BQU8sRUFBRSxtQkFBbUI7b0JBQzVCLFFBQVEsRUFBRSxrQkFBa0I7aUJBQzdCO2dCQUNEO29CQUNFLE9BQU8sRUFBRSx5QkFBeUI7b0JBQ2xDLFFBQVEsRUFBRSx5Q0FBeUM7aUJBQ3BEO2FBQ0Y7U0FDRixDQUFBO0lBQ0gsQ0FBQzs7O1lBMUNGLFFBQVEsU0FBQztnQkFDUixZQUFZLEVBQUUsQ0FBQywyQkFBMkIsRUFBRSxxQ0FBcUMsQ0FBQztnQkFDbEYsT0FBTyxFQUFFO29CQUNQLDJCQUEyQjtvQkFDekIscUNBQXFDO2lCQUN4QztnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsYUFBYTtvQkFDYixZQUFZO29CQUNaLFNBQVM7b0JBQ1QsaUJBQWlCO29CQUNqQixXQUFXO29CQUNYLG1CQUFtQjtpQkFDcEI7Z0JBQ0QsU0FBUyxFQUFFLENBQUMsMkJBQTJCLENBQUM7YUFDekM7Ozs7O0FBOEJELDBDQUVDOzs7SUFEQyx3REFBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbidcclxuaW1wb3J0IHsgRnhVc2VyTm90aWZpY2F0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2Z4LXVzZXItbm90aWZpY2F0aW9uL2Z4LXVzZXItbm90aWZpY2F0aW9uLmNvbXBvbmVudCdcclxuaW1wb3J0IHsgTmdiTW9kdWxlIH0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnXHJcbmltcG9ydCB7IEJyb3dzZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJ1xyXG5pbXBvcnQgeyBGb250QXdlc29tZU1vZHVsZSB9IGZyb20gJ0Bmb3J0YXdlc29tZS9hbmd1bGFyLWZvbnRhd2Vzb21lJ1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJ1xyXG5pbXBvcnQgeyBOT1RJRklDQVRJT05fQ09ORklHIH0gZnJvbSAnLi9kb21haW4vZngtbm90aWZpY2F0aW9uLWNvbmZpZydcclxuaW1wb3J0IHsgRnhUcmFuc2xhdGlvbk1vZHVsZSB9IGZyb20gJy4uL2Z4LXRyYW5zbGF0aW9uL2Z4LXRyYW5zbGF0aW9uLm1vZHVsZSdcclxuaW1wb3J0IHsgRnhVc2VyTm90aWZpY2F0aW9uU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvZngtdXNlci1ub3RpZmljYXRpb24uc2VydmljZSdcclxuaW1wb3J0IHsgRnhVc2VyTm90aWZpY2F0aW9uTG9jYWxEZXZlbG9wbWVudFNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2Z4LXVzZXItbm90aWZpY2F0aW9uLWxvY2FsLWRldmVsb3BtZW50LnNlcnZpY2UnXHJcbmltcG9ydCB7IEZ4VXNlclNpbmdsZU5vdGlmaWNhdGlvbkFyZWFDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZngtdXNlci1zaW5nbGUtbm90aWZpY2F0aW9uLWFyZWEvZngtdXNlci1zaW5nbGUtbm90aWZpY2F0aW9uLWFyZWEuY29tcG9uZW50J1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtGeFVzZXJOb3RpZmljYXRpb25Db21wb25lbnQsIEZ4VXNlclNpbmdsZU5vdGlmaWNhdGlvbkFyZWFDb21wb25lbnRdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIEZ4VXNlck5vdGlmaWNhdGlvbkNvbXBvbmVudFxyXG4gICAgLCBGeFVzZXJTaW5nbGVOb3RpZmljYXRpb25BcmVhQ29tcG9uZW50XHJcbiAgXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBCcm93c2VyTW9kdWxlLFxyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgTmdiTW9kdWxlLFxyXG4gICAgRm9udEF3ZXNvbWVNb2R1bGUsXHJcbiAgICBGb3Jtc01vZHVsZSxcclxuICAgIEZ4VHJhbnNsYXRpb25Nb2R1bGVcclxuICBdLFxyXG4gIGJvb3RzdHJhcDogW0Z4VXNlck5vdGlmaWNhdGlvbkNvbXBvbmVudF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEZ4VXNlck5vdGlmaWNhdGlvbk1vZHVsZSB7XHJcbiAgcHVibGljIHN0YXRpYyBmb3JSb290KG5vdGlmaWNhdGlvbkNvbmZpZzogRnhOb3RpZmljYXRpb25Db25maWcpOiBhbnkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IEZ4VXNlck5vdGlmaWNhdGlvbk1vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbe1xyXG4gICAgICAgIHByb3ZpZGU6IE5PVElGSUNBVElPTl9DT05GSUcsXHJcbiAgICAgICAgdXNlVmFsdWU6IG5vdGlmaWNhdGlvbkNvbmZpZ1xyXG4gICAgICB9LFxyXG4gICAgICAgIEZ4VXNlck5vdGlmaWNhdGlvblNlcnZpY2VdXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc3RhdGljIGZvckxvY2FsRGV2ZWxvcG1lbnQobm90aWZpY2F0aW9uQ29uZmlnOiBGeE5vdGlmaWNhdGlvbkNvbmZpZyk6IGFueSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuZ01vZHVsZTogRnhVc2VyTm90aWZpY2F0aW9uTW9kdWxlLFxyXG4gICAgICBwcm92aWRlcnM6IFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICBwcm92aWRlOiBOT1RJRklDQVRJT05fQ09ORklHLFxyXG4gICAgICAgICAgdXNlVmFsdWU6IG5vdGlmaWNhdGlvbkNvbmZpZ1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgcHJvdmlkZTogRnhVc2VyTm90aWZpY2F0aW9uU2VydmljZSxcclxuICAgICAgICAgIHVzZUNsYXNzOiBGeFVzZXJOb3RpZmljYXRpb25Mb2NhbERldmVsb3BtZW50U2VydmljZVxyXG4gICAgICAgIH1cclxuICAgICAgXVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGeE5vdGlmaWNhdGlvbkNvbmZpZyB7XHJcbiAgbm90aWZpY2F0aW9uX3NlcnZpY2VfdXJsOiBzdHJpbmdcclxufVxyXG4iXX0=