/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FxWeekSelectorComponent } from './fx-week-selector.component';
import { FxTranslationModule } from '../fx-translation/fx-translation.module';
import { NgbDatepickerI18n, NgbDatepickerModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';
import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';
import { library } from '@fortawesome/fontawesome-svg-core';
import { faCalendarWeek as fasCalendarWeek } from '@fortawesome/free-solid-svg-icons/faCalendarWeek';
import { faCalendarAlt as fasCalendarAlt } from '@fortawesome/free-solid-svg-icons/faCalendarAlt';
import { faCalendarAlt as farCalendarAlt } from '@fortawesome/free-regular-svg-icons/faCalendarAlt';
import { faCalendar as fasCalendar } from '@fortawesome/free-solid-svg-icons/faCalendar';
import { faCalendar as farCalendar } from '@fortawesome/free-regular-svg-icons/faCalendar';
import { FxWeekSelectorI18n, I18n } from './fx-week-selector-i18n';
import { ClickOutsideModule } from 'ng-click-outside';
library.add(fasCalendarWeek, fasCalendarAlt, farCalendarAlt, fasCalendar, farCalendar);
export class FxWeekSelectorModule {
}
FxWeekSelectorModule.decorators = [
    { type: NgModule, args: [{
                declarations: [FxWeekSelectorComponent],
                imports: [
                    CommonModule,
                    FxTranslationModule,
                    NgbDatepickerModule,
                    FontAwesomeModule,
                    ClickOutsideModule,
                    NgbTooltipModule
                ],
                exports: [
                    FxWeekSelectorComponent
                ],
                providers: [I18n, { provide: NgbDatepickerI18n, useClass: FxWeekSelectorI18n }]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZngtd2Vlay1zZWxlY3Rvci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZngtbGliL2NvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvZngtd2Vlay1zZWxlY3Rvci9meC13ZWVrLXNlbGVjdG9yLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQTtBQUN4QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUE7QUFDOUMsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOEJBQThCLENBQUE7QUFDdEUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUNBQXlDLENBQUE7QUFDN0UsT0FBTyxFQUFFLGlCQUFpQixFQUFFLG1CQUFtQixFQUFFLGdCQUFnQixFQUFFLE1BQU0sNEJBQTRCLENBQUE7QUFDckcsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sa0NBQWtDLENBQUE7QUFDcEUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG1DQUFtQyxDQUFBO0FBQzNELE9BQU8sRUFBRSxjQUFjLElBQUksZUFBZSxFQUFFLE1BQU0sa0RBQWtELENBQUE7QUFDcEcsT0FBTyxFQUFFLGFBQWEsSUFBSSxjQUFjLEVBQUUsTUFBTSxpREFBaUQsQ0FBQTtBQUNqRyxPQUFPLEVBQUUsYUFBYSxJQUFJLGNBQWMsRUFBRSxNQUFNLG1EQUFtRCxDQUFBO0FBQ25HLE9BQU8sRUFBRSxVQUFVLElBQUksV0FBVyxFQUFFLE1BQU0sOENBQThDLENBQUE7QUFDeEYsT0FBTyxFQUFFLFVBQVUsSUFBSSxXQUFXLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQTtBQUMxRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsSUFBSSxFQUFFLE1BQU0seUJBQXlCLENBQUE7QUFDbEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0JBQWtCLENBQUE7QUFFckQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxXQUFXLEVBQUUsV0FBVyxDQUFDLENBQUE7QUFpQnRGLE1BQU0sT0FBTyxvQkFBb0I7OztZQWZoQyxRQUFRLFNBQUM7Z0JBQ1IsWUFBWSxFQUFFLENBQUMsdUJBQXVCLENBQUM7Z0JBQ3ZDLE9BQU8sRUFBRTtvQkFDUCxZQUFZO29CQUNaLG1CQUFtQjtvQkFDbkIsbUJBQW1CO29CQUNuQixpQkFBaUI7b0JBQ2pCLGtCQUFrQjtvQkFDbEIsZ0JBQWdCO2lCQUNqQjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsdUJBQXVCO2lCQUN4QjtnQkFDRCxTQUFTLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsUUFBUSxFQUFFLGtCQUFrQixFQUFFLENBQUM7YUFDaEYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbidcclxuaW1wb3J0IHsgRnhXZWVrU2VsZWN0b3JDb21wb25lbnQgfSBmcm9tICcuL2Z4LXdlZWstc2VsZWN0b3IuY29tcG9uZW50J1xyXG5pbXBvcnQgeyBGeFRyYW5zbGF0aW9uTW9kdWxlIH0gZnJvbSAnLi4vZngtdHJhbnNsYXRpb24vZngtdHJhbnNsYXRpb24ubW9kdWxlJ1xyXG5pbXBvcnQgeyBOZ2JEYXRlcGlja2VySTE4biwgTmdiRGF0ZXBpY2tlck1vZHVsZSwgTmdiVG9vbHRpcE1vZHVsZSB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJ1xyXG5pbXBvcnQgeyBGb250QXdlc29tZU1vZHVsZSB9IGZyb20gJ0Bmb3J0YXdlc29tZS9hbmd1bGFyLWZvbnRhd2Vzb21lJ1xyXG5pbXBvcnQgeyBsaWJyYXJ5IH0gZnJvbSAnQGZvcnRhd2Vzb21lL2ZvbnRhd2Vzb21lLXN2Zy1jb3JlJ1xyXG5pbXBvcnQgeyBmYUNhbGVuZGFyV2VlayBhcyBmYXNDYWxlbmRhcldlZWsgfSBmcm9tICdAZm9ydGF3ZXNvbWUvZnJlZS1zb2xpZC1zdmctaWNvbnMvZmFDYWxlbmRhcldlZWsnXHJcbmltcG9ydCB7IGZhQ2FsZW5kYXJBbHQgYXMgZmFzQ2FsZW5kYXJBbHQgfSBmcm9tICdAZm9ydGF3ZXNvbWUvZnJlZS1zb2xpZC1zdmctaWNvbnMvZmFDYWxlbmRhckFsdCdcclxuaW1wb3J0IHsgZmFDYWxlbmRhckFsdCBhcyBmYXJDYWxlbmRhckFsdCB9IGZyb20gJ0Bmb3J0YXdlc29tZS9mcmVlLXJlZ3VsYXItc3ZnLWljb25zL2ZhQ2FsZW5kYXJBbHQnXHJcbmltcG9ydCB7IGZhQ2FsZW5kYXIgYXMgZmFzQ2FsZW5kYXIgfSBmcm9tICdAZm9ydGF3ZXNvbWUvZnJlZS1zb2xpZC1zdmctaWNvbnMvZmFDYWxlbmRhcidcclxuaW1wb3J0IHsgZmFDYWxlbmRhciBhcyBmYXJDYWxlbmRhciB9IGZyb20gJ0Bmb3J0YXdlc29tZS9mcmVlLXJlZ3VsYXItc3ZnLWljb25zL2ZhQ2FsZW5kYXInXHJcbmltcG9ydCB7IEZ4V2Vla1NlbGVjdG9ySTE4biwgSTE4biB9IGZyb20gJy4vZngtd2Vlay1zZWxlY3Rvci1pMThuJ1xyXG5pbXBvcnQgeyBDbGlja091dHNpZGVNb2R1bGUgfSBmcm9tICduZy1jbGljay1vdXRzaWRlJ1xyXG5cclxubGlicmFyeS5hZGQoZmFzQ2FsZW5kYXJXZWVrLCBmYXNDYWxlbmRhckFsdCwgZmFyQ2FsZW5kYXJBbHQsIGZhc0NhbGVuZGFyLCBmYXJDYWxlbmRhcilcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbRnhXZWVrU2VsZWN0b3JDb21wb25lbnRdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIEZ4VHJhbnNsYXRpb25Nb2R1bGUsXHJcbiAgICBOZ2JEYXRlcGlja2VyTW9kdWxlLFxyXG4gICAgRm9udEF3ZXNvbWVNb2R1bGUsXHJcbiAgICBDbGlja091dHNpZGVNb2R1bGUsXHJcbiAgICBOZ2JUb29sdGlwTW9kdWxlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBGeFdlZWtTZWxlY3RvckNvbXBvbmVudFxyXG4gIF0sXHJcbiAgcHJvdmlkZXJzOiBbSTE4biwgeyBwcm92aWRlOiBOZ2JEYXRlcGlja2VySTE4biwgdXNlQ2xhc3M6IEZ4V2Vla1NlbGVjdG9ySTE4biB9XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRnhXZWVrU2VsZWN0b3JNb2R1bGUgeyB9XHJcbiJdfQ==