/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @param {?} originalArray
 * @return {?}
 */
export function getShuffleArray(originalArray) {
    /** @type {?} */
    const array = Object.assign([], originalArray);
    for (let i = array.length - 1; i > 0; i--) {
        /** @type {?} */
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
}
/**
 * @param {?} arrayFirst
 * @param {?} propertyKey
 * @return {?}
 */
export function getUniqueArray(arrayFirst, propertyKey) {
    /** @type {?} */
    const unique = arrayFirst
        .map((/**
     * @param {?} item
     * @return {?}
     */
    item => item[propertyKey]))
        .map((/**
     * @param {?} item
     * @param {?} index
     * @param {?} final
     * @return {?}
     */
    (item, index, final) => final.indexOf(item) === index && index))
        .filter((/**
     * @param {?} index
     * @return {?}
     */
    index => arrayFirst[index]))
        .map((/**
     * @param {?} index
     * @return {?}
     */
    index => arrayFirst[index]));
    return unique;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYXkuaGVscGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ4LWxpYi9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL3NoYXJlZC9oZWxwZXIvYXJyYXkuaGVscGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsTUFBTSxVQUFVLGVBQWUsQ0FBQyxhQUF5Qjs7VUFDakQsS0FBSyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLGFBQWEsQ0FBQztJQUM5QyxLQUFLLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7O2NBQ25DLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM3QyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtLQUM1QztJQUNELE9BQU8sS0FBSyxDQUFBO0FBQ2QsQ0FBQzs7Ozs7O0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxVQUFzQixFQUFFLFdBQW1COztVQUNsRSxNQUFNLEdBQUcsVUFBVTtTQUN0QixHQUFHOzs7O0lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUM7U0FDOUIsR0FBRzs7Ozs7O0lBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFLLElBQUksS0FBSyxFQUFDO1NBQ25FLE1BQU07Ozs7SUFBQyxLQUFLLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsRUFBQztTQUNsQyxHQUFHOzs7O0lBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEVBQUM7SUFDbEMsT0FBTyxNQUFNLENBQUE7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGdldFNodWZmbGVBcnJheShvcmlnaW5hbEFycmF5OiBBcnJheTxhbnk+KTogQXJyYXk8YW55PiB7XHJcbiAgY29uc3QgYXJyYXkgPSBPYmplY3QuYXNzaWduKFtdLCBvcmlnaW5hbEFycmF5KVxyXG4gIGZvciAobGV0IGkgPSBhcnJheS5sZW5ndGggLSAxOyBpID4gMDsgaS0tKSB7XHJcbiAgICBjb25zdCBqID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGkgKyAxKSk7XHJcbiAgICBbYXJyYXlbaV0sIGFycmF5W2pdXSA9IFthcnJheVtqXSwgYXJyYXlbaV1dXHJcbiAgfVxyXG4gIHJldHVybiBhcnJheVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0VW5pcXVlQXJyYXkoYXJyYXlGaXJzdDogQXJyYXk8YW55PiwgcHJvcGVydHlLZXk6IHN0cmluZyk6IEFycmF5PGFueT4ge1xyXG4gIGNvbnN0IHVuaXF1ZSA9IGFycmF5Rmlyc3RcclxuICAgIC5tYXAoaXRlbSA9PiBpdGVtW3Byb3BlcnR5S2V5XSlcclxuICAgIC5tYXAoKGl0ZW0sIGluZGV4LCBmaW5hbCkgPT4gZmluYWwuaW5kZXhPZihpdGVtKSA9PT0gaW5kZXggJiYgaW5kZXgpXHJcbiAgICAuZmlsdGVyKGluZGV4ID0+IGFycmF5Rmlyc3RbaW5kZXhdKVxyXG4gICAgLm1hcChpbmRleCA9PiBhcnJheUZpcnN0W2luZGV4XSlcclxuICByZXR1cm4gdW5pcXVlXHJcbn1cclxuIl19