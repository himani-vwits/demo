/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FxHeaderComponent } from './fx-header.component';
import { FxBoundarySelectorModule } from '../fx-boundary-selector/fx-boundary-selector.module';
import { FxSecurityModule } from '../fx-security/fx-security.module';
import { FxConfidentialityLogoModule } from '../fx-confidentiality-logo/fx-confidentiality-logo.module';
import { FxBoundarySelectorComponent } from '../fx-boundary-selector/fx-boundary-selector.component';
import { FxUserSelectorComponent } from '../fx-security/components/fx-user-selector/fx-user-selector.component';
import { FxWikiModule } from '../fx-wiki/fx-wiki.module';
import { FxHeaderConfigValidatorService } from './services/fx-header-config-validator.service';
import { FxHeaderConfigService } from './services/fx-header-config.service';
import { FxLoginComponent } from '../fx-security/components/fx-login/fx-login.component';
import { NgbModule } from '@ng-bootstrap/ng-bootstrap';
import { FxTranslationModule } from '../fx-translation/fx-translation.module';
import { RouterModule } from '@angular/router';
import { FxHeaderAppSpecificTextComponent } from './components/fx-header-app-specific-text.component';
import { FxWikiComponent } from '../fx-wiki/fx-wiki.component';
import { FxConfidentialityLogoComponent } from '../fx-confidentiality-logo/fx-confidentiality-logo.component';
var FxHeaderModule = /** @class */ (function () {
    function FxHeaderModule() {
    }
    FxHeaderModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        FxHeaderComponent,
                        FxHeaderAppSpecificTextComponent
                    ],
                    exports: [
                        FxHeaderComponent,
                        FxHeaderAppSpecificTextComponent
                    ],
                    imports: [
                        RouterModule,
                        CommonModule,
                        FxBoundarySelectorModule,
                        FxSecurityModule,
                        FxConfidentialityLogoModule,
                        FxWikiModule,
                        NgbModule,
                        FxTranslationModule,
                    ],
                    providers: [
                        FxHeaderConfigService,
                        FxHeaderConfigValidatorService
                    ],
                    entryComponents: [FxBoundarySelectorComponent, FxUserSelectorComponent, FxLoginComponent, FxWikiComponent, FxConfidentialityLogoComponent, FxHeaderAppSpecificTextComponent]
                },] }
    ];
    return FxHeaderModule;
}());
export { FxHeaderModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZngtaGVhZGVyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmeC1saWIvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9meC1oZWFkZXIvZngtaGVhZGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQTtBQUN4QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUE7QUFDOUMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUE7QUFDekQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0scURBQXFELENBQUE7QUFDOUYsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sbUNBQW1DLENBQUE7QUFDcEUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sMkRBQTJELENBQUE7QUFDdkcsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sd0RBQXdELENBQUE7QUFDcEcsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUVBQXVFLENBQUE7QUFDL0csT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDJCQUEyQixDQUFBO0FBQ3hELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLCtDQUErQyxDQUFBO0FBQzlGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFBO0FBQzNFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHVEQUF1RCxDQUFBO0FBQ3hGLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQTtBQUN0RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQTtBQUM3RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUE7QUFDOUMsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sb0RBQW9ELENBQUE7QUFDckcsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDhCQUE4QixDQUFBO0FBQzlELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLDhEQUE4RCxDQUFBO0FBRTdHO0lBQUE7SUF5QjhCLENBQUM7O2dCQXpCOUIsUUFBUSxTQUFDO29CQUNOLFlBQVksRUFBRTt3QkFDVixpQkFBaUI7d0JBQ2pCLGdDQUFnQztxQkFDbkM7b0JBQ0QsT0FBTyxFQUFFO3dCQUNMLGlCQUFpQjt3QkFDakIsZ0NBQWdDO3FCQUNuQztvQkFDRCxPQUFPLEVBQUU7d0JBQ0wsWUFBWTt3QkFDWixZQUFZO3dCQUNaLHdCQUF3Qjt3QkFDeEIsZ0JBQWdCO3dCQUNoQiwyQkFBMkI7d0JBQzNCLFlBQVk7d0JBQ1osU0FBUzt3QkFDVCxtQkFBbUI7cUJBQ3RCO29CQUNELFNBQVMsRUFBRTt3QkFDUCxxQkFBcUI7d0JBQ3JCLDhCQUE4QjtxQkFDakM7b0JBQ0QsZUFBZSxFQUFFLENBQUMsMkJBQTJCLEVBQUUsdUJBQXVCLEVBQUUsZ0JBQWdCLEVBQUUsZUFBZSxFQUFFLDhCQUE4QixFQUFFLGdDQUFnQyxDQUFDO2lCQUMvSzs7SUFDNkIscUJBQUM7Q0FBQSxBQXpCL0IsSUF5QitCO1NBQWxCLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbidcclxuaW1wb3J0IHsgRnhIZWFkZXJDb21wb25lbnQgfSBmcm9tICcuL2Z4LWhlYWRlci5jb21wb25lbnQnXHJcbmltcG9ydCB7IEZ4Qm91bmRhcnlTZWxlY3Rvck1vZHVsZSB9IGZyb20gJy4uL2Z4LWJvdW5kYXJ5LXNlbGVjdG9yL2Z4LWJvdW5kYXJ5LXNlbGVjdG9yLm1vZHVsZSdcclxuaW1wb3J0IHsgRnhTZWN1cml0eU1vZHVsZSB9IGZyb20gJy4uL2Z4LXNlY3VyaXR5L2Z4LXNlY3VyaXR5Lm1vZHVsZSdcclxuaW1wb3J0IHsgRnhDb25maWRlbnRpYWxpdHlMb2dvTW9kdWxlIH0gZnJvbSAnLi4vZngtY29uZmlkZW50aWFsaXR5LWxvZ28vZngtY29uZmlkZW50aWFsaXR5LWxvZ28ubW9kdWxlJ1xyXG5pbXBvcnQgeyBGeEJvdW5kYXJ5U2VsZWN0b3JDb21wb25lbnQgfSBmcm9tICcuLi9meC1ib3VuZGFyeS1zZWxlY3Rvci9meC1ib3VuZGFyeS1zZWxlY3Rvci5jb21wb25lbnQnXHJcbmltcG9ydCB7IEZ4VXNlclNlbGVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi4vZngtc2VjdXJpdHkvY29tcG9uZW50cy9meC11c2VyLXNlbGVjdG9yL2Z4LXVzZXItc2VsZWN0b3IuY29tcG9uZW50J1xyXG5pbXBvcnQgeyBGeFdpa2lNb2R1bGUgfSBmcm9tICcuLi9meC13aWtpL2Z4LXdpa2kubW9kdWxlJ1xyXG5pbXBvcnQgeyBGeEhlYWRlckNvbmZpZ1ZhbGlkYXRvclNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2Z4LWhlYWRlci1jb25maWctdmFsaWRhdG9yLnNlcnZpY2UnXHJcbmltcG9ydCB7IEZ4SGVhZGVyQ29uZmlnU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvZngtaGVhZGVyLWNvbmZpZy5zZXJ2aWNlJ1xyXG5pbXBvcnQgeyBGeExvZ2luQ29tcG9uZW50IH0gZnJvbSAnLi4vZngtc2VjdXJpdHkvY29tcG9uZW50cy9meC1sb2dpbi9meC1sb2dpbi5jb21wb25lbnQnXHJcbmltcG9ydCB7IE5nYk1vZHVsZSB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJ1xyXG5pbXBvcnQgeyBGeFRyYW5zbGF0aW9uTW9kdWxlIH0gZnJvbSAnLi4vZngtdHJhbnNsYXRpb24vZngtdHJhbnNsYXRpb24ubW9kdWxlJ1xyXG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInXHJcbmltcG9ydCB7IEZ4SGVhZGVyQXBwU3BlY2lmaWNUZXh0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2Z4LWhlYWRlci1hcHAtc3BlY2lmaWMtdGV4dC5jb21wb25lbnQnXHJcbmltcG9ydCB7IEZ4V2lraUNvbXBvbmVudCB9IGZyb20gJy4uL2Z4LXdpa2kvZngtd2lraS5jb21wb25lbnQnXHJcbmltcG9ydCB7IEZ4Q29uZmlkZW50aWFsaXR5TG9nb0NvbXBvbmVudCB9IGZyb20gJy4uL2Z4LWNvbmZpZGVudGlhbGl0eS1sb2dvL2Z4LWNvbmZpZGVudGlhbGl0eS1sb2dvLmNvbXBvbmVudCdcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICBGeEhlYWRlckNvbXBvbmVudCxcclxuICAgICAgICBGeEhlYWRlckFwcFNwZWNpZmljVGV4dENvbXBvbmVudFxyXG4gICAgXSxcclxuICAgIGV4cG9ydHM6IFtcclxuICAgICAgICBGeEhlYWRlckNvbXBvbmVudCxcclxuICAgICAgICBGeEhlYWRlckFwcFNwZWNpZmljVGV4dENvbXBvbmVudFxyXG4gICAgXSxcclxuICAgIGltcG9ydHM6IFtcclxuICAgICAgICBSb3V0ZXJNb2R1bGUsXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIEZ4Qm91bmRhcnlTZWxlY3Rvck1vZHVsZSxcclxuICAgICAgICBGeFNlY3VyaXR5TW9kdWxlLFxyXG4gICAgICAgIEZ4Q29uZmlkZW50aWFsaXR5TG9nb01vZHVsZSxcclxuICAgICAgICBGeFdpa2lNb2R1bGUsXHJcbiAgICAgICAgTmdiTW9kdWxlLFxyXG4gICAgICAgIEZ4VHJhbnNsYXRpb25Nb2R1bGUsXHJcbiAgICBdLFxyXG4gICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgRnhIZWFkZXJDb25maWdTZXJ2aWNlLFxyXG4gICAgICAgIEZ4SGVhZGVyQ29uZmlnVmFsaWRhdG9yU2VydmljZVxyXG4gICAgXSxcclxuICAgIGVudHJ5Q29tcG9uZW50czogW0Z4Qm91bmRhcnlTZWxlY3RvckNvbXBvbmVudCwgRnhVc2VyU2VsZWN0b3JDb21wb25lbnQsIEZ4TG9naW5Db21wb25lbnQsIEZ4V2lraUNvbXBvbmVudCwgRnhDb25maWRlbnRpYWxpdHlMb2dvQ29tcG9uZW50LCBGeEhlYWRlckFwcFNwZWNpZmljVGV4dENvbXBvbmVudF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEZ4SGVhZGVyTW9kdWxlIHsgfVxyXG4iXX0=