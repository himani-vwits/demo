/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { FxHeaderConfigValidatorService } from './fx-header-config-validator.service';
var FxHeaderConfigService = /** @class */ (function () {
    function FxHeaderConfigService(fxheaderConfigValidatorService) {
        this.fxheaderConfigValidatorService = fxheaderConfigValidatorService;
        this.config = new BehaviorSubject({
            appTitleShort: '',
            appTitle: '',
            routes: [],
            staticComponents: [],
            components: []
        });
    }
    /**
     * @param {?} config
     * @return {?}
     */
    FxHeaderConfigService.prototype.setConfig = /**
     * @param {?} config
     * @return {?}
     */
    function (config) {
        if (!this.fxheaderConfigValidatorService.validate(config)) {
            return;
        }
        this.config.next(config);
    };
    FxHeaderConfigService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    FxHeaderConfigService.ctorParameters = function () { return [
        { type: FxHeaderConfigValidatorService }
    ]; };
    return FxHeaderConfigService;
}());
export { FxHeaderConfigService };
if (false) {
    /** @type {?} */
    FxHeaderConfigService.prototype.config;
    /**
     * @type {?}
     * @private
     */
    FxHeaderConfigService.prototype.fxheaderConfigValidatorService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZngtaGVhZGVyLWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ4LWxpYi9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2Z4LWhlYWRlci9zZXJ2aWNlcy9meC1oZWFkZXItY29uZmlnLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUE7QUFDMUMsT0FBTyxFQUFXLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQTtBQUMvQyxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQTtBQUdyRjtJQVdJLCtCQUFvQiw4QkFBOEQ7UUFBOUQsbUNBQThCLEdBQTlCLDhCQUE4QixDQUFnQztRQVIzRSxXQUFNLEdBQWlDLElBQUksZUFBZSxDQUFzQjtZQUNuRixhQUFhLEVBQUUsRUFBRTtZQUNqQixRQUFRLEVBQUUsRUFBRTtZQUNaLE1BQU0sRUFBRSxFQUFFO1lBQ1YsZ0JBQWdCLEVBQUUsRUFBRTtZQUNwQixVQUFVLEVBQUUsRUFBRTtTQUNqQixDQUFDLENBQUE7SUFFb0YsQ0FBQzs7Ozs7SUFFaEYseUNBQVM7Ozs7SUFBaEIsVUFBaUIsTUFBMkI7UUFDeEMsSUFBSSxDQUFDLElBQUksQ0FBQyw4QkFBOEIsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDdkQsT0FBTTtTQUNUO1FBRUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7SUFDNUIsQ0FBQzs7Z0JBbkJKLFVBQVU7Ozs7Z0JBSEYsOEJBQThCOztJQXdCdkMsNEJBQUM7Q0FBQSxBQXJCRCxJQXFCQztTQXBCWSxxQkFBcUI7OztJQUU5Qix1Q0FNRTs7Ozs7SUFFVSwrREFBc0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSdcclxuaW1wb3J0IHsgU3ViamVjdCwgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcydcclxuaW1wb3J0IHsgRnhIZWFkZXJDb25maWdWYWxpZGF0b3JTZXJ2aWNlIH0gZnJvbSAnLi9meC1oZWFkZXItY29uZmlnLXZhbGlkYXRvci5zZXJ2aWNlJ1xyXG5pbXBvcnQgeyBGeEhlYWRlckNvbmZpZ01vZGVsIH0gZnJvbSAnLi4vbW9kZWxzL2NvbmZpZy9meC1oZWFkZXItY29uZmlnLm1vZGVsJ1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgRnhIZWFkZXJDb25maWdTZXJ2aWNlIHtcclxuXHJcbiAgICBwdWJsaWMgY29uZmlnOiBTdWJqZWN0PEZ4SGVhZGVyQ29uZmlnTW9kZWw+ID0gbmV3IEJlaGF2aW9yU3ViamVjdDxGeEhlYWRlckNvbmZpZ01vZGVsPih7XHJcbiAgICAgICAgYXBwVGl0bGVTaG9ydDogJycsXHJcbiAgICAgICAgYXBwVGl0bGU6ICcnLFxyXG4gICAgICAgIHJvdXRlczogW10sXHJcbiAgICAgICAgc3RhdGljQ29tcG9uZW50czogW10sXHJcbiAgICAgICAgY29tcG9uZW50czogW11cclxuICAgIH0pXHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBmeGhlYWRlckNvbmZpZ1ZhbGlkYXRvclNlcnZpY2U6IEZ4SGVhZGVyQ29uZmlnVmFsaWRhdG9yU2VydmljZSkgeyB9XHJcblxyXG4gICAgcHVibGljIHNldENvbmZpZyhjb25maWc6IEZ4SGVhZGVyQ29uZmlnTW9kZWwpOiB2b2lkIHtcclxuICAgICAgICBpZiAoIXRoaXMuZnhoZWFkZXJDb25maWdWYWxpZGF0b3JTZXJ2aWNlLnZhbGlkYXRlKGNvbmZpZykpIHtcclxuICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmNvbmZpZy5uZXh0KGNvbmZpZylcclxuICAgIH1cclxuXHJcbn1cclxuIl19