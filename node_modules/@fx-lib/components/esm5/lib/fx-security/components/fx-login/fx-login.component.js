/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, Input } from '@angular/core';
import { Subscription } from 'rxjs';
import { AuthenticationService } from '../../services/authentication.service';
import { UserService } from '../../services/user.service';
import { faUser } from '@fortawesome/free-solid-svg-icons/faUser';
var FxLoginComponent = /** @class */ (function () {
    function FxLoginComponent(authenticationService, userService, changeDetector) {
        this.authenticationService = authenticationService;
        this.userService = userService;
        this.changeDetector = changeDetector;
        this.btnStyle = '';
        this.dropDownStyling = '';
        this.languageSelectorRadioGroupStyling = 'fx-styling';
        this.icon = 'fa-user';
        this.fasUser = faUser;
        this.subscriptions = new Subscription();
    }
    /**
     * @return {?}
     */
    FxLoginComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.subscriptions.add(this.authenticationService.loginEvents.subscribe((/**
         * @return {?}
         */
        function () {
            _this.username = _this.userService.getUsername();
            _this.changeDetector.markForCheck();
        })));
    };
    /**
     * @return {?}
     */
    FxLoginComponent.prototype.isNotLoggedIn = /**
     * @return {?}
     */
    function () {
        return !this.username || this.username.trim().length === 0;
    };
    /**
     * @return {?}
     */
    FxLoginComponent.prototype.login = /**
     * @return {?}
     */
    function () {
        this.authenticationService.loginWithRedirectUrl();
    };
    /**
     * @return {?}
     */
    FxLoginComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.subscriptions.unsubscribe();
    };
    /**
     * @param {?=} selectedIcon
     * @return {?}
     */
    FxLoginComponent.prototype.setIcon = /**
     * @param {?=} selectedIcon
     * @return {?}
     */
    function (selectedIcon) {
        switch (selectedIcon) {
            case 'fasUser': {
                return this.fasUser;
            }
            default: {
                return this.fasUser;
            }
        }
    };
    FxLoginComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-fx-login',
                    template: "<div [ngClass]=\"dropDownStyling\">\r\n  <div ngbDropdown class=\"dropdown\">\r\n    <button [ngClass]=\"['btn', btnStyle]\" type=\"button\" id=\"dropdownLoginButton\" ngbDropdownToggle>\r\n      <fa-icon *ngIf=\"icon\" [icon]=\"setIcon(icon)\"></fa-icon>\r\n      <a *ngIf=\"icon\">&nbsp;</a>\r\n      {{ !isNotLoggedIn() ? username : 'i18n.fx-components.security.login' | translate}}\r\n    </button>\r\n\r\n    <div ngbDropdownMenu class=\"dropdown-menu\" aria-labelledby=\"dropdownLoginButton\">\r\n      <div>\r\n        <app-fx-language-selector [radioGroupStyling]=\"languageSelectorRadioGroupStyling\"></app-fx-language-selector>\r\n      </div>\r\n      <div class=\"dropdown-divider\"></div>\r\n      <button ngbDropdownItem class=\"dropdown-item\" appLogout=\"\" *ngIf=\"!isNotLoggedIn()\">\r\n        {{'i18n.fx-components.security.logout' | translate}}\r\n      </button>\r\n      <button ngbDropdownItem class=\"dropdown-item\" (click)=\"login()\" *ngIf=\"isNotLoggedIn()\">\r\n        {{'i18n.fx-components.security.login' | translate}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>",
                    styles: [".login-icon{padding-right:4px}.fx-styling .no-permission-text{color:#fff}.fx-styling .btn,.fx-styling .btn:hover{color:#fff;background-color:transparent}.fx-styling .btn:focus{box-shadow:none}.fx-styling .dropdown-item:active{background-color:#004666}"]
                }] }
    ];
    /** @nocollapse */
    FxLoginComponent.ctorParameters = function () { return [
        { type: AuthenticationService },
        { type: UserService },
        { type: ChangeDetectorRef }
    ]; };
    FxLoginComponent.propDecorators = {
        btnStyle: [{ type: Input }],
        dropDownStyling: [{ type: Input }],
        languageSelectorRadioGroupStyling: [{ type: Input }],
        icon: [{ type: Input }]
    };
    return FxLoginComponent;
}());
export { FxLoginComponent };
if (false) {
    /** @type {?} */
    FxLoginComponent.prototype.btnStyle;
    /** @type {?} */
    FxLoginComponent.prototype.dropDownStyling;
    /** @type {?} */
    FxLoginComponent.prototype.languageSelectorRadioGroupStyling;
    /** @type {?} */
    FxLoginComponent.prototype.icon;
    /** @type {?} */
    FxLoginComponent.prototype.fasUser;
    /** @type {?} */
    FxLoginComponent.prototype.username;
    /**
     * @type {?}
     * @private
     */
    FxLoginComponent.prototype.subscriptions;
    /**
     * @type {?}
     * @private
     */
    FxLoginComponent.prototype.authenticationService;
    /**
     * @type {?}
     * @private
     */
    FxLoginComponent.prototype.userService;
    /**
     * @type {?}
     * @private
     */
    FxLoginComponent.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZngtbG9naW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ4LWxpYi9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2Z4LXNlY3VyaXR5L2NvbXBvbmVudHMvZngtbG9naW4vZngtbG9naW4uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxlQUFlLENBQUE7QUFDdEYsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLE1BQU0sQ0FBQTtBQUNuQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQTtBQUM3RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNkJBQTZCLENBQUE7QUFFekQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLDBDQUEwQyxDQUFBO0FBRWpFO0lBeUJFLDBCQUFvQixxQkFBNEMsRUFDNUMsV0FBd0IsRUFDeEIsY0FBaUM7UUFGakMsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUF1QjtRQUM1QyxnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQUN4QixtQkFBYyxHQUFkLGNBQWMsQ0FBbUI7UUFuQjlDLGFBQVEsR0FBRyxFQUFFLENBQUE7UUFHYixvQkFBZSxHQUFHLEVBQUUsQ0FBQTtRQUdwQixzQ0FBaUMsR0FBRyxZQUFZLENBQUE7UUFHaEQsU0FBSSxHQUFHLFNBQVMsQ0FBQTtRQUVoQixZQUFPLEdBQWEsTUFBTSxDQUFBO1FBSXpCLGtCQUFhLEdBQWlCLElBQUksWUFBWSxFQUFFLENBQUE7SUFLeEQsQ0FBQzs7OztJQUVNLG1DQUFROzs7SUFBZjtRQUFBLGlCQUtDO1FBSkMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFdBQVcsQ0FBQyxTQUFTOzs7UUFBQztZQUN0RSxLQUFJLENBQUMsUUFBUSxHQUFHLEtBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxFQUFFLENBQUE7WUFDOUMsS0FBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsQ0FBQTtRQUNwQyxDQUFDLEVBQUMsQ0FBQyxDQUFBO0lBQ0wsQ0FBQzs7OztJQUVNLHdDQUFhOzs7SUFBcEI7UUFDRSxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUE7SUFDNUQsQ0FBQzs7OztJQUVNLGdDQUFLOzs7SUFBWjtRQUNFLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxvQkFBb0IsRUFBRSxDQUFBO0lBQ25ELENBQUM7Ozs7SUFFTSxzQ0FBVzs7O0lBQWxCO1FBQ0UsSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtJQUNsQyxDQUFDOzs7OztJQUVNLGtDQUFPOzs7O0lBQWQsVUFBZSxZQUFxQjtRQUNsQyxRQUFRLFlBQVksRUFBRTtZQUNwQixLQUFLLFNBQVMsQ0FBQyxDQUFDO2dCQUNkLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQTthQUNwQjtZQUNELE9BQU8sQ0FBQyxDQUFDO2dCQUNQLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQTthQUNwQjtTQUNGO0lBQ0gsQ0FBQzs7Z0JBMURGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsY0FBYztvQkFDeEIsOGxDQUF3Qzs7aUJBRXpDOzs7O2dCQVRRLHFCQUFxQjtnQkFDckIsV0FBVztnQkFIWCxpQkFBaUI7OzsyQkFjdkIsS0FBSztrQ0FHTCxLQUFLO29EQUdMLEtBQUs7dUJBR0wsS0FBSzs7SUEyQ1IsdUJBQUM7Q0FBQSxBQTNERCxJQTJEQztTQXREWSxnQkFBZ0I7OztJQUUzQixvQ0FDb0I7O0lBRXBCLDJDQUMyQjs7SUFFM0IsNkRBQ3VEOztJQUV2RCxnQ0FDdUI7O0lBRXZCLG1DQUFpQzs7SUFFakMsb0NBQXVCOzs7OztJQUV2Qix5Q0FBd0Q7Ozs7O0lBRTVDLGlEQUFvRDs7Ozs7SUFDcEQsdUNBQWdDOzs7OztJQUNoQywwQ0FBeUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJ1xyXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJ1xyXG5pbXBvcnQgeyBBdXRoZW50aWNhdGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9hdXRoZW50aWNhdGlvbi5zZXJ2aWNlJ1xyXG5pbXBvcnQgeyBVc2VyU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3VzZXIuc2VydmljZSdcclxuaW1wb3J0IHsgSWNvblByb3AgfSBmcm9tICdAZm9ydGF3ZXNvbWUvZm9udGF3ZXNvbWUtc3ZnLWNvcmUnXHJcbmltcG9ydCB7IGZhVXNlciB9IGZyb20gJ0Bmb3J0YXdlc29tZS9mcmVlLXNvbGlkLXN2Zy1pY29ucy9mYVVzZXInXHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FwcC1meC1sb2dpbicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2Z4LWxvZ2luLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9meC1sb2dpbi5jb21wb25lbnQuc2NzcyddLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRnhMb2dpbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuXHJcbiAgQElucHV0KClcclxuICBwdWJsaWMgYnRuU3R5bGUgPSAnJ1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBkcm9wRG93blN0eWxpbmcgPSAnJ1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBsYW5ndWFnZVNlbGVjdG9yUmFkaW9Hcm91cFN0eWxpbmcgPSAnZngtc3R5bGluZydcclxuXHJcbiAgQElucHV0KClcclxuICBwdWJsaWMgaWNvbiA9ICdmYS11c2VyJ1xyXG5cclxuICBwdWJsaWMgZmFzVXNlcjogSWNvblByb3AgPSBmYVVzZXJcclxuXHJcbiAgcHVibGljIHVzZXJuYW1lOiBzdHJpbmdcclxuXHJcbiAgcHJpdmF0ZSBzdWJzY3JpcHRpb25zOiBTdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKClcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBhdXRoZW50aWNhdGlvblNlcnZpY2U6IEF1dGhlbnRpY2F0aW9uU2VydmljZSxcclxuICAgICAgICAgICAgICBwcml2YXRlIHVzZXJTZXJ2aWNlOiBVc2VyU2VydmljZSxcclxuICAgICAgICAgICAgICBwcml2YXRlIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZikge1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZCh0aGlzLmF1dGhlbnRpY2F0aW9uU2VydmljZS5sb2dpbkV2ZW50cy5zdWJzY3JpYmUoKCkgPT4ge1xyXG4gICAgICB0aGlzLnVzZXJuYW1lID0gdGhpcy51c2VyU2VydmljZS5nZXRVc2VybmFtZSgpXHJcbiAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IubWFya0ZvckNoZWNrKClcclxuICAgIH0pKVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGlzTm90TG9nZ2VkSW4oKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gIXRoaXMudXNlcm5hbWUgfHwgdGhpcy51c2VybmFtZS50cmltKCkubGVuZ3RoID09PSAwXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgbG9naW4oKTogdm9pZCB7XHJcbiAgICB0aGlzLmF1dGhlbnRpY2F0aW9uU2VydmljZS5sb2dpbldpdGhSZWRpcmVjdFVybCgpXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgbmdPbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICB0aGlzLnN1YnNjcmlwdGlvbnMudW5zdWJzY3JpYmUoKVxyXG4gIH1cclxuXHJcbiAgcHVibGljIHNldEljb24oc2VsZWN0ZWRJY29uPzogc3RyaW5nKTogSWNvblByb3Age1xyXG4gICAgc3dpdGNoIChzZWxlY3RlZEljb24pIHtcclxuICAgICAgY2FzZSAnZmFzVXNlcic6IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5mYXNVc2VyXHJcbiAgICAgIH1cclxuICAgICAgZGVmYXVsdDoge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmZhc1VzZXJcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=