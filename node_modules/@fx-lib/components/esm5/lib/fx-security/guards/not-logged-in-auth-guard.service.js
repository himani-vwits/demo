/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { AuthenticationService } from '../services/authentication.service';
var NotLoggedInAuthGuard = /** @class */ (function () {
    function NotLoggedInAuthGuard(authenticationService, router) {
        this.authenticationService = authenticationService;
        this.router = router;
    }
    /**
     * @param {?} route
     * @return {?}
     */
    NotLoggedInAuthGuard.prototype.canActivate = /**
     * @param {?} route
     * @return {?}
     */
    function (route) {
        if (this.authenticationService.isLoggedIn) {
            if (route.data && route.data.redirectTo) {
                this.router.navigateByUrl(route.data.redirectTo);
            }
            else {
                this.router.navigateByUrl('/');
            }
            return false;
        }
        return true;
    };
    NotLoggedInAuthGuard.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    NotLoggedInAuthGuard.ctorParameters = function () { return [
        { type: AuthenticationService },
        { type: Router }
    ]; };
    return NotLoggedInAuthGuard;
}());
export { NotLoggedInAuthGuard };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NotLoggedInAuthGuard.prototype.authenticationService;
    /**
     * @type {?}
     * @private
     */
    NotLoggedInAuthGuard.prototype.router;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90LWxvZ2dlZC1pbi1hdXRoLWd1YXJkLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZngtbGliL2NvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvZngtc2VjdXJpdHkvZ3VhcmRzL25vdC1sb2dnZWQtaW4tYXV0aC1ndWFyZC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFBO0FBQzFDLE9BQU8sRUFBdUMsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUE7QUFDN0UsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0NBQW9DLENBQUE7QUFFMUU7SUFHRSw4QkFBb0IscUJBQTRDLEVBQzVDLE1BQWM7UUFEZCwwQkFBcUIsR0FBckIscUJBQXFCLENBQXVCO1FBQzVDLFdBQU0sR0FBTixNQUFNLENBQVE7SUFDbEMsQ0FBQzs7Ozs7SUFFTSwwQ0FBVzs7OztJQUFsQixVQUFtQixLQUE2QjtRQUM5QyxJQUFJLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxVQUFVLEVBQUU7WUFDekMsSUFBSSxLQUFLLENBQUMsSUFBSSxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFO2dCQUN2QyxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFBO2FBQ2pEO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFBO2FBQy9CO1lBQ0QsT0FBTyxLQUFLLENBQUE7U0FDYjtRQUNELE9BQU8sSUFBSSxDQUFBO0lBQ2IsQ0FBQzs7Z0JBakJGLFVBQVU7Ozs7Z0JBRkYscUJBQXFCO2dCQURnQixNQUFNOztJQXNCcEQsMkJBQUM7Q0FBQSxBQW5CRCxJQW1CQztTQWxCWSxvQkFBb0I7Ozs7OztJQUVuQixxREFBb0Q7Ozs7O0lBQ3BELHNDQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJ1xyXG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBDYW5BY3RpdmF0ZSwgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJ1xyXG5pbXBvcnQgeyBBdXRoZW50aWNhdGlvblNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9hdXRoZW50aWNhdGlvbi5zZXJ2aWNlJ1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgTm90TG9nZ2VkSW5BdXRoR3VhcmQgaW1wbGVtZW50cyBDYW5BY3RpdmF0ZSB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYXV0aGVudGljYXRpb25TZXJ2aWNlOiBBdXRoZW50aWNhdGlvblNlcnZpY2UsXHJcbiAgICAgICAgICAgICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlcikge1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGNhbkFjdGl2YXRlKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90KTogYm9vbGVhbiB7XHJcbiAgICBpZiAodGhpcy5hdXRoZW50aWNhdGlvblNlcnZpY2UuaXNMb2dnZWRJbikge1xyXG4gICAgICBpZiAocm91dGUuZGF0YSAmJiByb3V0ZS5kYXRhLnJlZGlyZWN0VG8pIHtcclxuICAgICAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZUJ5VXJsKHJvdXRlLmRhdGEucmVkaXJlY3RUbylcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZUJ5VXJsKCcvJylcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gZmFsc2VcclxuICAgIH1cclxuICAgIHJldHVybiB0cnVlXHJcbiAgfVxyXG5cclxufVxyXG4iXX0=