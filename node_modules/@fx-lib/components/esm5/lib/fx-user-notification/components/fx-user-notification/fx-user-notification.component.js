/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { faBell } from '@fortawesome/free-solid-svg-icons';
import { FxUserNotificationService } from '../../services/fx-user-notification.service';
import { priorityMap } from '../../domain/fx-user-notification';
import { timer } from 'rxjs';
var FxUserNotificationComponent = /** @class */ (function () {
    function FxUserNotificationComponent(userNotificationService) {
        this.userNotificationService = userNotificationService;
        this.opened = false;
        this.icon = faBell;
        this.color = 'white';
        this.size = '2x';
        this.refreshInterval = 60000;
        this.charsOfShortText = 50;
        this.userNotificationList = [];
        this.userNotificationUnreadList = [];
        this.userNotificationReadList = [];
    }
    /**
     * @return {?}
     */
    FxUserNotificationComponent.prototype.getNotificationIconColor = /**
     * @return {?}
     */
    function () {
        return { color: this.color };
    };
    /**
     * @return {?}
     */
    FxUserNotificationComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.intervalTimeSubscription = timer(0, this.refreshInterval).subscribe((/**
         * @return {?}
         */
        function () {
            _this.receiveNotifications();
        }));
    };
    /**
     * @return {?}
     */
    FxUserNotificationComponent.prototype.receiveNotifications = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.userNotificationSubscription = this.userNotificationService.getNotifications().subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.sortNotificationsAndRemember(res);
        }));
    };
    /**
     * @return {?}
     */
    FxUserNotificationComponent.prototype.toggleNotificationArea = /**
     * @return {?}
     */
    function () {
        this.opened = !this.opened;
        if (!this.opened) {
            this.postReadNotificationLogAndRefreshNotifications();
        }
    };
    /**
     * @param {?} notificationData
     * @return {?}
     */
    FxUserNotificationComponent.prototype.sortNotificationsAndRemember = /**
     * @param {?} notificationData
     * @return {?}
     */
    function (notificationData) {
        this.userNotificationReadList = notificationData.filter((/**
         * @param {?} notification
         * @return {?}
         */
        function (notification) {
            return notification.read;
        }));
        this.userNotificationUnreadList = notificationData.filter((/**
         * @param {?} notification
         * @return {?}
         */
        function (notification) {
            return !notification.read;
        }));
        this.userNotificationList = this.sortNotification(this.userNotificationUnreadList).concat(this.sortNotification(this.userNotificationReadList));
        this.notificationCount = this.userNotificationUnreadList.length;
    };
    /**
     * @param {?} notificationData
     * @return {?}
     */
    FxUserNotificationComponent.prototype.sortNotification = /**
     * @param {?} notificationData
     * @return {?}
     */
    function (notificationData) {
        var _this = this;
        return notificationData.sort((/**
         * @param {?} notification1
         * @param {?} notification2
         * @return {?}
         */
        function (notification1, notification2) {
            {
                if (priorityMap.get(notification1.severity) < priorityMap.get(notification2.severity)) {
                    return -1;
                }
                if (priorityMap.get(notification1.severity) > priorityMap.get(notification2.severity)) {
                    return 1;
                }
                return _this.compareUpdateTime(new Date(notification1.updateTimestamp), new Date(notification2.updateTimestamp));
            }
        }));
    };
    /**
     * @return {?}
     */
    FxUserNotificationComponent.prototype.postReadNotificationLogAndRefreshNotifications = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.userNotificationService.postUserReadLog().toPromise().then((/**
         * @return {?}
         */
        function () {
            _this.receiveNotifications();
        }));
    };
    /**
     * @return {?}
     */
    FxUserNotificationComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.intervalTimeSubscription) {
            this.intervalTimeSubscription.unsubscribe();
        }
        if (this.userNotificationSubscription) {
            this.userNotificationSubscription.unsubscribe();
        }
    };
    /**
     * @private
     * @param {?} ts1
     * @param {?} ts2
     * @return {?}
     */
    FxUserNotificationComponent.prototype.compareUpdateTime = /**
     * @private
     * @param {?} ts1
     * @param {?} ts2
     * @return {?}
     */
    function (ts1, ts2) {
        if (ts1.getTime() < ts2.getTime()) {
            return 1;
        }
        else if (ts1.getTime() > ts2.getTime()) {
            return -1;
        }
        return 0;
    };
    FxUserNotificationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-fx-user-notification',
                    template: "<fa-icon [icon]=\"icon\" [size]=\"size\" [ngStyle]=\"getNotificationIconColor()\" (click)=\"toggleNotificationArea()\" class=\"notification-icon\"></fa-icon>\r\n<span [ngClass]=\"notificationCount == 0 ? 'hide-count': 'show-count'\">{{ notificationCount }}</span>\r\n\r\n<div [ngClass]=\"opened ? 'show' : 'hide'\"\r\n     class=\"menu-content\">\r\n  <div class=\"cross-icon\" (click)=\"toggleNotificationArea()\">\r\n    <i class=\"fa fa-times closeIcon\"></i>\r\n  </div>\r\n  <h6 class=\"card-title\">{{'i18n.user-notifications.title' | translate }}</h6>\r\n  <div *ngFor=\"let notification of userNotificationList let i=index\">\r\n    <app-fx-user-single-notification-area\r\n      [notification]=\"notification\"\r\n      [charsOfShortText]=\"charsOfShortText\"\r\n    ></app-fx-user-single-notification-area>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n",
                    styles: [".notification-card{max-width:500px;margin-top:24px}.hide-count{display:none}.menu-content{position:absolute;top:0;height:100vh;background-color:#f5f5f5}.show{display:block;position:absolute;overflow:auto;padding:8px;width:380px;margin-top:56px;height:calc(100vh - 96px)}.hide{display:none}.cross-icon{float:right;color:#fff!important}.icons{text-align:right}.closeIcon{color:grey;margin-right:5px;cursor:pointer}.show-count{margin-top:-1px;position:absolute;margin-left:-11px;color:#fff;background-color:red;min-width:21px;border-radius:6px;font-size:small;text-align:center}.card-title{background-color:#004666;color:#fff;text-align:center;height:23px}.notification-icon{cursor:pointer}"]
                }] }
    ];
    /** @nocollapse */
    FxUserNotificationComponent.ctorParameters = function () { return [
        { type: FxUserNotificationService }
    ]; };
    FxUserNotificationComponent.propDecorators = {
        icon: [{ type: Input }],
        color: [{ type: Input }],
        size: [{ type: Input }],
        refreshInterval: [{ type: Input }],
        charsOfShortText: [{ type: Input }]
    };
    return FxUserNotificationComponent;
}());
export { FxUserNotificationComponent };
if (false) {
    /** @type {?} */
    FxUserNotificationComponent.prototype.opened;
    /** @type {?} */
    FxUserNotificationComponent.prototype.icon;
    /** @type {?} */
    FxUserNotificationComponent.prototype.color;
    /** @type {?} */
    FxUserNotificationComponent.prototype.size;
    /** @type {?} */
    FxUserNotificationComponent.prototype.refreshInterval;
    /** @type {?} */
    FxUserNotificationComponent.prototype.charsOfShortText;
    /** @type {?} */
    FxUserNotificationComponent.prototype.userNotificationList;
    /** @type {?} */
    FxUserNotificationComponent.prototype.userNotificationUnreadList;
    /** @type {?} */
    FxUserNotificationComponent.prototype.userNotificationReadList;
    /** @type {?} */
    FxUserNotificationComponent.prototype.notificationCount;
    /** @type {?} */
    FxUserNotificationComponent.prototype.intervalTimeSubscription;
    /**
     * @type {?}
     * @private
     */
    FxUserNotificationComponent.prototype.userNotificationSubscription;
    /**
     * @type {?}
     * @private
     */
    FxUserNotificationComponent.prototype.userNotificationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZngtdXNlci1ub3RpZmljYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ4LWxpYi9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2Z4LXVzZXItbm90aWZpY2F0aW9uL2NvbXBvbmVudHMvZngtdXNlci1ub3RpZmljYXRpb24vZngtdXNlci1ub3RpZmljYXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxlQUFlLENBQUE7QUFFbkUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1DQUFtQyxDQUFBO0FBQzFELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDZDQUE2QyxDQUFBO0FBQ3ZGLE9BQU8sRUFBc0IsV0FBVyxFQUFFLE1BQU0sbUNBQW1DLENBQUE7QUFDbkYsT0FBTyxFQUFnQixLQUFLLEVBQUUsTUFBTSxNQUFNLENBQUE7QUFFMUM7SUFpQ0UscUNBQW9CLHVCQUFrRDtRQUFsRCw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQTJCO1FBMUIvRCxXQUFNLEdBQUcsS0FBSyxDQUFBO1FBR2QsU0FBSSxHQUFhLE1BQU0sQ0FBQTtRQUd2QixVQUFLLEdBQUcsT0FBTyxDQUFBO1FBR2YsU0FBSSxHQUFhLElBQUksQ0FBQTtRQUdyQixvQkFBZSxHQUFHLEtBQUssQ0FBQTtRQUd2QixxQkFBZ0IsR0FBRyxFQUFFLENBQUE7UUFFckIseUJBQW9CLEdBQThCLEVBQUUsQ0FBQTtRQUNwRCwrQkFBMEIsR0FBOEIsRUFBRSxDQUFBO1FBQzFELDZCQUF3QixHQUE4QixFQUFFLENBQUE7SUFRL0QsQ0FBQzs7OztJQUVNLDhEQUF3Qjs7O0lBQS9CO1FBQ0UsT0FBTyxFQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFDLENBQUE7SUFDNUIsQ0FBQzs7OztJQUVNLDhDQUFROzs7SUFBZjtRQUFBLGlCQUlDO1FBSEMsSUFBSSxDQUFDLHdC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WUFDckMsSUFBSSxDQUFDLDRCQUE0QixDQUFDLFdBQVcsRUFBRSxDQUFBO1NBQ2hEO0lBQ0gsQ0FBQzs7Ozs7OztJQUVPLHVEQUFpQjs7Ozs7O0lBQXpCLFVBQTBCLEdBQVMsRUFBRSxHQUFTO1FBQzVDLElBQUksR0FBRyxDQUFDLE9BQU8sRUFBRSxHQUFHLEdBQUcsQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUNqQyxPQUFPLENBQUMsQ0FBQTtTQUNUO2FBQU0sSUFBSSxHQUFHLENBQUMsT0FBTyxFQUFFLEdBQUcsR0FBRyxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQ3hDLE9BQU8sQ0FBQyxDQUFDLENBQUE7U0FDVjtRQUNELE9BQU8sQ0FBQyxDQUFBO0lBQ1YsQ0FBQzs7Z0JBMUdGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsMEJBQTBCO29CQUNwQyxrMkJBQW9EOztpQkFFckQ7Ozs7Z0JBUlEseUJBQXlCOzs7dUJBYS9CLEtBQUs7d0JBR0wsS0FBSzt1QkFHTCxLQUFLO2tDQUdMLEtBQUs7bUNBR0wsS0FBSzs7SUFzRlIsa0NBQUM7Q0FBQSxBQTNHRCxJQTJHQztTQXRHWSwyQkFBMkI7OztJQUV0Qyw2Q0FBcUI7O0lBRXJCLDJDQUM4Qjs7SUFFOUIsNENBQ3NCOztJQUV0QiwyQ0FDNEI7O0lBRTVCLHNEQUM4Qjs7SUFFOUIsdURBQzRCOztJQUU1QiwyREFBMkQ7O0lBQzNELGlFQUFpRTs7SUFDakUsK0RBQStEOztJQUUvRCx3REFBZ0M7O0lBQ2hDLCtEQUErQjs7Ozs7SUFFL0IsbUVBQWtEOzs7OztJQUV0Qyw4REFBMEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXHJcbmltcG9ydCB7IEljb25Qcm9wLCBTaXplUHJvcCB9IGZyb20gJ0Bmb3J0YXdlc29tZS9mb250YXdlc29tZS1zdmctY29yZSdcclxuaW1wb3J0IHsgZmFCZWxsIH0gZnJvbSAnQGZvcnRhd2Vzb21lL2ZyZWUtc29saWQtc3ZnLWljb25zJ1xyXG5pbXBvcnQgeyBGeFVzZXJOb3RpZmljYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvZngtdXNlci1ub3RpZmljYXRpb24uc2VydmljZSdcclxuaW1wb3J0IHsgRnhVc2VyTm90aWZpY2F0aW9uLCBwcmlvcml0eU1hcCB9IGZyb20gJy4uLy4uL2RvbWFpbi9meC11c2VyLW5vdGlmaWNhdGlvbidcclxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uLCB0aW1lciB9IGZyb20gJ3J4anMnXHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FwcC1meC11c2VyLW5vdGlmaWNhdGlvbicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2Z4LXVzZXItbm90aWZpY2F0aW9uLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9meC11c2VyLW5vdGlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGeFVzZXJOb3RpZmljYXRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcblxyXG4gIHB1YmxpYyBvcGVuZWQgPSBmYWxzZVxyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBpY29uOiBJY29uUHJvcCA9IGZhQmVsbFxyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBjb2xvciA9ICd3aGl0ZSdcclxuXHJcbiAgQElucHV0KClcclxuICBwdWJsaWMgc2l6ZTogU2l6ZVByb3AgPSAnMngnXHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgcHVibGljIHJlZnJlc2hJbnRlcnZhbCA9IDYwMDAwXHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgcHVibGljIGNoYXJzT2ZTaG9ydFRleHQgPSA1MFxyXG5cclxuICBwdWJsaWMgdXNlck5vdGlmaWNhdGlvbkxpc3Q6IEFycmF5PEZ4VXNlck5vdGlmaWNhdGlvbj4gPSBbXVxyXG4gIHB1YmxpYyB1c2VyTm90aWZpY2F0aW9uVW5yZWFkTGlzdDogQXJyYXk8RnhVc2VyTm90aWZpY2F0aW9uPiA9IFtdXHJcbiAgcHVibGljIHVzZXJOb3RpZmljYXRpb25SZWFkTGlzdDogQXJyYXk8RnhVc2VyTm90aWZpY2F0aW9uPiA9IFtdXHJcblxyXG4gIHB1YmxpYyBub3RpZmljYXRpb25Db3VudDogbnVtYmVyXHJcbiAgcHVibGljIGludGVydmFsVGltZVN1YnNjcmlwdGlvblxyXG5cclxuICBwcml2YXRlIHVzZXJOb3RpZmljYXRpb25TdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvblxyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHVzZXJOb3RpZmljYXRpb25TZXJ2aWNlOiBGeFVzZXJOb3RpZmljYXRpb25TZXJ2aWNlKSB7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0Tm90aWZpY2F0aW9uSWNvbkNvbG9yKCk6IHsgY29sb3I6IHN0cmluZyB9IHtcclxuICAgIHJldHVybiB7Y29sb3I6IHRoaXMuY29sb3J9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLmludGVydmFsVGltZVN1YnNjcmlwdGlvbiA9IHRpbWVyKDAsIHRoaXMucmVmcmVzaEludGVydmFsKS5zdWJzY3JpYmUoKCkgPT4ge1xyXG4gICAgICB0aGlzLnJlY2VpdmVOb3RpZmljYXRpb25zKClcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgcmVjZWl2ZU5vdGlmaWNhdGlvbnMoKTogdm9pZCB7XHJcbiAgICB0aGlzLnVzZXJOb3RpZmljYXRpb25TdWJzY3JpcHRpb24gPSB0aGlzLnVzZXJOb3RpZmljYXRpb25TZXJ2aWNlLmdldE5vdGlmaWNhdGlvbnMoKS5zdWJzY3JpYmUocmVzID0+IHtcclxuICAgICAgdGhpcy5zb3J0Tm90aWZpY2F0aW9uc0FuZFJlbWVtYmVyKHJlcylcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgdG9nZ2xlTm90aWZpY2F0aW9uQXJlYSgpOiB2b2lkIHtcclxuICAgIHRoaXMub3BlbmVkID0gIXRoaXMub3BlbmVkXHJcbiAgICBpZiAoIXRoaXMub3BlbmVkKSB7XHJcbiAgICAgIHRoaXMucG9zdFJlYWROb3RpZmljYXRpb25Mb2dBbmRSZWZyZXNoTm90aWZpY2F0aW9ucygpXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc29ydE5vdGlmaWNhdGlvbnNBbmRSZW1lbWJlcihub3RpZmljYXRpb25EYXRhOiBBcnJheTxGeFVzZXJOb3RpZmljYXRpb24+KTogdm9pZCB7XHJcbiAgICB0aGlzLnVzZXJOb3RpZmljYXRpb25SZWFkTGlzdCA9IG5vdGlmaWNhdGlvbkRhdGEuZmlsdGVyKChub3RpZmljYXRpb24pID0+IHtcclxuICAgICAgcmV0dXJuIG5vdGlmaWNhdGlvbi5yZWFkXHJcbiAgICB9KVxyXG4gICAgdGhpcy51c2VyTm90aWZpY2F0aW9uVW5yZWFkTGlzdCA9IG5vdGlmaWNhdGlvbkRhdGEuZmlsdGVyKChub3RpZmljYXRpb24pID0+IHtcclxuICAgICAgcmV0dXJuICFub3RpZmljYXRpb24ucmVhZFxyXG4gICAgfSlcclxuICAgIHRoaXMudXNlck5vdGlmaWNhdGlvbkxpc3QgPSB0aGlzLnNvcnROb3RpZmljYXRpb24odGhpcy51c2VyTm90aWZpY2F0aW9uVW5yZWFkTGlzdCkuY29uY2F0KHRoaXMuc29ydE5vdGlmaWNhdGlvbih0aGlzLnVzZXJOb3RpZmljYXRpb25SZWFkTGlzdCkpXHJcbiAgICB0aGlzLm5vdGlmaWNhdGlvbkNvdW50ID0gdGhpcy51c2VyTm90aWZpY2F0aW9uVW5yZWFkTGlzdC5sZW5ndGhcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzb3J0Tm90aWZpY2F0aW9uKG5vdGlmaWNhdGlvbkRhdGE6IEFycmF5PEZ4VXNlck5vdGlmaWNhdGlvbj4pOiBBcnJheTxGeFVzZXJOb3RpZmljYXRpb24+IHtcclxuICAgIHJldHVybiBub3RpZmljYXRpb25EYXRhLnNvcnQoKG5vdGlmaWNhdGlvbjEsIG5vdGlmaWNhdGlvbjIpID0+IHtcclxuICAgICAge1xyXG4gICAgICAgIGlmIChwcmlvcml0eU1hcC5nZXQobm90aWZpY2F0aW9uMS5zZXZlcml0eSkgPCBwcmlvcml0eU1hcC5nZXQobm90aWZpY2F0aW9uMi5zZXZlcml0eSkpIHtcclxuICAgICAgICAgIHJldHVybiAtMVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocHJpb3JpdHlNYXAuZ2V0KG5vdGlmaWNhdGlvbjEuc2V2ZXJpdHkpID4gcHJpb3JpdHlNYXAuZ2V0KG5vdGlmaWNhdGlvbjIuc2V2ZXJpdHkpKSB7XHJcbiAgICAgICAgICByZXR1cm4gMVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5jb21wYXJlVXBkYXRlVGltZShuZXcgRGF0ZShub3RpZmljYXRpb24xLnVwZGF0ZVRpbWVzdGFtcCksIG5ldyBEYXRlKG5vdGlmaWNhdGlvbjIudXBkYXRlVGltZXN0YW1wKSAgKVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgcHVibGljIHBvc3RSZWFkTm90aWZpY2F0aW9uTG9nQW5kUmVmcmVzaE5vdGlmaWNhdGlvbnMoKTogdm9pZCB7XHJcbiAgICB0aGlzLnVzZXJOb3RpZmljYXRpb25TZXJ2aWNlLnBvc3RVc2VyUmVhZExvZygpLnRvUHJvbWlzZSgpLnRoZW4oKCkgPT4ge1xyXG4gICAgICB0aGlzLnJlY2VpdmVOb3RpZmljYXRpb25zKClcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgbmdPbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5pbnRlcnZhbFRpbWVTdWJzY3JpcHRpb24pIHtcclxuICAgICAgdGhpcy5pbnRlcnZhbFRpbWVTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKVxyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMudXNlck5vdGlmaWNhdGlvblN1YnNjcmlwdGlvbikge1xyXG4gICAgICB0aGlzLnVzZXJOb3RpZmljYXRpb25TdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBjb21wYXJlVXBkYXRlVGltZSh0czE6IERhdGUsIHRzMjogRGF0ZSk6IG51bWJlciB7XHJcbiAgICBpZiAodHMxLmdldFRpbWUoKSA8IHRzMi5nZXRUaW1lKCkpIHtcclxuICAgICAgcmV0dXJuIDFcclxuICAgIH0gZWxzZSBpZiAodHMxLmdldFRpbWUoKSA+IHRzMi5nZXRUaW1lKCkpIHtcclxuICAgICAgcmV0dXJuIC0xXHJcbiAgICB9XHJcbiAgICByZXR1cm4gMFxyXG4gIH1cclxufVxyXG5cclxuIl19