/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
var FxUserSingleNotificationAreaComponent = /** @class */ (function () {
    function FxUserSingleNotificationAreaComponent() {
        this.charsOfShortText = 150;
        this.isMessageShorted = false;
        this.visibleMessage = '';
        this.show = false;
    }
    Object.defineProperty(FxUserSingleNotificationAreaComponent.prototype, "notification", {
        set: /**
         * @param {?} notification
         * @return {?}
         */
        function (notification) {
            this.completeNotification = notification;
            this.updateVisibleMessageText();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FxUserSingleNotificationAreaComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.updateVisibleMessageText();
    };
    /**
     * @param {?} notification
     * @return {?}
     */
    FxUserSingleNotificationAreaComponent.prototype.getSeverityStyle = /**
     * @param {?} notification
     * @return {?}
     */
    function (notification) {
        if (!notification) {
            return '';
        }
        if (!notification.read) {
            if (notification.severity === 'ERROR') {
                return 'alert alert-danger';
            }
            else if (notification.severity === 'WARNING') {
                return 'alert alert-warning';
            }
            else {
                return 'alert alert-info';
            }
        }
        else {
            return 'alert alert-secondary';
        }
    };
    /**
     * @return {?}
     */
    FxUserSingleNotificationAreaComponent.prototype.showToggle = /**
     * @return {?}
     */
    function () {
        this.show = !this.show;
        this.updateVisibleMessageText();
    };
    /**
     * @param {?} notification
     * @return {?}
     */
    FxUserSingleNotificationAreaComponent.prototype.getSeverityIcon = /**
     * @param {?} notification
     * @return {?}
     */
    function (notification) {
        if (!notification) {
            return '';
        }
        if (notification.severity === 'ERROR') {
            return 'fas fa-exclamation-circle';
        }
        else if (notification.severity === 'WARNING') {
            return 'fas fa-exclamation-triangle';
        }
        else {
            return 'fas fa-info-circle';
        }
    };
    /**
     * @private
     * @return {?}
     */
    FxUserSingleNotificationAreaComponent.prototype.updateVisibleMessageText = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this.completeNotification) {
            return;
        }
        if (this.completeNotification.messageText.length > this.charsOfShortText && !this.show) {
            this.visibleMessage = this.completeNotification.messageText.slice(0, this.charsOfShortText);
            this.isMessageShorted = true;
        }
        else {
            this.visibleMessage = this.completeNotification.messageText;
        }
    };
    FxUserSingleNotificationAreaComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-fx-user-single-notification-area',
                    template: "<div [ngClass]=\"getSeverityStyle(completeNotification)\" class=\"container\">\r\n  <div>\r\n    <span class=\"msg-title\">{{completeNotification?.messageHeadline}}</span>\r\n    <span><i class=\"notificationIcon\" [ngClass]=\"getSeverityIcon(completeNotification)\"></i></span>\r\n  </div>\r\n  <div>\r\n    <span class=\"msg-datetime\">{{completeNotification?.updateTimestamp | date:'yyyy-MM-dd HH:mm'}}</span>\r\n  </div>\r\n  <div class=\"message-text\" [class.show-more]=\"show\">\r\n    {{ visibleMessage }}<span *ngIf=\"isMessageShorted && !show\">...</span>\r\n    <div class=\"showMoreLink\"\r\n         *ngIf=\"isMessageShorted\"\r\n    >\r\n      <a\r\n        (click)=\"showToggle()\"\r\n      >{{ (show ? 'i18n.user-notifications.showLess' : 'i18n.user-notifications.showMore') | translate}}</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                    styles: [".notificationIcon{float:right;margin:.25em;font-size:xx-large}.showMoreLink{color:#003f5b;font-size:small;text-align:right;padding-top:5px}.showMoreLink a{cursor:pointer}.message-text{margin:.25em .25em .25em 0}.show-more{overflow:visible;word-wrap:break-spaces;white-space:normal}.msg-title{font-weight:700}.msg-datetime{font-size:smaller;margin-top:0}.container{padding:.25em;margin:0 0 .5em}"]
                }] }
    ];
    /** @nocollapse */
    FxUserSingleNotificationAreaComponent.ctorParameters = function () { return []; };
    FxUserSingleNotificationAreaComponent.propDecorators = {
        notification: [{ type: Input }],
        charsOfShortText: [{ type: Input }]
    };
    return FxUserSingleNotificationAreaComponent;
}());
export { FxUserSingleNotificationAreaComponent };
if (false) {
    /** @type {?} */
    FxUserSingleNotificationAreaComponent.prototype.completeNotification;
    /** @type {?} */
    FxUserSingleNotificationAreaComponent.prototype.charsOfShortText;
    /** @type {?} */
    FxUserSingleNotificationAreaComponent.prototype.isMessageShorted;
    /** @type {?} */
    FxUserSingleNotificationAreaComponent.prototype.visibleMessage;
    /** @type {?} */
    FxUserSingleNotificationAreaComponent.prototype.show;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZngtdXNlci1zaW5nbGUtbm90aWZpY2F0aW9uLWFyZWEuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ4LWxpYi9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2Z4LXVzZXItbm90aWZpY2F0aW9uL2NvbXBvbmVudHMvZngtdXNlci1zaW5nbGUtbm90aWZpY2F0aW9uLWFyZWEvZngtdXNlci1zaW5nbGUtbm90aWZpY2F0aW9uLWFyZWEuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQTtBQUd4RDtJQXNCRTtRQU5PLHFCQUFnQixHQUFHLEdBQUcsQ0FBQTtRQUV0QixxQkFBZ0IsR0FBRyxLQUFLLENBQUE7UUFDeEIsbUJBQWMsR0FBRyxFQUFFLENBQUE7UUFDbkIsU0FBSSxHQUFHLEtBQUssQ0FBQTtJQUduQixDQUFDO0lBZEQsc0JBQ1csK0RBQVk7Ozs7O1FBRHZCLFVBQ3dCLFlBQWdDO1lBQ3RELElBQUksQ0FBQyxvQkFBb0IsR0FBRyxZQUFZLENBQUE7WUFDeEMsSUFBSSxDQUFDLHdCQUF3QixFQUFFLENBQUE7UUFDakMsQ0FBQzs7O09BQUE7Ozs7SUFZTSx3REFBUTs7O0lBQWY7UUFDRSxJQUFJLENBQUMsd0JBQXdCLEVBQUUsQ0FBQTtJQUNqQyxDQUFDOzs7OztJQUVNLGdFQUFnQjs7OztJQUF2QixVQUF3QixZQUFnQztRQUN0RCxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ2pCLE9BQU8sRUFBRSxDQUFBO1NBQ1Y7UUFDRCxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRTtZQUN0QixJQUFJLFlBQVksQ0FBQyxRQUFRLEtBQUssT0FBTyxFQUFFO2dCQUNyQyxPQUFPLG9CQUFvQixDQUFBO2FBQzVCO2lCQUFNLElBQUksWUFBWSxDQUFDLFFBQVEsS0FBSyxTQUFTLEVBQUU7Z0JBQzlDLE9BQU8scUJBQXFCLENBQUE7YUFDN0I7aUJBQU07Z0JBQ0wsT0FBTyxrQkFBa0IsQ0FBQTthQUMxQjtTQUNGO2FBQU07WUFDTCxPQUFPLHVCQUF1QixDQUFBO1NBQy9CO0lBQ0gsQ0FBQzs7OztJQUVNLDBEQUFVOzs7SUFBakI7UUFDRSxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQTtRQUN0QixJQUFJLENBQUMsd0JBQXdCLEVBQUUsQ0FBQTtJQUNqQyxDQUFDOzs7OztJQUVNLCtEQUFlOzs7O0lBQXRCLFVBQXVCLFlBQWdDO1FBQ3JELElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDakIsT0FBTyxFQUFFLENBQUE7U0FDVjtRQUNELElBQUksWUFBWSxDQUFDLFFBQVEsS0FBSyxPQUFPLEVBQUU7WUFDckMsT0FBTywyQkFBMkIsQ0FBQTtTQUNuQzthQUFNLElBQUksWUFBWSxDQUFDLFFBQVEsS0FBSyxTQUFTLEVBQUU7WUFDOUMsT0FBTyw2QkFBNkIsQ0FBQTtTQUNyQzthQUFNO1lBQ0wsT0FBTyxvQkFBb0IsQ0FBQTtTQUM1QjtJQUNILENBQUM7Ozs7O0lBRU8sd0VBQXdCOzs7O0lBQWhDO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsRUFBRTtZQUM5QixPQUFNO1NBQ1A7UUFDRCxJQUFJLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDdEYsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUE7WUFDM0YsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQTtTQUM3QjthQUFNO1lBQ0wsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUMsV0FBVyxDQUFBO1NBQzVEO0lBQ0gsQ0FBQzs7Z0JBMUVGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsc0NBQXNDO29CQUNoRCw0MUJBQWdFOztpQkFFakU7Ozs7OytCQUtFLEtBQUs7bUNBTUwsS0FBSzs7SUE0RFIsNENBQUM7Q0FBQSxBQTNFRCxJQTJFQztTQXRFWSxxQ0FBcUM7OztJQUVoRCxxRUFBK0M7O0lBUS9DLGlFQUM2Qjs7SUFFN0IsaUVBQStCOztJQUMvQiwrREFBMEI7O0lBQzFCLHFEQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXHJcbmltcG9ydCB7IEZ4VXNlck5vdGlmaWNhdGlvbiB9IGZyb20gJy4uLy4uL2RvbWFpbi9meC11c2VyLW5vdGlmaWNhdGlvbidcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXBwLWZ4LXVzZXItc2luZ2xlLW5vdGlmaWNhdGlvbi1hcmVhJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vZngtdXNlci1zaW5nbGUtbm90aWZpY2F0aW9uLWFyZWEuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2Z4LXVzZXItc2luZ2xlLW5vdGlmaWNhdGlvbi1hcmVhLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEZ4VXNlclNpbmdsZU5vdGlmaWNhdGlvbkFyZWFDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBwdWJsaWMgY29tcGxldGVOb3RpZmljYXRpb246IEZ4VXNlck5vdGlmaWNhdGlvblxyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBzZXQgbm90aWZpY2F0aW9uKG5vdGlmaWNhdGlvbjogRnhVc2VyTm90aWZpY2F0aW9uKSB7XHJcbiAgICB0aGlzLmNvbXBsZXRlTm90aWZpY2F0aW9uID0gbm90aWZpY2F0aW9uXHJcbiAgICB0aGlzLnVwZGF0ZVZpc2libGVNZXNzYWdlVGV4dCgpXHJcbiAgfVxyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBjaGFyc09mU2hvcnRUZXh0ID0gMTUwXHJcblxyXG4gIHB1YmxpYyBpc01lc3NhZ2VTaG9ydGVkID0gZmFsc2VcclxuICBwdWJsaWMgdmlzaWJsZU1lc3NhZ2UgPSAnJ1xyXG4gIHB1YmxpYyBzaG93ID0gZmFsc2VcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLnVwZGF0ZVZpc2libGVNZXNzYWdlVGV4dCgpXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0U2V2ZXJpdHlTdHlsZShub3RpZmljYXRpb246IEZ4VXNlck5vdGlmaWNhdGlvbik6IHN0cmluZyB7XHJcbiAgICBpZiAoIW5vdGlmaWNhdGlvbikge1xyXG4gICAgICByZXR1cm4gJydcclxuICAgIH1cclxuICAgIGlmICghbm90aWZpY2F0aW9uLnJlYWQpIHtcclxuICAgICAgaWYgKG5vdGlmaWNhdGlvbi5zZXZlcml0eSA9PT0gJ0VSUk9SJykge1xyXG4gICAgICAgIHJldHVybiAnYWxlcnQgYWxlcnQtZGFuZ2VyJ1xyXG4gICAgICB9IGVsc2UgaWYgKG5vdGlmaWNhdGlvbi5zZXZlcml0eSA9PT0gJ1dBUk5JTkcnKSB7XHJcbiAgICAgICAgcmV0dXJuICdhbGVydCBhbGVydC13YXJuaW5nJ1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiAnYWxlcnQgYWxlcnQtaW5mbydcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuICdhbGVydCBhbGVydC1zZWNvbmRhcnknXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2hvd1RvZ2dsZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuc2hvdyA9ICF0aGlzLnNob3dcclxuICAgIHRoaXMudXBkYXRlVmlzaWJsZU1lc3NhZ2VUZXh0KClcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRTZXZlcml0eUljb24obm90aWZpY2F0aW9uOiBGeFVzZXJOb3RpZmljYXRpb24pOiBzdHJpbmcge1xyXG4gICAgaWYgKCFub3RpZmljYXRpb24pIHtcclxuICAgICAgcmV0dXJuICcnXHJcbiAgICB9XHJcbiAgICBpZiAobm90aWZpY2F0aW9uLnNldmVyaXR5ID09PSAnRVJST1InKSB7XHJcbiAgICAgIHJldHVybiAnZmFzIGZhLWV4Y2xhbWF0aW9uLWNpcmNsZSdcclxuICAgIH0gZWxzZSBpZiAobm90aWZpY2F0aW9uLnNldmVyaXR5ID09PSAnV0FSTklORycpIHtcclxuICAgICAgcmV0dXJuICdmYXMgZmEtZXhjbGFtYXRpb24tdHJpYW5nbGUnXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gJ2ZhcyBmYS1pbmZvLWNpcmNsZSdcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgdXBkYXRlVmlzaWJsZU1lc3NhZ2VUZXh0KCk6IHZvaWQge1xyXG4gICAgaWYgKCF0aGlzLmNvbXBsZXRlTm90aWZpY2F0aW9uKSB7XHJcbiAgICAgIHJldHVyblxyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuY29tcGxldGVOb3RpZmljYXRpb24ubWVzc2FnZVRleHQubGVuZ3RoID4gdGhpcy5jaGFyc09mU2hvcnRUZXh0ICYmICF0aGlzLnNob3cpIHtcclxuICAgICAgdGhpcy52aXNpYmxlTWVzc2FnZSA9IHRoaXMuY29tcGxldGVOb3RpZmljYXRpb24ubWVzc2FnZVRleHQuc2xpY2UoMCwgdGhpcy5jaGFyc09mU2hvcnRUZXh0KVxyXG4gICAgICB0aGlzLmlzTWVzc2FnZVNob3J0ZWQgPSB0cnVlXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnZpc2libGVNZXNzYWdlID0gdGhpcy5jb21wbGV0ZU5vdGlmaWNhdGlvbi5tZXNzYWdlVGV4dFxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=