/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FxUserNotificationComponent } from './components/fx-user-notification/fx-user-notification.component';
import { NgbModule } from '@ng-bootstrap/ng-bootstrap';
import { BrowserModule } from '@angular/platform-browser';
import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';
import { FormsModule } from '@angular/forms';
import { NOTIFICATION_CONFIG } from './domain/fx-notification-config';
import { FxTranslationModule } from '../fx-translation/fx-translation.module';
import { FxUserNotificationService } from './services/fx-user-notification.service';
import { FxUserNotificationLocalDevelopmentService } from './services/fx-user-notification-local-development.service';
import { FxUserSingleNotificationAreaComponent } from './components/fx-user-single-notification-area/fx-user-single-notification-area.component';
var FxUserNotificationModule = /** @class */ (function () {
    function FxUserNotificationModule() {
    }
    /**
     * @param {?} notificationConfig
     * @return {?}
     */
    FxUserNotificationModule.forRoot = /**
     * @param {?} notificationConfig
     * @return {?}
     */
    function (notificationConfig) {
        return {
            ngModule: FxUserNotificationModule,
            providers: [{
                    provide: NOTIFICATION_CONFIG,
                    useValue: notificationConfig
                },
                FxUserNotificationService]
        };
    };
    /**
     * @param {?} notificationConfig
     * @return {?}
     */
    FxUserNotificationModule.forLocalDevelopment = /**
     * @param {?} notificationConfig
     * @return {?}
     */
    function (notificationConfig) {
        return {
            ngModule: FxUserNotificationModule,
            providers: [
                {
                    provide: NOTIFICATION_CONFIG,
                    useValue: notificationConfig
                },
                {
                    provide: FxUserNotificationService,
                    useClass: FxUserNotificationLocalDevelopmentService
                }
            ]
        };
    };
    FxUserNotificationModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [FxUserNotificationComponent, FxUserSingleNotificationAreaComponent],
                    exports: [
                        FxUserNotificationComponent,
                        FxUserSingleNotificationAreaComponent
                    ],
                    imports: [
                        BrowserModule,
                        CommonModule,
                        NgbModule,
                        FontAwesomeModule,
                        FormsModule,
                        FxTranslationModule
                    ],
                    bootstrap: [FxUserNotificationComponent]
                },] }
    ];
    return FxUserNotificationModule;
}());
export { FxUserNotificationModule };
/**
 * @record
 */
export function FxNotificationConfig() { }
if (false) {
    /** @type {?} */
    FxNotificationConfig.prototype.notification_service_url;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZngtdXNlci1ub3RpZmljYXRpb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZ4LWxpYi9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2Z4LXVzZXItbm90aWZpY2F0aW9uL2Z4LXVzZXItbm90aWZpY2F0aW9uLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQTtBQUN4QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUE7QUFDOUMsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sa0VBQWtFLENBQUE7QUFDOUcsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDRCQUE0QixDQUFBO0FBQ3RELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQTtBQUN6RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQTtBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUE7QUFDNUMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0saUNBQWlDLENBQUE7QUFDckUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUNBQXlDLENBQUE7QUFDN0UsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0seUNBQXlDLENBQUE7QUFDbkYsT0FBTyxFQUFFLHlDQUF5QyxFQUFFLE1BQU0sMkRBQTJELENBQUE7QUFDckgsT0FBTyxFQUFFLHFDQUFxQyxFQUFFLE1BQU0sMEZBQTBGLENBQUE7QUFFaEo7SUFBQTtJQTJDQSxDQUFDOzs7OztJQTFCZSxnQ0FBTzs7OztJQUFyQixVQUFzQixrQkFBd0M7UUFDNUQsT0FBTztZQUNMLFFBQVEsRUFBRSx3QkFBd0I7WUFDbEMsU0FBUyxFQUFFLENBQUM7b0JBQ1YsT0FBTyxFQUFFLG1CQUFtQjtvQkFDNUIsUUFBUSxFQUFFLGtCQUFrQjtpQkFDN0I7Z0JBQ0MseUJBQXlCLENBQUM7U0FDN0IsQ0FBQTtJQUNILENBQUM7Ozs7O0lBRWEsNENBQW1COzs7O0lBQWpDLFVBQWtDLGtCQUF3QztRQUN4RSxPQUFPO1lBQ0wsUUFBUSxFQUFFLHdCQUF3QjtZQUNsQyxTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLG1CQUFtQjtvQkFDNUIsUUFBUSxFQUFFLGtCQUFrQjtpQkFDN0I7Z0JBQ0Q7b0JBQ0UsT0FBTyxFQUFFLHlCQUF5QjtvQkFDbEMsUUFBUSxFQUFFLHlDQUF5QztpQkFDcEQ7YUFDRjtTQUNGLENBQUE7SUFDSCxDQUFDOztnQkExQ0YsUUFBUSxTQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLDJCQUEyQixFQUFFLHFDQUFxQyxDQUFDO29CQUNsRixPQUFPLEVBQUU7d0JBQ1AsMkJBQTJCO3dCQUN6QixxQ0FBcUM7cUJBQ3hDO29CQUNELE9BQU8sRUFBRTt3QkFDUCxhQUFhO3dCQUNiLFlBQVk7d0JBQ1osU0FBUzt3QkFDVCxpQkFBaUI7d0JBQ2pCLFdBQVc7d0JBQ1gsbUJBQW1CO3FCQUNwQjtvQkFDRCxTQUFTLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQztpQkFDekM7O0lBNEJELCtCQUFDO0NBQUEsQUEzQ0QsSUEyQ0M7U0EzQlksd0JBQXdCOzs7O0FBNkJyQywwQ0FFQzs7O0lBREMsd0RBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJ1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nXHJcbmltcG9ydCB7IEZ4VXNlck5vdGlmaWNhdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9meC11c2VyLW5vdGlmaWNhdGlvbi9meC11c2VyLW5vdGlmaWNhdGlvbi5jb21wb25lbnQnXHJcbmltcG9ydCB7IE5nYk1vZHVsZSB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJ1xyXG5pbXBvcnQgeyBCcm93c2VyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3NlcidcclxuaW1wb3J0IHsgRm9udEF3ZXNvbWVNb2R1bGUgfSBmcm9tICdAZm9ydGF3ZXNvbWUvYW5ndWxhci1mb250YXdlc29tZSdcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3JtcydcclxuaW1wb3J0IHsgTk9USUZJQ0FUSU9OX0NPTkZJRyB9IGZyb20gJy4vZG9tYWluL2Z4LW5vdGlmaWNhdGlvbi1jb25maWcnXHJcbmltcG9ydCB7IEZ4VHJhbnNsYXRpb25Nb2R1bGUgfSBmcm9tICcuLi9meC10cmFuc2xhdGlvbi9meC10cmFuc2xhdGlvbi5tb2R1bGUnXHJcbmltcG9ydCB7IEZ4VXNlck5vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2Z4LXVzZXItbm90aWZpY2F0aW9uLnNlcnZpY2UnXHJcbmltcG9ydCB7IEZ4VXNlck5vdGlmaWNhdGlvbkxvY2FsRGV2ZWxvcG1lbnRTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9meC11c2VyLW5vdGlmaWNhdGlvbi1sb2NhbC1kZXZlbG9wbWVudC5zZXJ2aWNlJ1xyXG5pbXBvcnQgeyBGeFVzZXJTaW5nbGVOb3RpZmljYXRpb25BcmVhQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2Z4LXVzZXItc2luZ2xlLW5vdGlmaWNhdGlvbi1hcmVhL2Z4LXVzZXItc2luZ2xlLW5vdGlmaWNhdGlvbi1hcmVhLmNvbXBvbmVudCdcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbRnhVc2VyTm90aWZpY2F0aW9uQ29tcG9uZW50LCBGeFVzZXJTaW5nbGVOb3RpZmljYXRpb25BcmVhQ29tcG9uZW50XSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBGeFVzZXJOb3RpZmljYXRpb25Db21wb25lbnRcclxuICAgICwgRnhVc2VyU2luZ2xlTm90aWZpY2F0aW9uQXJlYUNvbXBvbmVudFxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQnJvd3Nlck1vZHVsZSxcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIE5nYk1vZHVsZSxcclxuICAgIEZvbnRBd2Vzb21lTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBGeFRyYW5zbGF0aW9uTW9kdWxlXHJcbiAgXSxcclxuICBib290c3RyYXA6IFtGeFVzZXJOb3RpZmljYXRpb25Db21wb25lbnRdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGeFVzZXJOb3RpZmljYXRpb25Nb2R1bGUge1xyXG4gIHB1YmxpYyBzdGF0aWMgZm9yUm9vdChub3RpZmljYXRpb25Db25maWc6IEZ4Tm90aWZpY2F0aW9uQ29uZmlnKTogYW55IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBGeFVzZXJOb3RpZmljYXRpb25Nb2R1bGUsXHJcbiAgICAgIHByb3ZpZGVyczogW3tcclxuICAgICAgICBwcm92aWRlOiBOT1RJRklDQVRJT05fQ09ORklHLFxyXG4gICAgICAgIHVzZVZhbHVlOiBub3RpZmljYXRpb25Db25maWdcclxuICAgICAgfSxcclxuICAgICAgICBGeFVzZXJOb3RpZmljYXRpb25TZXJ2aWNlXVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIHN0YXRpYyBmb3JMb2NhbERldmVsb3BtZW50KG5vdGlmaWNhdGlvbkNvbmZpZzogRnhOb3RpZmljYXRpb25Db25maWcpOiBhbnkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IEZ4VXNlck5vdGlmaWNhdGlvbk1vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgcHJvdmlkZTogTk9USUZJQ0FUSU9OX0NPTkZJRyxcclxuICAgICAgICAgIHVzZVZhbHVlOiBub3RpZmljYXRpb25Db25maWdcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIHByb3ZpZGU6IEZ4VXNlck5vdGlmaWNhdGlvblNlcnZpY2UsXHJcbiAgICAgICAgICB1c2VDbGFzczogRnhVc2VyTm90aWZpY2F0aW9uTG9jYWxEZXZlbG9wbWVudFNlcnZpY2VcclxuICAgICAgICB9XHJcbiAgICAgIF1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRnhOb3RpZmljYXRpb25Db25maWcge1xyXG4gIG5vdGlmaWNhdGlvbl9zZXJ2aWNlX3VybDogc3RyaW5nXHJcbn1cclxuIl19