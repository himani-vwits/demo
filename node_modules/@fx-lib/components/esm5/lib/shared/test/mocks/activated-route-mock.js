/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BehaviorSubject } from 'rxjs';
var ActivatedRouteMock = /** @class */ (function () {
    function ActivatedRouteMock() {
        this.fragment = new BehaviorSubject(this.testFragment);
        this.params = new BehaviorSubject(this.testParams);
        this.queryParams = new BehaviorSubject(this.testQueryParams);
    }
    Object.defineProperty(ActivatedRouteMock.prototype, "testParams", {
        get: /**
         * @return {?}
         */
        function () {
            return this._testParams;
        },
        set: /**
         * @param {?} params
         * @return {?}
         */
        function (params) {
            this._testParams = params;
            this.params.next(params);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivatedRouteMock.prototype, "testFragment", {
        get: /**
         * @return {?}
         */
        function () {
            return this._fragment;
        },
        set: /**
         * @param {?} fragment
         * @return {?}
         */
        function (fragment) {
            this._fragment = fragment;
            this.fragment.next(fragment);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivatedRouteMock.prototype, "testQueryParams", {
        get: /**
         * @return {?}
         */
        function () {
            return this._queryParams;
        },
        set: /**
         * @param {?} queryParams
         * @return {?}
         */
        function (queryParams) {
            this._queryParams = queryParams;
            this.queryParams.next(queryParams);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivatedRouteMock.prototype, "snapshot", {
        get: /**
         * @return {?}
         */
        function () {
            return {
                params: this.testParams,
                queryParams: this.testQueryParams,
                fragment: this.testFragment,
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivatedRouteMock.prototype, "parent", {
        get: /**
         * @return {?}
         */
        function () {
            return {
                fragment: this.fragment,
                params: this.params,
                queryParams: this.queryParams,
            };
        },
        enumerable: true,
        configurable: true
    });
    return ActivatedRouteMock;
}());
export { ActivatedRouteMock };
if (false) {
    /** @type {?} */
    ActivatedRouteMock.prototype.fragment;
    /** @type {?} */
    ActivatedRouteMock.prototype.params;
    /** @type {?} */
    ActivatedRouteMock.prototype.queryParams;
    /**
     * @type {?}
     * @private
     */
    ActivatedRouteMock.prototype._testParams;
    /**
     * @type {?}
     * @private
     */
    ActivatedRouteMock.prototype._fragment;
    /**
     * @type {?}
     * @private
     */
    ActivatedRouteMock.prototype._queryParams;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZhdGVkLXJvdXRlLW1vY2suanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZngtbGliL2NvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvc2hhcmVkL3Rlc3QvbW9ja3MvYWN0aXZhdGVkLXJvdXRlLW1vY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUE7QUFFdEM7SUFBQTtRQTZDUyxhQUFRLEdBQUcsSUFBSSxlQUFlLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFBO1FBQ2pELFdBQU0sR0FBRyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUE7UUFDN0MsZ0JBQVcsR0FBRyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUE7SUFRaEUsQ0FBQztJQXJEQyxzQkFBVywwQ0FBVTs7OztRQUFyQjtZQUNFLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQTtRQUN6QixDQUFDOzs7OztRQUVELFVBQXNCLE1BQVU7WUFDOUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUE7WUFDekIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7UUFDMUIsQ0FBQzs7O09BTEE7SUFPRCxzQkFBVyw0Q0FBWTs7OztRQUF2QjtZQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQTtRQUN2QixDQUFDOzs7OztRQUVELFVBQXdCLFFBQWdCO1lBQ3RDLElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFBO1lBQ3pCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQzlCLENBQUM7OztPQUxBO0lBT0Qsc0JBQVcsK0NBQWU7Ozs7UUFBMUI7WUFDRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUE7UUFDMUIsQ0FBQzs7Ozs7UUFFRCxVQUEyQixXQUFlO1lBQ3hDLElBQUksQ0FBQyxZQUFZLEdBQUcsV0FBVyxDQUFBO1lBQy9CLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFBO1FBQ3BDLENBQUM7OztPQUxBO0lBT0Qsc0JBQVcsd0NBQVE7Ozs7UUFBbkI7WUFDRSxPQUFPO2dCQUNMLE1BQU0sRUFBRSxJQUFJLENBQUMsVUFBVTtnQkFDdkIsV0FBVyxFQUFFLElBQUksQ0FBQyxlQUFlO2dCQUNqQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFlBQVk7YUFDNUIsQ0FBQTtRQUNILENBQUM7OztPQUFBO0lBRUQsc0JBQVcsc0NBQU07Ozs7UUFBakI7WUFDRSxPQUFPO2dCQUNMLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtnQkFDdkIsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO2dCQUNuQixXQUFXLEVBQUUsSUFBSSxDQUFDLFdBQVc7YUFDOUIsQ0FBQTtRQUNILENBQUM7OztPQUFBO0lBWUgseUJBQUM7QUFBRCxDQUFDLEFBdkRELElBdURDOzs7O0lBVkMsc0NBQXdEOztJQUN4RCxvQ0FBb0Q7O0lBQ3BELHlDQUE4RDs7Ozs7SUFFOUQseUNBQXVCOzs7OztJQUV2Qix1Q0FBeUI7Ozs7O0lBRXpCLDBDQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnXHJcblxyXG5leHBvcnQgY2xhc3MgQWN0aXZhdGVkUm91dGVNb2NrIHtcclxuXHJcbiAgcHVibGljIGdldCB0ZXN0UGFyYW1zKCk6IHt9IHtcclxuICAgIHJldHVybiB0aGlzLl90ZXN0UGFyYW1zXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0IHRlc3RQYXJhbXMocGFyYW1zOiB7fSkge1xyXG4gICAgdGhpcy5fdGVzdFBhcmFtcyA9IHBhcmFtc1xyXG4gICAgdGhpcy5wYXJhbXMubmV4dChwYXJhbXMpXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IHRlc3RGcmFnbWVudCgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMuX2ZyYWdtZW50XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0IHRlc3RGcmFnbWVudChmcmFnbWVudDogc3RyaW5nKSB7XHJcbiAgICB0aGlzLl9mcmFnbWVudCA9IGZyYWdtZW50XHJcbiAgICB0aGlzLmZyYWdtZW50Lm5leHQoZnJhZ21lbnQpXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IHRlc3RRdWVyeVBhcmFtcygpOiB7fSB7XHJcbiAgICByZXR1cm4gdGhpcy5fcXVlcnlQYXJhbXNcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzZXQgdGVzdFF1ZXJ5UGFyYW1zKHF1ZXJ5UGFyYW1zOiB7fSkge1xyXG4gICAgdGhpcy5fcXVlcnlQYXJhbXMgPSBxdWVyeVBhcmFtc1xyXG4gICAgdGhpcy5xdWVyeVBhcmFtcy5uZXh0KHF1ZXJ5UGFyYW1zKVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBzbmFwc2hvdCgpOiB7fSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBwYXJhbXM6IHRoaXMudGVzdFBhcmFtcyxcclxuICAgICAgcXVlcnlQYXJhbXM6IHRoaXMudGVzdFF1ZXJ5UGFyYW1zLFxyXG4gICAgICBmcmFnbWVudDogdGhpcy50ZXN0RnJhZ21lbnQsXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IHBhcmVudCgpOiB7fSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBmcmFnbWVudDogdGhpcy5mcmFnbWVudCxcclxuICAgICAgcGFyYW1zOiB0aGlzLnBhcmFtcyxcclxuICAgICAgcXVlcnlQYXJhbXM6IHRoaXMucXVlcnlQYXJhbXMsXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZnJhZ21lbnQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KHRoaXMudGVzdEZyYWdtZW50KVxyXG4gIHB1YmxpYyBwYXJhbXMgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KHRoaXMudGVzdFBhcmFtcylcclxuICBwdWJsaWMgcXVlcnlQYXJhbXMgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KHRoaXMudGVzdFF1ZXJ5UGFyYW1zKVxyXG5cclxuICBwcml2YXRlIF90ZXN0UGFyYW1zOiB7fVxyXG5cclxuICBwcml2YXRlIF9mcmFnbWVudDogc3RyaW5nXHJcblxyXG4gIHByaXZhdGUgX3F1ZXJ5UGFyYW1zOiB7fVxyXG5cclxufVxyXG4iXX0=