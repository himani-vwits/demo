{"version":3,"file":"fx-lib-components.js","sources":["ng://@fx-lib/components/lib/fx-boundary-selector/services/boundary-selector-data.service.ts","ng://@fx-lib/components/lib/fx-boundary-selector/fx-boundary-selector.component.ts","ng://@fx-lib/components/lib/fx-translation/components/fx-translation/fx-translation.component.ts","ng://@fx-lib/components/lib/fx-translation/components/fx-language-selector/fx-language-selector.component.ts","ng://@fx-lib/components/lib/fx-translation/fx-translation.module.ts","ng://@fx-lib/components/lib/fx-boundary-selector/services/boundary-selector-resolver.service.ts","ng://@fx-lib/components/lib/shared/helper/base64.helper.ts","ng://@fx-lib/components/lib/fx-security/domain/security-config.ts","ng://@fx-lib/components/lib/fx-security/services/login.service.ts","ng://@fx-lib/components/lib/fx-security/services/redirector.service.ts","ng://@fx-lib/components/lib/fx-security/services/authentication.service.ts","ng://@fx-lib/components/lib/fx-security/services/authorization.service.ts","ng://@fx-lib/components/lib/fx-boundary-selector/services/boundary-data.service.ts","ng://@fx-lib/components/lib/shared/test/mocks/pipes/translate.pipe.mock.ts","ng://@fx-lib/components/lib/shared/test/mocks/pipes/translate-with-pluralization.pipe.mock.ts","ng://@fx-lib/components/lib/shared/pipes/translate-with-pluralization.pipe.ts","ng://@fx-lib/components/lib/shared/shared.module.ts","ng://@fx-lib/components/lib/fx-search-input/fx-search-input.component.ts","ng://@fx-lib/components/lib/fx-search-input/fx-search-input.module.ts","ng://@fx-lib/components/lib/fx-boundary-selector/fx-boundary-selector.module.ts","ng://@fx-lib/components/lib/fx-boundary-selector/domain/boundary-selector-resource.ts","ng://@fx-lib/components/lib/fx-dropdown/fx-dropdown.component.ts","ng://@fx-lib/components/lib/fx-dropdown/fx-dropdown.module.ts","ng://@fx-lib/components/lib/fx-dropdown/domain/dropdown-item.ts","ng://@fx-lib/components/lib/fx-notification/fx-notification.component.ts","ng://@fx-lib/components/lib/fx-notification/fx-notification.service.ts","ng://@fx-lib/components/lib/fx-notification/fx-notification.module.ts","ng://@fx-lib/components/lib/fx-security/services/user.service.ts","ng://@fx-lib/components/lib/fx-security/components/fx-user-selector/fx-user-selector.component.ts","ng://@fx-lib/components/lib/fx-security/components/idp-login/idp-login.component.ts","ng://@fx-lib/components/lib/fx-security/components/login-error/login-error.component.ts","ng://@fx-lib/components/lib/fx-security/components/logged-out/logged-out.component.ts","ng://@fx-lib/components/lib/fx-security/directives/is-logged-in.directive.ts","ng://@fx-lib/components/lib/fx-security/directives/has-role.directive.ts","ng://@fx-lib/components/lib/fx-security/directives/logout.directive.ts","ng://@fx-lib/components/lib/fx-security/guards/auth-guard.service.ts","ng://@fx-lib/components/lib/fx-security/guards/not-logged-in-auth-guard.service.ts","ng://@fx-lib/components/lib/fx-security/services/authenticating-interceptor.service.ts","ng://@fx-lib/components/lib/fx-security/components/fx-login/fx-login.component.ts","ng://@fx-lib/components/lib/fx-security/components/no-permissions/no-permissions.component.ts","ng://@fx-lib/components/lib/fx-security/fx-security.module.ts","ng://@fx-lib/components/lib/fx-confidentiality-logo/fx-confidentiality-logo.component.ts","ng://@fx-lib/components/lib/fx-confidentiality-logo/fx-confidentiality-logo.module.ts","ng://@fx-lib/components/lib/fx-wiki/domain/routing-path-resource.ts","ng://@fx-lib/components/lib/fx-wiki/fx-wiki.component.ts","ng://@fx-lib/components/lib/fx-wiki/fx-wiki.module.ts","ng://@fx-lib/components/lib/fx-week-selector/domain/week-resource.ts","ng://@fx-lib/components/lib/fx-week-selector/fx-week-selector.component.ts","ng://@fx-lib/components/lib/fx-week-selector/fx-week-selector-i18n.ts","ng://@fx-lib/components/lib/fx-week-selector/fx-week-selector.module.ts","ng://@fx-lib/components/lib/fx-header/services/fx-header-config-validator.service.ts","ng://@fx-lib/components/lib/fx-header/services/fx-header-config.service.ts","ng://@fx-lib/components/lib/fx-header/components/fx-header-app-specific-text.component.ts","ng://@fx-lib/components/lib/fx-header/fx-header.component.ts","ng://@fx-lib/components/lib/fx-header/fx-header.module.ts","ng://@fx-lib/components/lib/fx-header/models/config/fx-header-component-config.model.ts","ng://@fx-lib/components/lib/fx-header/models/config/fx-header-config.model.ts","ng://@fx-lib/components/lib/fx-header/models/config/fx-header-route-config.model.ts","ng://@fx-lib/components/lib/fx-header/models/fx-header-event.ts","ng://@fx-lib/components/lib/shared/helper/loading.helper.ts","ng://@fx-lib/components/lib/shared/helper/tooltip.helper.ts","ng://@fx-lib/components/lib/fx-custom-table/fx-custom-table.component.ts","ng://@fx-lib/components/lib/shared/helper/color-range.helper.ts","ng://@fx-lib/components/lib/fx-custom-table/templates/color-indicators-cell-template/fx-color-indicators-cell-template.component.ts","ng://@fx-lib/components/lib/fx-custom-table/fx-custom-table.module.ts","ng://@fx-lib/components/lib/fx-footer/fx-footer.component.ts","ng://@fx-lib/components/lib/fx-footer/fx-footer.module.ts","ng://@fx-lib/components/lib/fx-footer/models/fx-footer-route.model.ts","ng://@fx-lib/components/lib/shared/constants/local-storage.constants.ts","ng://@fx-lib/components/lib/shared/helper/local-storage.helper.ts","ng://@fx-lib/components/lib/shared/helper/array.helper.ts","ng://@fx-lib/components/lib/fx-user-notification/domain/fx-notification-config.ts","ng://@fx-lib/components/lib/fx-user-notification/services/fx-user-notification.service.ts","ng://@fx-lib/components/lib/fx-user-notification/domain/fx-user-notification.ts","ng://@fx-lib/components/lib/fx-user-notification/components/fx-user-notification/fx-user-notification.component.ts","ng://@fx-lib/components/lib/fx-user-notification/services/fx-user-notification-local-development.service.ts","ng://@fx-lib/components/lib/fx-user-notification/components/fx-user-single-notification-area/fx-user-single-notification-area.component.ts","ng://@fx-lib/components/lib/fx-user-notification/fx-user-notification.module.ts","ng://@fx-lib/components/lib/shared/test/creators/test.creators.ts","ng://@fx-lib/components/lib/shared/test/mocks/activated-route-mock.ts","ng://@fx-lib/components/lib/shared/test/mocks/auth-service-mock.ts","ng://@fx-lib/components/lib/shared/test/mocks/router-mock.ts","ng://@fx-lib/components/lib/shared/test/mocks/translate-service-mock.ts","ng://@fx-lib/components/lib/shared/api-client/interceptors/debug-data-interceptor.ts","ng://@fx-lib/components/lib/shared/api-client/interceptors/http-token-interceptor.ts","ng://@fx-lib/components/lib/shared/interfaces/color-range.ts","ng://@fx-lib/components/lib/shared/interfaces/datatable-column.ts","ng://@fx-lib/components/lib/shared/interfaces/datatable-row-detail.ts","ng://@fx-lib/components/lib/shared/interfaces/jest-extended.ts","ng://@fx-lib/components/lib/shared/interfaces/page-info.ts","ng://@fx-lib/components/lib/shared/interfaces/scroll-info.ts","ng://@fx-lib/components/lib/shared/interfaces/sort-info.ts","ng://@fx-lib/components/lib/shared/interfaces/urs-token.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\r\nimport { BehaviorSubject } from 'rxjs'\r\nimport { BoundarySelectorResource } from '../domain/boundary-selector-resource'\r\n\r\n@Injectable()\r\nexport class BoundarySelectorDataService {\r\n\r\n    public boundaryResourceList$ = new BehaviorSubject<BoundarySelectorResource[]>([])\r\n    public selectedBoundary$ = new BehaviorSubject<BoundarySelectorResource>(null)\r\n    private cachedBoundary\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public setBoundaryResourceList(boundaryResourceList: BoundarySelectorResource[]): void {\r\n        if (this.boundaryResourceList$.getValue() === boundaryResourceList) {\r\n            return\r\n        }\r\n\r\n        this.boundaryResourceList$.next(boundaryResourceList)\r\n\r\n        if (this.cachedBoundary != null) {\r\n            this.setSelectedBoundaryByKey(this.cachedBoundary)\r\n            this.cachedBoundary = null\r\n        }\r\n\r\n        if (this.selectedBoundary$.getValue() == null) {\r\n            this.setSelectedBoundaryToDefault()\r\n        }\r\n    }\r\n\r\n    public setSelectedBoundaryByKey(boundaryKey: string): void {\r\n        const foundBoundary: BoundarySelectorResource = this.getBoundaryByKey(boundaryKey)\r\n        if (this.boundaryResourceList$.getValue().length < 1) {\r\n            this.setSelectedBoundaryToDefault()\r\n            this.cacheBoundaryKey(boundaryKey)\r\n            return\r\n        }\r\n\r\n        if (!foundBoundary) {\r\n            this.setSelectedBoundaryToDefault()\r\n            return\r\n        }\r\n\r\n        if (this.selectedBoundary$.getValue() === foundBoundary) {\r\n            return\r\n        }\r\n\r\n        this.selectedBoundary$.next(foundBoundary)\r\n    }\r\n\r\n    public setSelectedBoundary(boundary: BoundarySelectorResource): void {\r\n        this.setSelectedBoundaryByKey(boundary.boundaryValueKey)\r\n    }\r\n\r\n    private getBoundaryByKey(boundaryKey: string): BoundarySelectorResource {\r\n        return this.boundaryResourceList$.getValue().find(x => x.boundaryValueKey === boundaryKey)\r\n    }\r\n\r\n    private setSelectedBoundaryToDefault(): void {\r\n        if (this.boundaryResourceList$.getValue() == null || this.boundaryResourceList$.getValue().length < 1) {\r\n            this.selectedBoundary$.next(null)\r\n            return\r\n        }\r\n\r\n        this.selectedBoundary$.next(this.boundaryResourceList$.getValue()[0])\r\n    }\r\n\r\n    private cacheBoundaryKey(boundaryKey: string): void {\r\n        if (this.cachedBoundary === boundaryKey) {\r\n            return\r\n        }\r\n\r\n        this.cachedBoundary = boundaryKey\r\n    }\r\n}\r\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core'\r\nimport { BoundarySelectorResource } from './domain/boundary-selector-resource'\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\r\nimport { faIndustry } from '@fortawesome/free-solid-svg-icons/faIndustry'\r\nimport { faBox } from '@fortawesome/free-solid-svg-icons/faBox'\r\nimport { faCar } from '@fortawesome/free-solid-svg-icons/faCar'\r\nimport { faCopyright } from '@fortawesome/free-regular-svg-icons/faCopyright'\r\nimport { BoundarySelectorDataService } from './services/boundary-selector-data.service'\r\nimport { Subscription } from 'rxjs'\r\n\r\n@Component({\r\n  selector: 'app-fx-boundary-selector',\r\n  templateUrl: './fx-boundary-selector.component.html',\r\n  styleUrls: ['./fx-boundary-selector.component.scss']\r\n})\r\n\r\nexport class FxBoundarySelectorComponent implements OnInit, OnDestroy {\r\n\r\n  public boundarySelectorResourceList: BoundarySelectorResource[]\r\n  public selectedBoundary: BoundarySelectorResource\r\n\r\n  @Input()\r\n  public btnStyle = ''\r\n\r\n  @Input()\r\n  public dropDownStyling = ''\r\n\r\n  @Input()\r\n  public icon = ''\r\n\r\n  public fasIndustry: IconProp = faIndustry\r\n  public fasBox: IconProp = faBox\r\n  public fasCar: IconProp = faCar\r\n  public farCopyright: IconProp = faCopyright\r\n\r\n  @Input()\r\n  public filterable = false\r\n\r\n  private filterInput: string\r\n\r\n  private subscriptions: Subscription = new Subscription()\r\n\r\n  constructor(private boundarySelectorDataService: BoundarySelectorDataService) { }\r\n\r\n  public ngOnInit(): void {\r\n    this.subscribeToBoundaryResourceList()\r\n    this.subscribeToSelectedBoundary()\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe()\r\n  }\r\n\r\n  public setSelectedBoundary(boundary: BoundarySelectorResource): void {\r\n    this.boundarySelectorDataService.setSelectedBoundary(boundary)\r\n  }\r\n\r\n  public isAnyBoundaryAvailable(): boolean {\r\n    return this.boundarySelectorResourceList != null && this.boundarySelectorResourceList.length > 0\r\n  }\r\n\r\n  public setIcon(selectedIcon?: string): IconProp {\r\n    switch (selectedIcon) {\r\n      case 'fasIndustry': {\r\n        return this.fasIndustry\r\n      }\r\n      case 'fasBox': {\r\n        return this.fasBox\r\n      }\r\n      case 'fasCar': {\r\n        return this.fasCar\r\n      }\r\n      case 'farCopyright': {\r\n        return this.farCopyright\r\n      }\r\n      default: {\r\n        return this.fasIndustry\r\n      }\r\n    }\r\n  }\r\n\r\n  public filterList(entries: BoundarySelectorResource[]): any {\r\n    if (this.filterable && this.filterInput && this.filterInput.length > 0) {\r\n      return entries.filter(e => e.boundaryValueKey.concat(e.boundaryValueName).toLowerCase().includes(this.filterInput.toLowerCase()))\r\n    } else {\r\n      return entries\r\n    }\r\n  }\r\n\r\n  public enterFilterText(searchString: string): void {\r\n    this.filterInput = searchString\r\n  }\r\n\r\n  private subscribeToBoundaryResourceList(): void {\r\n    this.subscriptions.add(this.boundarySelectorDataService.boundaryResourceList$.subscribe((boundaryList: BoundarySelectorResource[]) => {\r\n      this.boundarySelectorResourceList = boundaryList\r\n    }))\r\n  }\r\n\r\n  private subscribeToSelectedBoundary(): void {\r\n    this.subscriptions.add(this.boundarySelectorDataService.selectedBoundary$.subscribe((boundary: BoundarySelectorResource) => {\r\n      if (this.selectedBoundary === boundary) {\r\n        return\r\n      }\r\n\r\n      this.selectedBoundary = boundary\r\n    }))\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core'\r\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap'\r\nimport { TranslateService } from '@ngx-translate/core'\r\nimport { Language } from '../fx-language-selector/domain/language'\r\n\r\nexport const FX_LANGUAGE = 'FX_LANGUAGE'\r\n\r\n@Component({\r\n  selector: 'app-fx-translation',\r\n  templateUrl: './fx-translation.component.html',\r\n  styleUrls: ['./fx-translation.component.scss'],\r\n  providers: [NgbDropdownConfig]\r\n})\r\nexport class FxTranslationComponent {\r\n\r\n  @Input()\r\n  public dropUpStyling = ''\r\n\r\n  @Input()\r\n  public btnStyle = ''\r\n\r\n  @Input()\r\n  public btnSize = ''\r\n\r\n  public readonly languages: Language[] = [\r\n    { locale: 'de', name: 'Deutsch' },\r\n    { locale: 'en', name: 'English' }\r\n  ]\r\n\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    config: NgbDropdownConfig) {\r\n    config.placement = 'top'\r\n    config.container = 'body'\r\n  }\r\n\r\n  get selectedLanguage(): Language {\r\n    const langFromLocalStorage = localStorage.getItem(FX_LANGUAGE)\r\n    const selectedLanguage = this.languages.find(lang => lang.locale === langFromLocalStorage)\r\n\r\n    if (!selectedLanguage) {\r\n      return this.languages[1]\r\n    }\r\n\r\n    return selectedLanguage\r\n  }\r\n\r\n  public select(language: Language): void {\r\n    const selectedLanguage = this.languages.find(lang => lang.locale === language.locale)\r\n    if (!selectedLanguage) {\r\n      return\r\n    }\r\n\r\n    this.translateService.use(language.locale)\r\n    localStorage.setItem(FX_LANGUAGE, language.locale)\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core'\r\nimport { TranslateService } from '@ngx-translate/core'\r\nimport { Language } from './domain/language'\r\nimport { FX_LANGUAGE } from '../fx-translation/fx-translation.component'\r\n\r\n@Component({\r\n  selector: 'app-fx-language-selector',\r\n  templateUrl: './fx-language-selector.component.html',\r\n  styleUrls: ['./fx-language-selector.component.scss']\r\n})\r\nexport class FxLanguageSelectorComponent {\r\n\r\n  @Input()\r\n  public radioGroupStyling = ''\r\n\r\n  public readonly languages: Language[] = [\r\n    { locale: 'de', name: 'Deutsch' },\r\n    { locale: 'en', name: 'English' }\r\n  ]\r\n\r\n  constructor(private translateService: TranslateService) {\r\n  }\r\n\r\n  public isSelected(language: Language): boolean {\r\n    return language === this.selectedLanguage\r\n  }\r\n\r\n  get selectedLanguage(): Language {\r\n    const langFromLocalStorage = localStorage.getItem(FX_LANGUAGE)\r\n    const selectedLanguage = this.languages.find(lang => lang.locale === langFromLocalStorage)\r\n    return selectedLanguage\r\n  }\r\n\r\n  public select(language: Language): void {\r\n    const selectedLanguage = this.languages.find(lang => lang.locale === language.locale)\r\n    if (!selectedLanguage) {\r\n      return\r\n    }\r\n\r\n    this.translateService.use(language.locale)\r\n    localStorage.setItem(FX_LANGUAGE, language.locale)\r\n  }\r\n\r\n}\r\n","import { LOCALE_ID, NgModule } from '@angular/core'\r\nimport { CommonModule, registerLocaleData } from '@angular/common'\r\nimport { FxTranslationComponent } from './components/fx-translation/fx-translation.component'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader'\r\nimport localeDe from '@angular/common/locales/de'\r\nimport { FxLanguageSelectorComponent } from './components/fx-language-selector/fx-language-selector.component'\r\n\r\nexport const FX_LANGUAGE = 'FX_LANGUAGE'\r\n\r\nregisterLocaleData(localeDe)\r\n\r\nexport function HttpLoaderFactory(http: HttpClient): TranslateHttpLoader {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json')\r\n}\r\n\r\nexport function CurrentLanguageFactory(translate: TranslateService): string {\r\n  return translate.currentLang\r\n}\r\n\r\n@NgModule({\r\n  declarations: [FxTranslationComponent,\r\n                FxLanguageSelectorComponent\r\n  ],\r\n  exports: [\r\n    TranslateModule,\r\n    FxTranslationComponent,\r\n    FxLanguageSelectorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    NgbModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })],\r\n    providers: [{provide: LOCALE_ID, useFactory: CurrentLanguageFactory, deps: [TranslateService]}\r\n    ],\r\n    bootstrap: [FxTranslationComponent, FxLanguageSelectorComponent]\r\n})\r\n\r\nexport class FxTranslationModule {\r\n  public static isLanguageSupported(browserLanguage: string): boolean {\r\n    return ['en', 'de'].indexOf(browserLanguage) >= 0\r\n  }\r\n  constructor(translate: TranslateService) {\r\n    translate.setDefaultLang('de')\r\n    const langFromLocalStorage = localStorage.getItem(FX_LANGUAGE)\r\n    if (langFromLocalStorage) {\r\n      translate.use(langFromLocalStorage)\r\n    } else {\r\n      const browserLanguage = FxTranslationModule.isLanguageSupported(translate.getBrowserLang()) ? translate.getBrowserLang() : 'de'\r\n      translate.use(browserLanguage)\r\n      localStorage.setItem(FX_LANGUAGE, browserLanguage)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core'\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router, Resolve } from '@angular/router'\r\nimport { BoundarySelectorDataService } from './boundary-selector-data.service'\r\nimport { BoundarySelectorResource } from '../domain/boundary-selector-resource'\r\n\r\n@Injectable()\r\nexport class BoundarySelectorResolver implements Resolve<BoundarySelectorResource> {\r\n\r\n    constructor(private router: Router, private boundarySelectorDataService: BoundarySelectorDataService) {\r\n    }\r\n\r\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): BoundarySelectorResource | import('rxjs').Observable<BoundarySelectorResource> | Promise<BoundarySelectorResource> {\r\n        const boundaryKey: string = route.paramMap.get(route.data.boundaryParamName)\r\n\r\n        if (!boundaryKey) {\r\n            console.warn('no boundary key param found')\r\n            return\r\n        }\r\n\r\n        this.boundarySelectorDataService.setSelectedBoundaryByKey(boundaryKey)\r\n\r\n        return this.boundarySelectorDataService.selectedBoundary$.getValue()\r\n    }\r\n\r\n}\r\n","export function getBase64EncodeUrlSafe(url: string): string | undefined {\r\n  if (!url) {\r\n    return undefined\r\n  }\r\n  const base64Url = btoa(url)\r\n  return base64Url\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_')\r\n    .replace(/\\=/g, '_EQ_')\r\n}\r\n\r\nexport function getBase64DecodeUrlSafe(encodedBase64Url: string): string | undefined {\r\n  if (!encodedBase64Url) {\r\n    return undefined\r\n  }\r\n  const decodedUrl = encodedBase64Url\r\n    .replace(/_EQ_/g, '=')\r\n    .replace(/-/g, '+')\r\n    .replace(/_/g, '/')\r\n\r\n  return atob(decodedUrl)\r\n}\r\n","import { InjectionToken } from '@angular/core'\r\nimport { SecurityConfig } from '../fx-security.module'\r\n\r\nexport const SECURITY_CONFIG = new InjectionToken<SecurityConfig>('SECURITY_CONFIG')\r\n","import { Inject, Injectable } from '@angular/core'\r\nimport { SecurityConfig } from '../fx-security.module'\r\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http'\r\nimport { IdpIdentityToken } from './authentication.service'\r\nimport { Observable, throwError } from 'rxjs'\r\nimport { catchError, map } from 'rxjs/operators'\r\nimport { SECURITY_CONFIG } from '../domain/security-config'\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n  public securityConfig: SecurityConfig\r\n\r\n  private ursUrl = 'api/v1/auth'\r\n\r\n  constructor(private http: HttpClient,\r\n    @Inject(SECURITY_CONFIG) securityConfig: SecurityConfig) {\r\n\r\n    this.securityConfig = securityConfig\r\n  }\r\n\r\n  public login(idToken: IdpIdentityToken): Observable<string> {\r\n    const url: string = this.securityConfig.authorization_service_url + this.ursUrl\r\n\r\n    return this.http\r\n      .post(url, idToken, { observe: 'response', responseType: 'text' })\r\n      .pipe(\r\n        map((response: HttpResponse<any>) =>\r\n          response.body\r\n        ),\r\n        catchError((error: HttpErrorResponse) =>\r\n          this.handleError(error)\r\n        )\r\n      )\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): Observable<never> {\r\n    const errorMessage: string = error.message ? error.message : error.toString()\r\n    console.error(errorMessage)\r\n\r\n    return throwError(errorMessage)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\n\r\n@Injectable()\r\nexport class RedirectorService {\r\n\r\n  public redirectToUrl(url: string): void {\r\n    window.open(url, '_self')\r\n  }\r\n\r\n}\r\n","import { Inject, Injectable } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\nimport { BehaviorSubject, Observable } from 'rxjs'\r\nimport { map, tap } from 'rxjs/operators'\r\nimport { getBase64DecodeUrlSafe, getBase64EncodeUrlSafe } from '../../shared/helper/base64.helper'\r\nimport { Payload } from '../domain/payload'\r\nimport { SECURITY_CONFIG } from '../domain/security-config'\r\nimport { SecurityConfig } from '../fx-security.module'\r\nimport { LoginService } from './login.service'\r\nimport { RedirectorService } from './redirector.service'\r\n\r\ninterface HashParams {\r\n  [key: string]: string\r\n}\r\n\r\nexport type LoginEvent = 'loggedin' | 'loggedout'\r\nexport const TOKEN_KEY = 'URS_TOKEN'\r\nexport const ID_TOKEN_KEY = 'URS_ID_TOKEN'\r\n\r\nexport interface IdpIdentityToken {\r\n  token: string\r\n  state: string\r\n  app: string\r\n}\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  protected securityConfig: SecurityConfig\r\n\r\n  public isLoggedIn = false\r\n\r\n  protected _token?: string\r\n  get token(): string {\r\n    return this._token || ''\r\n  }\r\n\r\n  set token(token: string) {\r\n    this._token = token\r\n  }\r\n\r\n  public loginEvents: BehaviorSubject<LoginEvent>\r\n\r\n  constructor(private loginService: LoginService,\r\n              private router: Router,\r\n              private redirectorService: RedirectorService,\r\n              @Inject(SECURITY_CONFIG) securityConfig: SecurityConfig) {\r\n    this.loginEvents = new BehaviorSubject<LoginEvent>('loggedout')\r\n    this.initTokenFromStorage()\r\n    this.securityConfig = securityConfig\r\n  }\r\n\r\n  public login(identityToken: IdpIdentityToken): Observable<IdpIdentityToken> {\r\n    return this.loginService.login(identityToken)\r\n      .pipe(\r\n        tap((token: string) => {\r\n          this.initLogin(token, identityToken)\r\n          this.loginEvents.next('loggedin')\r\n        }, () => {\r\n          this.removeLoginInformation()\r\n          this.router.navigateByUrl('/login-error')\r\n        }),\r\n        map(() =>\r\n          identityToken,\r\n        ),\r\n      )\r\n  }\r\n\r\n  public logout(): void {\r\n    // Check for ID token\r\n    const idToken = localStorage.getItem(ID_TOKEN_KEY)\r\n    this.removeLoginInformation()\r\n    if (idToken) {\r\n      this.redirectorService.redirectToUrl(this.buildIdpLogoutUrl(idToken))\r\n    } else {\r\n      this.router.navigateByUrl('/')\r\n    }\r\n  }\r\n\r\n  public getAuthTokenHeaderString(): string {\r\n    return 'Bearer ' + this.token\r\n  }\r\n\r\n  public initTokenFromStorage(): void {\r\n    const storedToken: string = localStorage.getItem(TOKEN_KEY)\r\n    if (storedToken == null) {\r\n      return\r\n    }\r\n    try {\r\n      const parts: string[] = storedToken.split('.')\r\n      const payload = JSON.parse(atob(parts[1]))\r\n      const until = new Date(payload.exp * 1000)\r\n      const now = new Date()\r\n\r\n      if (now < until) {\r\n        this.token = storedToken\r\n        this.isLoggedIn = true\r\n        this.loginEvents.next('loggedin')\r\n      }\r\n    } catch (ex) {\r\n      this.removeLoginInformation()\r\n    }\r\n  }\r\n\r\n  public loginFromUrlToken(url: string): Observable<IdpIdentityToken> {\r\n    const identityToken: IdpIdentityToken = this.extractTokenFromUrl(url)\r\n    return this.login(identityToken)\r\n  }\r\n\r\n  public getPayload(): Payload {\r\n    if (this.isLoggedIn) {\r\n      const token = this.token\r\n      const parts: string[] = token.split('.')\r\n      if (parts.length >= 2) {\r\n        return JSON.parse(atob(parts[1]))\r\n      }\r\n    }\r\n    return {roles: [], username: ''}\r\n  }\r\n\r\n  public loginWithRedirectUrl(): void {\r\n    this.redirectToIdpLogin(this.securityConfig.login_redirect_url)\r\n  }\r\n\r\n  public redirectToIdpLogin(targetUrl: string): void {\r\n    this.redirectorService.redirectToUrl(this.buildIdpLoginUrl(targetUrl))\r\n  }\r\n\r\n  private initLogin(token: string, identityToken: IdpIdentityToken): void {\r\n    this.token = token\r\n    this.isLoggedIn = true\r\n    localStorage.setItem(TOKEN_KEY, token)\r\n    localStorage.setItem(ID_TOKEN_KEY, identityToken.token)\r\n  }\r\n\r\n  private removeLoginInformation(): void {\r\n    this.token = undefined\r\n    this.isLoggedIn = false\r\n    localStorage.removeItem(TOKEN_KEY)\r\n    localStorage.removeItem(ID_TOKEN_KEY)\r\n    this.loginEvents.next('loggedout')\r\n  }\r\n\r\n  private buildIdpLoginUrl(state: string): string {\r\n    return this.securityConfig.idp_base_url + 'auth'\r\n      + '?response_type=id_token'\r\n      + '&scope=openid'\r\n      + '&nonce=' + this.generateNonce()\r\n      + '&client_id=' + encodeURIComponent(this.securityConfig.client_id)\r\n      + '&redirect_uri=' + encodeURIComponent(this.securityConfig.login_redirect_url)\r\n      + '&state=' + encodeURIComponent(getBase64EncodeUrlSafe(state))\r\n  }\r\n\r\n  private mathFloorRandom(): string {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1)\r\n  }\r\n\r\n  private generateNonce(): string {\r\n    let nonce = ''\r\n    for (let i = 0; i < 8; i++) {\r\n      nonce += this.mathFloorRandom()\r\n    }\r\n    return nonce\r\n  }\r\n\r\n  private extractTokenFromUrl(url: string): IdpIdentityToken {\r\n    const hashPart = this.extractHashPart(url)\r\n    const hashParams: HashParams = this.extractParameters(decodeURIComponent(hashPart))\r\n    if (hashParams && hashParams.state && hashParams.id_token) {\r\n      return {\r\n        state: hashParams.state,\r\n        token: hashParams.id_token,\r\n        app: this.securityConfig.app_name,\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  private extractHashPart(url: string): string {\r\n    const hashPosition = url.indexOf('#')\r\n    if (hashPosition >= 0 && url.length > hashPosition) {\r\n      return url.slice(hashPosition + 1)\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n\r\n  private extractParameters(paramString: string): HashParams {\r\n    return paramString.split('&')\r\n      .reduce((params: HashParams, keyValueText: string) => {\r\n        if (keyValueText) {\r\n          const keyValue = keyValueText.split('=')\r\n          if (keyValue.length === 2) {\r\n            const key = keyValue[0]\r\n            const value = keyValue[1]\r\n            const decodedValue = key === 'state' ? getBase64DecodeUrlSafe(value) : value\r\n            params[key] = decodeURIComponent(decodedValue)\r\n          }\r\n        }\r\n        return params\r\n      }, {})\r\n  }\r\n\r\n  private buildIdpLogoutUrl(token: string): string {\r\n    return this.securityConfig.idp_base_url + 'logout'\r\n      + '?id_token=' + token\r\n      + '&post_logout_redirect_uri=' + encodeURIComponent(this.securityConfig.logout_redirect_url)\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core'\r\nimport { SecurityConfig } from '../fx-security.module'\r\nimport { AuthenticationService } from './authentication.service'\r\nimport { SECURITY_CONFIG } from '../domain/security-config'\r\nimport { Role } from '../domain/role'\r\n\r\n@Injectable()\r\nexport class AuthorizationService {\r\n\r\n  public securityConfig: SecurityConfig\r\n\r\n  constructor(private authenticationService: AuthenticationService, @Inject(SECURITY_CONFIG) securityConfig: SecurityConfig) {\r\n    this.securityConfig = securityConfig\r\n  }\r\n\r\n  public hasViewRole(): boolean {\r\n    return this.checkMultipleRoles(this.securityConfig.roles.view)\r\n  }\r\n\r\n  public hasViewRoleForBoundary(boundaryValue: string): boolean {\r\n    return this.checkMultipleRolesForBoundary(this.securityConfig.roles.view, boundaryValue)\r\n  }\r\n\r\n  public hasEditRole(): boolean {\r\n    return this.checkMultipleRoles(this.securityConfig.roles.edit)\r\n  }\r\n\r\n  public hasEditRoleForBoundary(boundaryValue: string): boolean {\r\n    return this.checkMultipleRolesForBoundary(this.securityConfig.roles.edit, boundaryValue)\r\n  }\r\n\r\n  public hasDevopsRole(): boolean {\r\n    return this.checkMultipleRoles(this.securityConfig.roles.devops)\r\n  }\r\n\r\n  public hasRole(roleToCheck: string): boolean {\r\n    const payload = this.authenticationService.getPayload()\r\n    return payload.roles.some((role: Role) =>\r\n      role.role === roleToCheck\r\n    )\r\n  }\r\n\r\n  public hasRoleForBoundary(roleToCheck: string, boundaryValue: string): boolean {\r\n    const payload = this.authenticationService.getPayload()\r\n    const foundRole = payload.roles.find(r => r.role === roleToCheck)\r\n\r\n    if (!foundRole) {\r\n      return false\r\n    }\r\n\r\n    const devopsRole = this.securityConfig.roles.devops.find(r => r === foundRole.role)\r\n    if (devopsRole) {\r\n      return true\r\n    }\r\n\r\n    const boundaries = foundRole.boundaries[this.securityConfig.boundary_name]\r\n    return boundaries.some((boundary: string) => boundary === boundaryValue)\r\n  }\r\n\r\n  private checkMultipleRoles(roles: any[]): boolean {\r\n    return roles.some(role => this.hasRole(role))\r\n  }\r\n\r\n  private checkMultipleRolesForBoundary(roles: any[], boundaryValue: string): boolean {\r\n    return roles.some(role => this.hasRoleForBoundary(role, boundaryValue))\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { AuthenticationService } from '../../fx-security/services/authentication.service'\r\nimport { Role } from '../../fx-security/domain/role'\r\nimport { SecurityConfig } from '../../fx-security/fx-security.module'\r\nimport { SECURITY_CONFIG } from '../../fx-security/domain/security-config'\r\nimport { AuthorizationService } from '../../fx-security/services/authorization.service'\r\nimport { BoundarySelectorResource } from '../domain/boundary-selector-resource'\r\nimport { map } from 'rxjs/operators'\r\nimport { Observable } from 'rxjs'\r\n\r\n@Injectable()\r\nexport class BoundaryDataService {\r\n\r\n    public securityConfig: SecurityConfig\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private authenticationService: AuthenticationService,\r\n        private authorizationService: AuthorizationService,\r\n        @Inject(SECURITY_CONFIG) securityConfig: SecurityConfig) {\r\n        this.securityConfig = securityConfig\r\n    }\r\n\r\n    public getBoundariesForUserScope(): Observable<BoundarySelectorResource[]> {\r\n        return this.http.get<BoundarySelectorResource[]>(this.getApiUrl()).pipe(map((boundarySelectorResources: BoundarySelectorResource[]) => {\r\n            return this.filterBoundariesForUserScope(boundarySelectorResources)\r\n        }))\r\n    }\r\n\r\n    public filterBoundariesForUserScope(boundarySelectorResources: BoundarySelectorResource[]): BoundarySelectorResource[] {\r\n        const filteredBoundarySelectorResources: BoundarySelectorResource[] = []\r\n\r\n        if (this.authorizationService.hasDevopsRole()) {\r\n            return boundarySelectorResources\r\n        }\r\n\r\n        this.authenticationService.getPayload().roles.forEach((role: Role) => {\r\n            if (role.boundaries[this.securityConfig.boundary_name]) {\r\n                role.boundaries[this.securityConfig.boundary_name].forEach((scope: string) => {\r\n                    const boundaryFound = boundarySelectorResources.find(boundary => boundary.boundaryValueKey === scope)\r\n                    if (boundaryFound) {\r\n                        filteredBoundarySelectorResources.push(boundaryFound)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        return filteredBoundarySelectorResources\r\n    }\r\n\r\n    private getApiUrl(): string {\r\n        return `${this.securityConfig.authorization_service_url}/api/v1/domains/${this.securityConfig.app_domain}/apps/${this.securityConfig.app_name}/boundaryvaluesminified/`\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core'\r\n\r\n@Pipe({name: 'translate'})\r\nexport class TranslatePipeMock implements PipeTransform {\r\n  public transform(value: any, ...args: any): any {\r\n    return 'tr:' + value\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core'\r\nimport { TranslatePipeMock } from './translate.pipe.mock'\r\n\r\n@Pipe({name: 'translateWithPluralization'})\r\nexport class TranslateWithPluralizationPipeMock extends TranslatePipeMock implements PipeTransform {\r\n  public transform(value: any, ...args: any): any {\r\n    return 'tr:' + value\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core'\r\nimport { TranslatePipe } from '@ngx-translate/core'\r\n\r\n@Pipe({name: 'translateWithPluralization'})\r\nexport class TranslateWithPluralizationPipe extends TranslatePipe implements PipeTransform {\r\n\r\n  public transform(query: any, ...args: any[]): any {\r\n    const count = args[0]['count']\r\n    if (count !== null && count !== undefined) {\r\n      if (count.toString() === '1') {\r\n        query += '.singular'\r\n      } else {\r\n        query += '.plural'\r\n      }\r\n    }\r\n    return super.transform(query, args[0])\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { TranslatePipeMock } from './test/mocks/pipes/translate.pipe.mock'\r\nimport { TranslateWithPluralizationPipeMock } from './test/mocks/pipes/translate-with-pluralization.pipe.mock'\r\nimport { TranslateWithPluralizationPipe } from './pipes/translate-with-pluralization.pipe'\r\nimport { NgxUiLoaderConfig, NgxUiLoaderModule } from 'ngx-ui-loader'\r\n\r\nconst NGX_UI_LOADER_FX_CONFIG: NgxUiLoaderConfig = {\r\n  fgsColor: '#004666',\r\n  fgsSize: 70,\r\n  fgsType: 'circle',\r\n  fgsPosition: 'center-center',\r\n  overlayColor: 'rgba(255,255,255,0.9)',\r\n  hasProgressBar: false,\r\n  textColor: '#004666',\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgxUiLoaderModule.forRoot(NGX_UI_LOADER_FX_CONFIG),\r\n  ],\r\n  declarations: [\r\n    TranslatePipeMock,\r\n    TranslateWithPluralizationPipe,\r\n    TranslateWithPluralizationPipeMock,\r\n  ],\r\n  exports: [\r\n    TranslateWithPluralizationPipe,\r\n    NgxUiLoaderModule,\r\n  ]\r\n})\r\nexport class SharedModule {\r\n}\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, TemplateRef } from '@angular/core'\r\nimport { Subject, Subscription } from 'rxjs'\r\nimport { debounceTime, map } from 'rxjs/operators'\r\n\r\n@Component({\r\n  selector: 'app-fx-search-input',\r\n  templateUrl: './fx-search-input.component.html',\r\n  styleUrls: ['./fx-search-input.component.scss']\r\n})\r\nexport class FxSearchInputComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  public searchInputValue: string\r\n\r\n  @Input()\r\n  public searchFieldMinLength = 3\r\n\r\n  @Input()\r\n  public required = false\r\n\r\n  @Input()\r\n  public clearSearchInputWithEscape = true\r\n\r\n  @Input()\r\n  public placeholder = 'i18n.search-input.placeholder'\r\n\r\n  @Input()\r\n  public requiredAlert = 'i18n.search-input.warnings.required'\r\n\r\n  @Input()\r\n  public minLengthAlert = 'i18n.search-input.warnings.minlength'\r\n\r\n  @Input()\r\n  public autocomplete: 'off' | 'on' = 'off'\r\n\r\n  @Input()\r\n  public id = 'searchInput'\r\n\r\n  @Input()\r\n  public name = 'searchInput'\r\n\r\n  @Input()\r\n  public title = ''\r\n\r\n  @Input()\r\n  public belowSearchInputTemplate: TemplateRef<any>\r\n\r\n  @Input()\r\n  public debounceTimeInMilliseconds = 700\r\n\r\n  @Input()\r\n  public trimSearchInput = true\r\n\r\n  @Input()\r\n  public style = ''\r\n\r\n  @Output()\r\n  public searchInputChangedEvent = new EventEmitter<string>()\r\n\r\n  public searchInputChanged = new Subject<string>()\r\n\r\n  private subscription = new Subscription()\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.subscription.add(this.searchInputChanged\r\n      .pipe(\r\n        map(search => {\r\n          if (!this.trimSearchInput) {\r\n            return ({searchValue: (search && search.length < this.searchFieldMinLength) ? null : search})\r\n          }\r\n          // at least three char have been typed into the search input (or value is empty, than clear filter)\r\n          return ({searchValue: (search && search.trim().length < this.searchFieldMinLength) ? null : search})\r\n        }),\r\n        // delaying the search by x.x seconds before triggering the search API call\r\n        debounceTime(this.debounceTimeInMilliseconds),\r\n      )\r\n      .subscribe(search => this.searchInputChangedEvent.next(search.searchValue))\r\n    )\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.subscription.unsubscribe()\r\n  }\r\n\r\n}\r\n","import { FxTranslationModule } from '../fx-translation/fx-translation.module'\r\nimport { NgModule } from '@angular/core'\r\nimport { FormsModule } from '@angular/forms'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { ContextMenuModule } from 'ngx-contextmenu'\r\nimport { SharedModule } from '../shared/shared.module'\r\nimport { FxSearchInputComponent } from './fx-search-input.component'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FxSearchInputComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ContextMenuModule,\r\n    FormsModule,\r\n    FxTranslationModule,\r\n    NgbModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [\r\n    FxSearchInputComponent,\r\n  ],\r\n\r\n})\r\nexport class FxSearchInputModule {\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { FxBoundarySelectorComponent } from './fx-boundary-selector.component'\r\nimport { RouterModule } from '@angular/router'\r\nimport { FormsModule } from '@angular/forms'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { FxTranslationModule } from '../fx-translation/fx-translation.module'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faIndustry as fasIndustry } from '@fortawesome/free-solid-svg-icons/faIndustry'\r\nimport { faBox as fasBox } from '@fortawesome/free-solid-svg-icons/faBox'\r\nimport { faCar as fasCar } from '@fortawesome/free-solid-svg-icons/faCar'\r\nimport { faCopyright as farCopyright } from '@fortawesome/free-regular-svg-icons/faCopyright'\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\r\nimport { BoundarySelectorResolver } from './services/boundary-selector-resolver.service'\r\nimport { BoundarySelectorDataService } from './services/boundary-selector-data.service'\r\nimport { BoundaryDataService } from './services/boundary-data.service'\r\nimport { FxSearchInputModule } from '../fx-search-input/fx-search-input.module'\r\n\r\nlibrary.add(fasIndustry, fasBox, fasCar, farCopyright)\r\n\r\n@NgModule({\r\n  declarations: [FxBoundarySelectorComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    FxTranslationModule,\r\n    FontAwesomeModule,\r\n    FxSearchInputModule\r\n  ],\r\n  providers: [\r\n    BoundarySelectorDataService,\r\n    BoundarySelectorResolver,\r\n    BoundaryDataService\r\n  ],\r\n  exports: [FxBoundarySelectorComponent]\r\n})\r\nexport class FxBoundarySelectorModule {\r\n}\r\n","export interface BoundarySelectorResource {\r\n  boundaryValueKey: string\r\n  boundaryValueName: string\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\r\nimport { DropdownItem } from './domain/dropdown-item'\r\n\r\n@Component({\r\n  selector: 'app-fx-dropdown',\r\n  templateUrl: './fx-dropdown.component.html',\r\n  styleUrls: ['./fx-dropdown.component.scss']\r\n})\r\nexport class FxDropdownComponent implements OnInit {\r\n\r\n  @Input() public options: DropdownItem[]\r\n\r\n  @Input() public placeholder?: string\r\n\r\n  @Input() public highlightActive?: boolean\r\n\r\n  @Input() public currentItem?: DropdownItem\r\n\r\n  @Input() public cssClass = ''\r\n\r\n  @Input() public filterable = false\r\n\r\n  @Output() public currentItemChange = new EventEmitter<DropdownItem>()\r\n\r\n  private filterInput: string\r\n\r\n  public ngOnInit(): void {\r\n    if (!this.placeholder && this.options[0]) {\r\n      this.currentItem = this.options[0]\r\n    }\r\n  }\r\n\r\n  public clickItem(item: DropdownItem): void {\r\n    if (item && !item.disabled) {\r\n      this.currentItem = item\r\n      if (item.onSelectAction) {\r\n        item.onSelectAction()\r\n      }\r\n      this.currentItemChange.emit(item)\r\n    }\r\n  }\r\n\r\n  public getComputedLabel(item: DropdownItem): string {\r\n    return item.label ? item.label : item.key\r\n  }\r\n\r\n  public isCurrentItem(item: DropdownItem): boolean {\r\n    return item === this.currentItem\r\n  }\r\n\r\n  public isItemHighlighted(item: DropdownItem): boolean {\r\n    return this.isCurrentItem(item) && this.highlightActive\r\n  }\r\n\r\n  public getSelectedItem(): DropdownItem {\r\n    return this.currentItem\r\n  }\r\n\r\n  public setSelectedItem(item: DropdownItem): void {\r\n    this.currentItem = item\r\n    this.currentItemChange.emit(item)\r\n  }\r\n\r\n  public setFilterText(searchString: string): void {\r\n    this.filterInput = searchString\r\n  }\r\n\r\n  public getFilteredList(entries: DropdownItem[]): any {\r\n    if (this.filterable && this.filterInput && this.filterInput.length > 0) {\r\n      return entries.filter(e => e.key.concat(e.label).toLowerCase().includes(this.filterInput.toLowerCase()))\r\n    } else {\r\n      return entries\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { FxDropdownComponent } from './fx-dropdown.component'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\r\nimport { FxTranslationModule } from '../fx-translation/fx-translation.module'\r\nimport { FxSearchInputModule } from '../fx-search-input/fx-search-input.module'\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [FxDropdownComponent],\r\n  exports: [\r\n    FxDropdownComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgbModule,\r\n    FxTranslationModule,\r\n    FxSearchInputModule,\r\n  ]\r\n})\r\nexport class FxDropdownModule { }\r\n","export interface DropdownItem {\r\n  key: string\r\n  disabled?: boolean\r\n  label?: string\r\n  onSelectAction?: () => void\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'app-fx-notification',\r\n  templateUrl: './fx-notification.component.html',\r\n  styleUrls: ['./fx-notification.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FxNotificationComponent {\r\n\r\n  public notificationOptions: any = {\r\n    position: ['top', 'right'],\r\n    timeOut: 50000,\r\n    clickToClose: true,\r\n    showProgressBar: true,\r\n    pauseOnHover: true,\r\n    preventDuplicates: true,\r\n  }\r\n\r\n  constructor() {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { Notification, NotificationsService, NotificationType } from 'angular2-notifications'\r\nimport { forkJoin, Observable, Observer } from 'rxjs'\r\nimport { TranslateService } from '@ngx-translate/core'\r\nimport { NavigationEnd, Router } from '@angular/router'\r\nimport { filter } from 'rxjs/operators'\r\n\r\nconst i18nPrefix = 'i18n.fx-components.notification.'\r\n\r\nconst configurations = {\r\n  error: {\r\n    timeOut: 5000\r\n  },\r\n  warn: {\r\n    timeOut: 5000\r\n  },\r\n  info: {\r\n    timeOut: 3000\r\n  },\r\n  success: {\r\n    timeOut: 3000\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class FxNotificationService {\r\n\r\n  public errorNotifications: Notification[] = []\r\n\r\n  constructor(private notifications: NotificationsService,\r\n    private translate: TranslateService,\r\n    router: Router) {\r\n    router.events\r\n      .pipe(\r\n        filter(event => event instanceof NavigationEnd)\r\n      )\r\n      .subscribe(() => {\r\n        this.errorNotifications.forEach((notification: Notification) =>\r\n          notifications.remove(notification.id)\r\n        )\r\n        this.errorNotifications = []\r\n      })\r\n\r\n  }\r\n\r\n  public error(messageType: string): void {\r\n    this.create(NotificationType.Error, messageType)\r\n      .subscribe((notification: Notification) =>\r\n        this.errorNotifications.push(notification)\r\n      )\r\n  }\r\n\r\n  public warn(messageType: string): void {\r\n    this.create(NotificationType.Warn, messageType).subscribe()\r\n  }\r\n\r\n  public info(messageType: string): void {\r\n    this.create(NotificationType.Info, messageType).subscribe()\r\n  }\r\n\r\n  public success(messageType: string): void {\r\n    this.create(NotificationType.Success, messageType).subscribe()\r\n  }\r\n\r\n  public httpError(statusCode: number, statusCodeDescriptionsType?: string): void {\r\n    if (!statusCodeDescriptionsType) {\r\n      statusCodeDescriptionsType = 'default'\r\n    }\r\n    const titleObservable = this.translateMessage(NotificationType.Error, 'type')\r\n    const errorMessageObservable = this.translateMessage(NotificationType.Error, 'http.' + statusCodeDescriptionsType + '.' + statusCode)\r\n    this.generateNotification(NotificationType.Error, titleObservable, errorMessageObservable).subscribe()\r\n  }\r\n\r\n  private create(type: NotificationType, messageType: string): Observable<Notification> {\r\n    const titleObservable: Observable<string> = this.translateMessage(type, messageType + '.title')\r\n    const messageObservable: Observable<string> = this.translateMessage(type, messageType + '.message')\r\n    return this.generateNotification(type, titleObservable, messageObservable)\r\n  }\r\n\r\n  private generateNotification(\r\n    type: NotificationType, titleObservable: Observable<string>, messageObservable: Observable<string>): Observable<Notification> {\r\n    return new Observable((observer: Observer<Notification>) => {\r\n\r\n      forkJoin([titleObservable, messageObservable]).subscribe((result: string[]) => {\r\n        const title: string = result[0]\r\n        const message: string = result[1]\r\n\r\n        const notification = this.notifications.create(title, message, type, configurations[type])\r\n        observer.next(notification)\r\n        observer.complete()\r\n      })\r\n\r\n    })\r\n  }\r\n\r\n  private translateMessage(type: NotificationType, i18nMessage: string): Observable<string> {\r\n    return this.translate.get(i18nPrefix + type + '.' + i18nMessage)\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { FxNotificationComponent } from './fx-notification.component'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport { SimpleNotificationsModule } from 'angular2-notifications'\r\nimport { FxNotificationService } from './fx-notification.service'\r\n\r\n@NgModule({\r\n  declarations: [FxNotificationComponent],\r\n  exports: [\r\n    FxNotificationComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    SimpleNotificationsModule.forRoot()\r\n  ]\r\n})\r\nexport class FxNotificationModule {\r\n  public static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: FxNotificationModule,\r\n      providers: [FxNotificationService]\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { AuthenticationService } from './authentication.service'\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  constructor(private authenticationService: AuthenticationService) {\r\n\r\n  }\r\n\r\n  public getUsername(): string {\r\n    const payload = this.authenticationService.getPayload()\r\n    if (payload.username) {\r\n      return payload.username.toUpperCase()\r\n    }\r\n    return ''\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, Inject, Input, OnDestroy, OnInit } from '@angular/core'\r\nimport { AuthenticationService } from '../../services/authentication.service'\r\nimport { SecurityConfig } from '../../fx-security.module'\r\nimport { Subscription } from 'rxjs'\r\nimport { SECURITY_CONFIG } from '../../domain/security-config'\r\nimport { UserService } from '../../services/user.service'\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons/faUser'\r\n\r\n@Component({\r\n  selector: 'app-fx-user-selector',\r\n  templateUrl: './fx-user-selector.component.html',\r\n  styleUrls: ['./fx-user-selector.component.scss']\r\n})\r\nexport class FxUserSelectorComponent implements OnInit, OnDestroy {\r\n\r\n  @Input()\r\n  public btnStyle = ''\r\n\r\n  @Input()\r\n  public dropDownStyling = ''\r\n\r\n  @Input()\r\n  public icon = ''\r\n\r\n  public fasUser: IconProp = faUser\r\n\r\n  public username: string\r\n\r\n  private loginSubscription: Subscription\r\n\r\n  private securityConfig: SecurityConfig\r\n\r\n  constructor(private authenticationService: AuthenticationService,\r\n    private userService: UserService,\r\n    private changeDetector: ChangeDetectorRef,\r\n    @Inject(SECURITY_CONFIG) securityConfig: SecurityConfig) {\r\n    this.securityConfig = securityConfig\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.authenticationService.loginEvents.subscribe(() => {\r\n      this.username = this.userService.getUsername()\r\n      this.changeDetector.markForCheck()\r\n    })\r\n  }\r\n\r\n  public isNotLoggedIn(): boolean {\r\n    return (this.username === '')\r\n  }\r\n\r\n  public login(): void {\r\n    this.authenticationService.redirectToIdpLogin(this.securityConfig.login_redirect_url)\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this.loginSubscription) {\r\n      this.loginSubscription.unsubscribe()\r\n    }\r\n  }\r\n\r\n  public setIcon(selectedIcon?: string): IconProp {\r\n    switch (selectedIcon) {\r\n      case 'fasUser': {\r\n        return this.fasUser\r\n      }\r\n      default: {\r\n        return this.fasUser\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\nimport { NotificationsService } from 'angular2-notifications'\r\nimport { NEVER, Subscription } from 'rxjs'\r\nimport { catchError } from 'rxjs/operators'\r\nimport { AuthenticationService, IdpIdentityToken } from '../../services/authentication.service'\r\n\r\n@Component({\r\n  template: '',\r\n})\r\nexport class IdpLoginComponent implements OnInit, OnDestroy {\r\n\r\n  private subscription = new Subscription()\r\n\r\n  constructor(private authenticationService: AuthenticationService,\r\n              private router: Router,\r\n              private notificationService: NotificationsService,\r\n  ) {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n\r\n    this.subscription.add(this.authenticationService.loginFromUrlToken(window.location.href)\r\n      .pipe(\r\n        catchError(error => {\r\n          this.notificationService.error(error)\r\n          return NEVER\r\n        }),\r\n      )\r\n      .subscribe((identityToken: IdpIdentityToken) => {\r\n        this.router.navigateByUrl(identityToken.state)\r\n      }),\r\n    )\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.subscription.unsubscribe()\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core'\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\r\nimport { faAngry } from '@fortawesome/free-regular-svg-icons/faAngry'\r\n\r\n@Component({\r\n  selector: 'app-login-error',\r\n  templateUrl: './login-error.component.html',\r\n  styleUrls: ['./login-error.component.scss']\r\n})\r\nexport class LoginErrorComponent {\r\n\r\n  public farAngry: IconProp = faAngry\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Component } from '@angular/core'\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons/faSignOutAlt'\r\n\r\n@Component({\r\n  selector: 'app-logged-out',\r\n  templateUrl: './logged-out.component.html',\r\n  styleUrls: ['./logged-out.component.scss']\r\n})\r\nexport class LoggedOutComponent {\r\n\r\n  public fasSignOutAlt: IconProp = faSignOutAlt\r\n\r\n  constructor() {\r\n  }\r\n\r\n}\r\n","import { ChangeDetectorRef, Directive, EmbeddedViewRef, Input, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core'\r\nimport { Subscription } from 'rxjs'\r\nimport { AuthenticationService } from '../services/authentication.service'\r\n\r\n@Directive({\r\n  selector: '[appIsLoggedIn]'\r\n})\r\nexport class IsLoggedInDirective implements OnDestroy {\r\n\r\n  private _context: IsLoggedInContext = new IsLoggedInContext()\r\n  private _thenTemplateRef: TemplateRef<IsLoggedInContext> | null = null\r\n  private _elseTemplateRef: TemplateRef<IsLoggedInContext> | null = null\r\n  private _thenViewRef: EmbeddedViewRef<IsLoggedInContext> | null = null\r\n  private _elseViewRef: EmbeddedViewRef<IsLoggedInContext> | null = null\r\n\r\n  private loginEventsSubscription: Subscription\r\n\r\n  constructor(private authService: AuthenticationService,\r\n    private _viewContainer: ViewContainerRef,\r\n    templateRef: TemplateRef<IsLoggedInContext>,\r\n    private changeDetector: ChangeDetectorRef) {\r\n    this._thenTemplateRef = templateRef\r\n\r\n    this.loginEventsSubscription = authService.loginEvents.subscribe(() => {\r\n      this._updateView()\r\n      this.changeDetector.markForCheck()\r\n    })\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this.loginEventsSubscription) {\r\n      this.loginEventsSubscription.unsubscribe()\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set hasRole(condition: any) {\r\n    this._context.$implicit = condition\r\n    this._updateView()\r\n  }\r\n\r\n  @Input()\r\n  set hasRoleThen(templateRef: TemplateRef<IsLoggedInContext>) {\r\n    this._thenTemplateRef = templateRef\r\n    this._thenViewRef = null  // clear previous view if any.\r\n    this._updateView()\r\n  }\r\n\r\n  @Input()\r\n  set hasRoleElse(templateRef: TemplateRef<IsLoggedInContext>) {\r\n    this._elseTemplateRef = templateRef\r\n    this._elseViewRef = null  // clear previous view if any.\r\n    this._updateView()\r\n  }\r\n\r\n  private _updateView(): void {\r\n    if (this.authService.isLoggedIn) {\r\n      if (!this._thenViewRef) {\r\n        this._viewContainer.clear()\r\n        this._elseViewRef = null\r\n        if (this._thenTemplateRef) {\r\n          this._thenViewRef =\r\n            this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context)\r\n        }\r\n      }\r\n    } else {\r\n      if (!this._elseViewRef) {\r\n        this._viewContainer.clear()\r\n        this._thenViewRef = null\r\n        if (this._elseTemplateRef) {\r\n          this._elseViewRef =\r\n            this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class IsLoggedInContext {\r\n  public $implicit = null\r\n}\r\n","import { ChangeDetectorRef, Directive, EmbeddedViewRef, Input, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core'\r\nimport { Subscription } from 'rxjs'\r\nimport { AuthenticationService } from '../services/authentication.service'\r\nimport { AuthorizationService } from '../services/authorization.service'\r\n\r\n@Directive({\r\n  selector: '[appHasRole]'\r\n})\r\nexport class HasRoleDirective implements OnDestroy {\r\n\r\n  private _context: HasRoleContext = new HasRoleContext()\r\n  private _thenTemplateRef: TemplateRef<HasRoleContext> | null = null\r\n  private _elseTemplateRef: TemplateRef<HasRoleContext> | null = null\r\n  private _thenViewRef: EmbeddedViewRef<HasRoleContext> | null = null\r\n  private _elseViewRef: EmbeddedViewRef<HasRoleContext> | null = null\r\n\r\n  private loginEventsSubscription: Subscription\r\n\r\n  constructor(private _viewContainer: ViewContainerRef,\r\n    templateRef: TemplateRef<HasRoleContext>,\r\n    authService: AuthenticationService,\r\n    private authorizationService: AuthorizationService,\r\n    private changeDetector: ChangeDetectorRef) {\r\n    this._thenTemplateRef = templateRef\r\n\r\n    this.loginEventsSubscription = authService.loginEvents.subscribe(() => {\r\n      this._updateView()\r\n      this.changeDetector.markForCheck()\r\n    })\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this.loginEventsSubscription) {\r\n      this.loginEventsSubscription.unsubscribe()\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set hasRole(condition: any) {\r\n    this._context.$implicit = this._context.hasRole = condition\r\n    this._updateView()\r\n  }\r\n\r\n  @Input()\r\n  set hasRoleFactory(value: string) {\r\n    this._context.factory = value\r\n    this._updateView()\r\n  }\r\n\r\n  @Input()\r\n  set hasRoleThen(templateRef: TemplateRef<HasRoleContext>) {\r\n    this._thenTemplateRef = templateRef\r\n    this._thenViewRef = null  // clear previous view if any.\r\n    this._updateView()\r\n  }\r\n\r\n  @Input()\r\n  set hasRoleElse(templateRef: TemplateRef<HasRoleContext>) {\r\n    this._elseTemplateRef = templateRef\r\n    this._elseViewRef = null  // clear previous view if any.\r\n    this._updateView()\r\n  }\r\n\r\n  private _updateView(): void {\r\n    let hasRole = false\r\n    if (this._context && this._context.$implicit) {\r\n      if (typeof this._context.factory === 'string' && this._context.factory.length > 0) {\r\n        hasRole = this.authorizationService.hasRoleForBoundary(this._context.$implicit, this._context.factory)\r\n      } else {\r\n        hasRole = this._context && this._context.$implicit && this.authorizationService.hasRole(this._context.$implicit)\r\n      }\r\n    }\r\n    if (hasRole) {\r\n      if (!this._thenViewRef) {\r\n        this._viewContainer.clear()\r\n        this._elseViewRef = null\r\n        if (this._thenTemplateRef) {\r\n          this._thenViewRef =\r\n            this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context)\r\n        }\r\n      }\r\n    } else {\r\n      if (!this._elseViewRef) {\r\n        this._viewContainer.clear()\r\n        this._thenViewRef = null\r\n        if (this._elseTemplateRef) {\r\n          this._elseViewRef =\r\n            this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class HasRoleContext {\r\n  public $implicit = null\r\n  public hasRole = null\r\n  public factory: string = null\r\n}\r\n","import { Directive, HostListener } from '@angular/core'\r\nimport { AuthenticationService } from '../services/authentication.service'\r\n\r\n@Directive({\r\n  selector: '[appLogout]'\r\n})\r\nexport class LogoutDirective {\r\n\r\n  constructor(private authService: AuthenticationService) {\r\n\r\n  }\r\n\r\n  @HostListener('click')\r\n  public logout(): void {\r\n    this.authService.logout()\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { ActivatedRouteSnapshot, CanActivate, Data, ParamMap, Router, RouterStateSnapshot } from '@angular/router'\r\nimport { AuthenticationService } from '../services/authentication.service'\r\nimport { AuthorizationService } from '../services/authorization.service'\r\n\r\nconst NO_PERMISSION_ROUTE = 'no-permission'\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authenticationService: AuthenticationService,\r\n              private authorizationService: AuthorizationService,\r\n              private router: Router) {\r\n  }\r\n\r\n  public canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    return this.checkLogin(state.url) && this.checkRoles(route.data) && this.checkBoundaryValue(route.data, route.paramMap)\r\n  }\r\n\r\n  private checkLogin(url: string): boolean {\r\n    if (this.authenticationService.isLoggedIn) {\r\n      return true\r\n    }\r\n    this.authenticationService.redirectToIdpLogin(url)\r\n\r\n    return false\r\n  }\r\n\r\n  private checkBoundaryValue(data: Data, paramMap: ParamMap): boolean {\r\n    let hasPermission = false\r\n\r\n    if (!data || !data.boundaryParamName) {\r\n      return true\r\n    }\r\n\r\n    if (this.authorizationService.hasDevopsRole()) {\r\n      return true\r\n    }\r\n\r\n    this.authenticationService.getPayload().roles.forEach(role => {\r\n      if (this.authorizationService.hasRoleForBoundary(role.role, paramMap.get(data.boundaryParamName))) {\r\n        hasPermission = true\r\n        return\r\n      }\r\n    })\r\n\r\n    if (!hasPermission) {\r\n      this.router.navigateByUrl(NO_PERMISSION_ROUTE)\r\n    }\r\n\r\n    return hasPermission\r\n  }\r\n\r\n  private checkRoles(data: Data): boolean {\r\n    let hasPermission = false\r\n\r\n    if (!data || !data.roles) {\r\n      return true\r\n    }\r\n\r\n    data.roles.forEach(role => {\r\n      const requiredRoleName = role\r\n\r\n      const hasRole = this.authorizationService.hasRole(requiredRoleName)\r\n      if (hasRole) {\r\n        hasPermission = true\r\n        return\r\n      }\r\n    })\r\n\r\n    if (!hasPermission) {\r\n      this.router.navigateByUrl(NO_PERMISSION_ROUTE)\r\n    }\r\n\r\n    return hasPermission\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router'\r\nimport { AuthenticationService } from '../services/authentication.service'\r\n\r\n@Injectable()\r\nexport class NotLoggedInAuthGuard implements CanActivate {\r\n\r\n  constructor(private authenticationService: AuthenticationService,\r\n              private router: Router) {\r\n  }\r\n\r\n  public canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    if (this.authenticationService.isLoggedIn) {\r\n      if (route.data && route.data.redirectTo) {\r\n        this.router.navigateByUrl(route.data.redirectTo)\r\n      } else {\r\n        this.router.navigateByUrl('/')\r\n      }\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n}\r\n","import { Injectable, Injector } from '@angular/core'\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\nimport { AuthenticationService } from './authentication.service'\r\n\r\n@Injectable()\r\nexport class AuthenticatingInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private injector: Injector) { }\r\n\r\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const authenticationService: AuthenticationService = this.injector.get(AuthenticationService)\r\n    let newRequest = request\r\n    if (authenticationService.isLoggedIn) {\r\n      newRequest = request.clone({\r\n        setHeaders: {\r\n          Authorization: authenticationService.getAuthTokenHeaderString()\r\n        }\r\n      })\r\n    } else {\r\n      newRequest = request\r\n    }\r\n    return next.handle(newRequest)\r\n  }\r\n\r\n}\r\n","import { ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core'\r\nimport { Subscription } from 'rxjs'\r\nimport { AuthenticationService } from '../../services/authentication.service'\r\nimport { UserService } from '../../services/user.service'\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons/faUser'\r\n\r\n@Component({\r\n  selector: 'app-fx-login',\r\n  templateUrl: './fx-login.component.html',\r\n  styleUrls: ['./fx-login.component.scss'],\r\n})\r\nexport class FxLoginComponent implements OnInit, OnDestroy {\r\n\r\n  @Input()\r\n  public btnStyle = ''\r\n\r\n  @Input()\r\n  public dropDownStyling = ''\r\n\r\n  @Input()\r\n  public languageSelectorRadioGroupStyling = 'fx-styling'\r\n\r\n  @Input()\r\n  public icon = 'fa-user'\r\n\r\n  public fasUser: IconProp = faUser\r\n\r\n  public username: string\r\n\r\n  private subscriptions: Subscription = new Subscription()\r\n\r\n  constructor(private authenticationService: AuthenticationService,\r\n              private userService: UserService,\r\n              private changeDetector: ChangeDetectorRef) {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.subscriptions.add(this.authenticationService.loginEvents.subscribe(() => {\r\n      this.username = this.userService.getUsername()\r\n      this.changeDetector.markForCheck()\r\n    }))\r\n  }\r\n\r\n  public isNotLoggedIn(): boolean {\r\n    return !this.username || this.username.trim().length === 0\r\n  }\r\n\r\n  public login(): void {\r\n    this.authenticationService.loginWithRedirectUrl()\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe()\r\n  }\r\n\r\n  public setIcon(selectedIcon?: string): IconProp {\r\n    switch (selectedIcon) {\r\n      case 'fasUser': {\r\n        return this.fasUser\r\n      }\r\n      default: {\r\n        return this.fasUser\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\nimport { SecurityConfig } from '../../fx-security.module'\r\nimport { SECURITY_CONFIG } from '../../domain/security-config'\r\n\r\n@Component({\r\n    selector: 'app-no-permissions',\r\n    templateUrl: './no-permissions.component.html',\r\n    styleUrls: ['./no-permissions.component.scss']\r\n})\r\nexport class NoPermissionsComponent implements OnInit {\r\n\r\n    public ursLink: string\r\n    protected securityConfig: SecurityConfig\r\n\r\n    constructor(private router: Router, @Inject(SECURITY_CONFIG) securityConfig: SecurityConfig) {\r\n        this.securityConfig = securityConfig\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.ursLink = this.securityConfig.authorization_ui_url\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { FxUserSelectorComponent } from './components/fx-user-selector/fx-user-selector.component'\r\nimport { FxTranslationModule } from '../fx-translation/fx-translation.module'\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap'\r\nimport { IdpLoginComponent } from './components/idp-login/idp-login.component'\r\nimport { LoginErrorComponent } from './components/login-error/login-error.component'\r\nimport { LoggedOutComponent } from './components/logged-out/logged-out.component'\r\nimport { IsLoggedInDirective } from './directives/is-logged-in.directive'\r\nimport { HasRoleDirective } from './directives/has-role.directive'\r\nimport { LogoutDirective } from './directives/logout.directive'\r\nimport { AuthGuard } from './guards/auth-guard.service'\r\nimport { AuthenticationService } from './services/authentication.service'\r\nimport { NotLoggedInAuthGuard } from './guards/not-logged-in-auth-guard.service'\r\nimport { RedirectorService } from './services/redirector.service'\r\nimport { AuthenticatingInterceptorService } from './services/authenticating-interceptor.service'\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http'\r\nimport { SECURITY_CONFIG } from './domain/security-config'\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faSignOutAlt as fasSignOutAlt } from '@fortawesome/free-solid-svg-icons/faSignOutAlt'\r\nimport { faBan as fasBan } from '@fortawesome/free-solid-svg-icons/faBan'\r\nimport { faAngry as farAngry } from '@fortawesome/free-regular-svg-icons/faAngry'\r\nimport { faExclamation as fasExclamation } from '@fortawesome/free-solid-svg-icons/faExclamation'\r\nimport { faUser as fasUser } from '@fortawesome/free-solid-svg-icons/faUser'\r\nimport { AuthorizationService } from './services/authorization.service'\r\nimport { LoginService } from './services/login.service'\r\nimport { UserService } from './services/user.service'\r\nimport { FxLoginComponent } from './components/fx-login/fx-login.component'\r\nimport { NoPermissionsComponent } from './components/no-permissions/no-permissions.component'\r\n\r\nlibrary.add(fasUser, fasSignOutAlt, fasBan, farAngry, fasExclamation)\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FxUserSelectorComponent,\r\n    IdpLoginComponent,\r\n    LoginErrorComponent,\r\n    LoggedOutComponent,\r\n    NoPermissionsComponent,\r\n    IsLoggedInDirective,\r\n    HasRoleDirective,\r\n    LogoutDirective,\r\n    FxLoginComponent\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    NotLoggedInAuthGuard,\r\n    AuthenticationService,\r\n    AuthorizationService,\r\n    RedirectorService,\r\n    LoginService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthenticatingInterceptorService,\r\n      multi: true\r\n    },\r\n    UserService\r\n  ],\r\n  exports: [\r\n    FxUserSelectorComponent,\r\n    FxLoginComponent,\r\n    IdpLoginComponent,\r\n    IsLoggedInDirective,\r\n    HasRoleDirective,\r\n    LogoutDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FxTranslationModule,\r\n    NgbDropdownModule,\r\n    FontAwesomeModule\r\n  ]\r\n})\r\nexport class FxSecurityModule {\r\n  public static forRoot(securityConfig: SecurityConfig): any {\r\n    return {\r\n      ngModule: FxSecurityModule,\r\n      providers: [{\r\n        provide: SECURITY_CONFIG,\r\n        useValue: securityConfig\r\n      },\r\n        AuthenticationService,\r\n        AuthorizationService,\r\n        LoginService,\r\n        UserService\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nexport interface SecurityConfig {\r\n  authorization_service_url: string\r\n  authorization_ui_url: string\r\n  app_name: string\r\n  app_domain: string\r\n  idp_base_url: string\r\n  client_id: string\r\n  login_redirect_url: string\r\n  logout_redirect_url: string\r\n  roles: {\r\n    view: string[],\r\n    edit: string[],\r\n    devops: string[]\r\n  }\r\n  boundary_name: string\r\n}\r\n","import { Component, Input } from '@angular/core'\r\n\r\nexport interface ConfidentialityLogo {\r\n  type: string\r\n  path: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-fx-confidentiality-logo',\r\n  templateUrl: './fx-confidentiality-logo.component.html',\r\n  styleUrls: ['./fx-confidentiality-logo.component.scss']\r\n})\r\nexport class FxConfidentialityLogoComponent {\r\n\r\n  public readonly confidentialityLogo: ConfidentialityLogo[] = [\r\n    {type: 'public', path: '/assets/images/confidentiality_logos/VWAG_Public.svg'},\r\n    {type: 'public_scaled', path: '/assets/images/confidentiality_logos/VWAG_Public_scaled.svg'},\r\n    {type: 'internal', path: '/assets/images/confidentiality_logos/VWAG_Internal.svg'},\r\n    {type: 'internal_scaled', path: '/assets/images/confidentiality_logos/VWAG_Internal_scaled.svg'},\r\n    {type: 'confidential', path: '/assets/images/confidentiality_logos/VWAG_Confidential.svg'},\r\n    {type: 'confidential_scaled', path: '/assets/images/confidentiality_logos/VWAG_Confidential_scaled.svg'},\r\n    {type: 'secret', path: '/assets/images/confidentiality_logos/VWAG_Secret.svg'},\r\n    {type: 'secret_scaled', path: '/assets/images/confidentiality_logos/VWAG_Secret_scaled.svg'},\r\n  ]\r\n\r\n  @Input()\r\n  public logoType = 'internal'\r\n\r\n  @Input()\r\n  public logoHeight = 60\r\n\r\n  @Input()\r\n  public logoColor: string\r\n\r\n  constructor() { }\r\n\r\n  public getPath(): string {\r\n    return this.confidentialityLogo.find(logo => logo.type === this.logoType).path\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { FxConfidentialityLogoComponent } from './fx-confidentiality-logo.component'\r\n\r\n\r\n@NgModule({\r\n  declarations: [FxConfidentialityLogoComponent],\r\n  exports: [\r\n    FxConfidentialityLogoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class FxConfidentialityLogoModule { }\r\n","export class RoutingPathResource {\r\n  public regex: RegExp\r\n  public url: string\r\n\r\n  constructor(regex: RegExp, url: string) {\r\n    this.regex = regex\r\n    this.url = url\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core'\r\nimport { ActivatedRoute, UrlSegment } from '@angular/router'\r\nimport { IconProp, SizeProp } from '@fortawesome/fontawesome-svg-core'\r\nimport { faQuestionCircle as farQuestionCircle } from '@fortawesome/free-regular-svg-icons/faQuestionCircle'\r\nimport { faQuestion } from '@fortawesome/free-solid-svg-icons'\r\nimport { faQuestionCircle as fasQuestionCircle } from '@fortawesome/free-solid-svg-icons/faQuestionCircle'\r\nimport { RoutingPathResource } from './domain/routing-path-resource'\r\n\r\n@Component({\r\n  selector: 'app-fx-wiki',\r\n  templateUrl: './fx-wiki.component.html',\r\n  styleUrls: ['./fx-wiki.component.scss'],\r\n})\r\nexport class FxWikiComponent implements OnInit {\r\n\r\n  public fasQuestion: IconProp = faQuestion\r\n  public fasQuestionCircle: IconProp = fasQuestionCircle\r\n  public farQuestionCircle: IconProp = farQuestionCircle\r\n\r\n  @Input()\r\n  public icon = 'farQuestionCircle'\r\n\r\n  @Input()\r\n  public color = 'black'\r\n\r\n  @Input()\r\n  public size: SizeProp = '2x'\r\n\r\n  public defaultRoutingPath = new RoutingPathResource(RegExp(''), 'https://soco.volkswagen.com/wikis/')\r\n\r\n  @Input()\r\n  public routingPathArray: RoutingPathResource[]\r\n\r\n  public wikiUrl: string\r\n\r\n  constructor(private activatedRoute: ActivatedRoute) {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.activatedRoute.url.subscribe(url => this.wikiUrl = this.getRouteFromRegex(url))\r\n  }\r\n\r\n  public setIcon(selectedIcon?: string): IconProp {\r\n    switch (selectedIcon) {\r\n      case 'fasQuestion': {\r\n        return this.fasQuestion\r\n      }\r\n      case 'farQuestionCircle': {\r\n        return this.farQuestionCircle\r\n      }\r\n      case 'fasQuestionCircle': {\r\n        return this.fasQuestionCircle\r\n      }\r\n      default: {\r\n        return this.farQuestionCircle\r\n      }\r\n    }\r\n  }\r\n\r\n  public setIconColor(): { color: string } {\r\n    return {color: this.color}\r\n  }\r\n\r\n  private getRouteFromRegex(urlArray: UrlSegment[]): string {\r\n    const url = urlArray.join('/')\r\n    if (this.routingPathArray) {\r\n      for (const routingPath of this.routingPathArray) {\r\n        if (url.match(routingPath.regex)) {\r\n          return routingPath.url\r\n        }\r\n      }\r\n    }\r\n    return this.defaultRoutingPath.url\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { FxWikiComponent } from './fx-wiki.component'\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faQuestionCircle as fasQuestionCircle } from '@fortawesome/free-solid-svg-icons/faQuestionCircle'\r\nimport { faQuestionCircle as farQuestionCircle } from '@fortawesome/free-regular-svg-icons/faQuestionCircle'\r\nimport { faQuestion as fasQuestion } from '@fortawesome/free-solid-svg-icons/faQuestion'\r\n\r\nlibrary.add(fasQuestionCircle, farQuestionCircle, fasQuestion)\r\n\r\n@NgModule({\r\n  declarations: [FxWikiComponent],\r\n  exports: [\r\n    FxWikiComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FontAwesomeModule\r\n  ]\r\n})\r\nexport class FxWikiModule {\r\n}\r\n\r\n","export class WeekResource {\r\n  constructor(public year: number, public week: number) {}\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core'\r\nimport { IconProp, SizeProp } from '@fortawesome/fontawesome-svg-core'\r\nimport { faCalendar as farCalendar } from '@fortawesome/free-regular-svg-icons/faCalendar'\r\nimport { faCalendarAlt as farCalendarAlt } from '@fortawesome/free-regular-svg-icons/faCalendarAlt'\r\nimport { faCalendar as fasCalendar } from '@fortawesome/free-solid-svg-icons/faCalendar'\r\nimport { faCalendarAlt as fasCalendarAlt } from '@fortawesome/free-solid-svg-icons/faCalendarAlt'\r\nimport { faCalendarWeek } from '@fortawesome/free-solid-svg-icons/faCalendarWeek'\r\nimport { NgbCalendar, NgbDate } from '@ng-bootstrap/ng-bootstrap'\r\nimport { TranslateService } from '@ngx-translate/core'\r\nimport * as moment_ from 'moment'\r\nimport { delay, tap } from 'rxjs/operators'\r\nimport { WeekResource } from './domain/week-resource'\r\n\r\nconst DATE_FORMAT = 'YYYY-MM-DD'\r\nconst WEEK_START = 1\r\nconst moment = moment_\r\n\r\n@Component({\r\n  selector: 'app-fx-week-selector',\r\n  templateUrl: './fx-week-selector.component.html',\r\n  styleUrls: ['./fx-week-selector.component.scss'],\r\n})\r\nexport class FxWeekSelectorComponent implements OnInit, OnChanges {\r\n\r\n  public fasCalendarWeek: IconProp = faCalendarWeek\r\n  public fasCalendarAlt: IconProp = fasCalendarAlt\r\n  public farCalendarAlt: IconProp = farCalendarAlt\r\n  public fasCalendar: IconProp = fasCalendar\r\n  public farCalendar: IconProp = farCalendar\r\n\r\n  @Input()\r\n  public icon = 'fasCalendarWeek'\r\n\r\n  @Input()\r\n  public colorIcon = 'black'\r\n\r\n  @Input()\r\n  public sizeIcon: SizeProp = '1x'\r\n\r\n  @Input()\r\n  public btnStyle = ''\r\n\r\n  @Input()\r\n  public selectorStyling = ''\r\n\r\n  @Input()\r\n  public displayMonth = '2'\r\n\r\n  @Input()\r\n  public initDate: NgbDate\r\n\r\n  @Input()\r\n  public minDate: NgbDate\r\n\r\n  @Input()\r\n  public maxDate: NgbDate\r\n\r\n  @Output()\r\n  public selectionEvent: EventEmitter<WeekResource>\r\n\r\n  @Input()\r\n  public displayString: string\r\n\r\n  public visible = false\r\n\r\n  public disable = true\r\n\r\n  public hoverDate: NgbDate\r\n  public selectedDate: NgbDate\r\n  public hoveredWeekNr: number\r\n  public selectedWeekNr: number\r\n  public showNavigation = true\r\n\r\n\r\n  constructor(private calendar: NgbCalendar, private translateService: TranslateService) {\r\n\r\n    this.selectionEvent = new EventEmitter<WeekResource>()\r\n\r\n    // workaround for translation. Update the navigation component to load the new language immediately\r\n    this.translateService.onLangChange.pipe(\r\n      tap(() => this.showNavigation = false),\r\n    ).pipe(\r\n      delay(1),\r\n      tap(() => this.showNavigation = true),\r\n    ).subscribe()\r\n  }\r\n\r\n  public closeDatePicker(): void {\r\n    this.visible = false\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (!this.initDate) {\r\n      return\r\n    }\r\n    this.disable = !this.displayString || this.displayString === ''\r\n    this.selectedDate = this.initDate\r\n  }\r\n\r\n  public ngOnChanges(data: SimpleChanges): void {\r\n    // FIXME: data should be checked, if its the correct property\r\n    this.selectedDate = this.initDate\r\n    this.selectedWeekNr = this.returnWeekNr(this.initDate)\r\n    this.isInsideWeekSelection(this.selectedDate)\r\n  }\r\n\r\n  public isInsideWeekSelection(date: NgbDate): boolean {\r\n    const weekNr = this.returnWeekNr(date)\r\n    return this.selectedWeekNr === weekNr\r\n  }\r\n\r\n  public selectedWeekOfYear(): WeekResource {\r\n    return new WeekResource(this.selectedDate.year, this.returnWeekNr(this.selectedDate))\r\n  }\r\n\r\n  public isInsideWeekHovered(date: NgbDate): boolean {\r\n    const weekNr = this.returnWeekNr(date)\r\n    return this.hoveredWeekNr === weekNr\r\n  }\r\n\r\n  public onHover(date: NgbDate): void {\r\n    this.hoverDate = date\r\n    this.hoveredWeekNr = this.returnWeekNr(date)\r\n  }\r\n\r\n  public onDateSelection(date: NgbDate): void {\r\n    this.selectedDate = date\r\n    this.selectedWeekNr = this.returnWeekNr(date)\r\n    this.closeDatePicker()\r\n    this.selectionEvent.emit(new WeekResource(this.returnWeekYear(date), this.selectedWeekNr))\r\n  }\r\n\r\n  public returnWeekNr(date: NgbDate): number {\r\n    moment.locale('de')\r\n    return moment(`${date.year}-${date.month}-${date.day}`, DATE_FORMAT).isoWeekday(WEEK_START).week()\r\n  }\r\n\r\n  public returnWeekYear(date: NgbDate): number {\r\n    moment.locale('de')\r\n    return moment(`${date.year}-${date.month}-${date.day}`, DATE_FORMAT).isoWeekday(WEEK_START).weekYear()\r\n  }\r\n\r\n  public setIcon(selectedIcon?: string): IconProp {\r\n    switch (selectedIcon) {\r\n      case 'fasCalendarAlt': {\r\n        return this.fasCalendarAlt\r\n      }\r\n      case 'farCalendarAlt': {\r\n        return this.farCalendarAlt\r\n      }\r\n      case 'fasCalendar': {\r\n        return this.fasCalendar\r\n      }\r\n      case 'farCalendar': {\r\n        return this.farCalendar\r\n      }\r\n      default: {\r\n        return this.fasCalendarWeek\r\n      }\r\n    }\r\n  }\r\n\r\n  public setIconColor(): { colorIcon: string } {\r\n    return {colorIcon: this.colorIcon}\r\n  }\r\n\r\n  public isDisabled = (date: NgbDate) => this.isDayDisabled(date)\r\n\r\n  public isDayDisabled(date: NgbDate): boolean {\r\n    return date.before(this.minDate) || date.after(this.maxDate)\r\n  }\r\n\r\n  public isToday(date: NgbDate): boolean {\r\n    const weekNr = this.returnWeekNr(date)\r\n    const calendarWeekNr = this.returnWeekNr(this.calendar.getToday())\r\n    const weekYear = this.returnWeekYear(date)\r\n    const calendarWeekYear = this.returnWeekYear(this.calendar.getToday())\r\n    return weekYear === calendarWeekYear && weekNr === calendarWeekNr\r\n      && !this.isInsideWeekSelection(date) && !this.isInsideWeekHovered(date)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap'\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core'\r\n\r\n\r\nconst I18N_VALUES = {\r\n  de: {\r\n    weekdays: ['Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa', 'So'],\r\n    months_long: ['Januar', 'Februar', 'MÃ¤rz', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'],\r\n    months_short: ['Jan', 'Feb', 'MÃ¤r', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\r\n  },\r\n  en: {\r\n    weekdays: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'],\r\n    months_long: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n    months_short: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dez'],\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class I18n {\r\n  public language = 'en'\r\n\r\n  constructor(private translateService: TranslateService) {\r\n    translateService.onLangChange.subscribe( (langChangeEvent: LangChangeEvent) => {\r\n      this.language = langChangeEvent.lang\r\n    })\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class FxWeekSelectorI18n extends NgbDatepickerI18n {\r\n\r\n  constructor(private i18n: I18n) {\r\n    super()\r\n  }\r\n\r\n  public getDayAriaLabel(date: NgbDateStruct): string {\r\n    return `${date.year}-${date.month}-${date.day}`\r\n  }\r\n\r\n  public getMonthFullName(month: number): string {\r\n    return I18N_VALUES[this.i18n.language].months_long[month - 1]\r\n  }\r\n\r\n  public getMonthShortName(month: number): string {\r\n    return this.getMonthFullName(month)\r\n  }\r\n\r\n  public getWeekdayShortName(weekday: number): string {\r\n    return I18N_VALUES[this.i18n.language].weekdays[weekday - 1]\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { FxWeekSelectorComponent } from './fx-week-selector.component'\r\nimport { FxTranslationModule } from '../fx-translation/fx-translation.module'\r\nimport { NgbDatepickerI18n, NgbDatepickerModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap'\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faCalendarWeek as fasCalendarWeek } from '@fortawesome/free-solid-svg-icons/faCalendarWeek'\r\nimport { faCalendarAlt as fasCalendarAlt } from '@fortawesome/free-solid-svg-icons/faCalendarAlt'\r\nimport { faCalendarAlt as farCalendarAlt } from '@fortawesome/free-regular-svg-icons/faCalendarAlt'\r\nimport { faCalendar as fasCalendar } from '@fortawesome/free-solid-svg-icons/faCalendar'\r\nimport { faCalendar as farCalendar } from '@fortawesome/free-regular-svg-icons/faCalendar'\r\nimport { FxWeekSelectorI18n, I18n } from './fx-week-selector-i18n'\r\nimport { ClickOutsideModule } from 'ng-click-outside'\r\n\r\nlibrary.add(fasCalendarWeek, fasCalendarAlt, farCalendarAlt, fasCalendar, farCalendar)\r\n\r\n@NgModule({\r\n  declarations: [FxWeekSelectorComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FxTranslationModule,\r\n    NgbDatepickerModule,\r\n    FontAwesomeModule,\r\n    ClickOutsideModule,\r\n    NgbTooltipModule\r\n  ],\r\n  exports: [\r\n    FxWeekSelectorComponent\r\n  ],\r\n  providers: [I18n, { provide: NgbDatepickerI18n, useClass: FxWeekSelectorI18n }]\r\n})\r\nexport class FxWeekSelectorModule { }\r\n","import { Injectable } from '@angular/core'\r\nimport { FxHeaderConfigModel } from '../models/config/fx-header-config.model'\r\nimport { FxHeaderComponentConfigModel } from '../models/config/fx-header-component-config.model'\r\n\r\n@Injectable()\r\nexport class FxHeaderConfigValidatorService {\r\n\r\n    constructor() { }\r\n\r\n    public validate(config: FxHeaderConfigModel): boolean {\r\n        if (!config.components) {\r\n            return true\r\n        }\r\n\r\n        return this.checkForUniqueEventNames(config.components)\r\n    }\r\n\r\n    private checkForUniqueEventNames(components: FxHeaderComponentConfigModel[]): boolean {\r\n        let isUnique = true\r\n        const eventNames: string[] = []\r\n\r\n        components.forEach(component => {\r\n            if (!component.config || !component.config.outputEvents || !isUnique) {\r\n                return\r\n            }\r\n\r\n            component.config.outputEvents.forEach(outputEvent => {\r\n                if (eventNames.some(x => x === outputEvent)) {\r\n                    console.error('the fx-header config contains duplicate event names (' + outputEvent + '). all event names need to be unique.')\r\n                    isUnique = false\r\n                }\r\n\r\n                eventNames.push(outputEvent)\r\n            })\r\n        })\r\n\r\n        return isUnique\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { Subject, BehaviorSubject } from 'rxjs'\r\nimport { FxHeaderConfigValidatorService } from './fx-header-config-validator.service'\r\nimport { FxHeaderConfigModel } from '../models/config/fx-header-config.model'\r\n\r\n@Injectable()\r\nexport class FxHeaderConfigService {\r\n\r\n    public config: Subject<FxHeaderConfigModel> = new BehaviorSubject<FxHeaderConfigModel>({\r\n        appTitleShort: '',\r\n        appTitle: '',\r\n        routes: [],\r\n        staticComponents: [],\r\n        components: []\r\n    })\r\n\r\n    constructor(private fxheaderConfigValidatorService: FxHeaderConfigValidatorService) { }\r\n\r\n    public setConfig(config: FxHeaderConfigModel): void {\r\n        if (!this.fxheaderConfigValidatorService.validate(config)) {\r\n            return\r\n        }\r\n\r\n        this.config.next(config)\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'app-fx-header-app-specific-text',\r\n    templateUrl: './fx-header-app-specific-text.component.html',\r\n    styleUrls: ['./fx-header-app-specific-text.component.scss']\r\n})\r\nexport class FxHeaderAppSpecificTextComponent {\r\n\r\n    @Input()\r\n    public text = ''\r\n\r\n    constructor() {\r\n    }\r\n\r\n}\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n    AfterViewInit,\r\n    ChangeDetectorRef,\r\n    Output,\r\n    EventEmitter,\r\n    Input,\r\n    HostListener,\r\n    ElementRef,\r\n    OnDestroy\r\n} from '@angular/core'\r\nimport { FxHeaderEvent } from './models/fx-header-event'\r\nimport { FxHeaderConfigService } from './services/fx-header-config.service'\r\nimport { FxHeaderRouteConfigModel } from './models/config/fx-header-route-config.model'\r\nimport { FxHeaderComponentConfigModel } from './models/config/fx-header-component-config.model'\r\nimport { FxHeaderConfigModel } from './models/config/fx-header-config.model'\r\nimport { Subscription, of } from 'rxjs'\r\nimport { FxHeaderAppSpecificComponentConfigModel } from './models/config/fx-header-app-specific-component-config.model'\r\nimport { FxHeaderAppSpecificTextComponent } from './components/fx-header-app-specific-text.component'\r\n\r\n@Component({\r\n    selector: 'app-fx-header',\r\n    templateUrl: './fx-header.component.html',\r\n    styleUrls: ['./fx-header.component.scss']\r\n})\r\nexport class FxHeaderComponent implements AfterViewInit, OnDestroy {\r\n\r\n    @ViewChild('appSpecificComponentsContainer', { read: ViewContainerRef, static: false })\r\n    public appSpecificComponentsContainer: ViewContainerRef\r\n\r\n    @ViewChild('staticComponentsContainer', { read: ViewContainerRef, static: false })\r\n    public staticComponentsContainer: ViewContainerRef\r\n\r\n    @ViewChild('componentsContainer', { read: ViewContainerRef, static: false })\r\n    public componentsContainer: ViewContainerRef\r\n\r\n\r\n    @Input()\r\n    public navbarStyling = 'fx-styling'\r\n    @Output()\r\n    public componentEvents = new EventEmitter<FxHeaderEvent>()\r\n\r\n    public logoPath = '/assets/images/fx_logos/FX_Logo_White.png'\r\n    public appTitleShort: string\r\n    public appTitle: string\r\n    public routes: FxHeaderRouteConfigModel[] = []\r\n    public appSpecificComponentsConfigs: FxHeaderAppSpecificComponentConfigModel[] = []\r\n    public staticComponentConfigs: FxHeaderComponentConfigModel[] = []\r\n    public componentConfigs: FxHeaderComponentConfigModel[] = []\r\n\r\n    public isCollapsed = true\r\n\r\n    private subscriptions: Subscription = new Subscription()\r\n\r\n    constructor(private fxHeaderConfigService: FxHeaderConfigService,\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private cdRef: ChangeDetectorRef,\r\n        private eRef: ElementRef) {\r\n    }\r\n\r\n    public ngAfterViewInit(): void {\r\n        this.subscriptions.add(this.fxHeaderConfigService.config.subscribe((config: FxHeaderConfigModel) => {\r\n            if (config.logoPath != null) {\r\n                this.logoPath = config.logoPath\r\n            }\r\n\r\n            this.appTitleShort = config.appTitleShort\r\n            this.appTitle = config.appTitle\r\n            this.routes = config.routes\r\n\r\n            if (config.appSpecificComponents) {\r\n                config.appSpecificComponents.forEach((componentConfig: FxHeaderAppSpecificComponentConfigModel) => {\r\n                    this.appSpecificComponentsConfigs.push(componentConfig)\r\n                    this.addAppSpecificComponentToContainer(componentConfig)\r\n                })\r\n            }\r\n\r\n            if (config.staticComponents) {\r\n                config.staticComponents.forEach((component: FxHeaderComponentConfigModel) => {\r\n                    this.staticComponentConfigs.push(component)\r\n                    this.addComponentToContainer(component, this.staticComponentsContainer)\r\n                })\r\n            }\r\n\r\n            if (config.components) {\r\n                config.components.forEach((componentConfig: FxHeaderComponentConfigModel) => {\r\n                    this.componentConfigs.push(componentConfig)\r\n                    this.addComponentToContainer(componentConfig, this.componentsContainer)\r\n                })\r\n            }\r\n        }))\r\n\r\n        this.cdRef.detectChanges()\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscriptions.unsubscribe()\r\n    }\r\n\r\n    @HostListener('document:click', ['$event'])\r\n    public clickout(event: Event): void {\r\n        if (!this.eRef.nativeElement.contains(event.target)) {\r\n            this.isCollapsed = true\r\n        }\r\n    }\r\n\r\n    private addAppSpecificComponentToContainer(componentConfig: FxHeaderAppSpecificComponentConfigModel): void {\r\n        this.addComponentToContainer(componentConfig.componentConfigModel, this.appSpecificComponentsContainer)\r\n        this.addComponentToContainer(this.creatTextComponentConfig(componentConfig.text), this.appSpecificComponentsContainer)\r\n    }\r\n\r\n    private creatTextComponentConfig(text: string): FxHeaderComponentConfigModel {\r\n        return {\r\n            componentClass: FxHeaderAppSpecificTextComponent,\r\n            config: { inputs: of([{ key: 'text', value: text }]) }\r\n        }\r\n    }\r\n\r\n    private addComponentToContainer(componentConfig: FxHeaderComponentConfigModel, componentContainer: ViewContainerRef): void {\r\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentConfig.componentClass)\r\n        const component = componentContainer.createComponent(componentFactory)\r\n\r\n        if (!componentConfig.config) {\r\n            return\r\n        }\r\n\r\n        if (componentConfig.config.inputs) {\r\n            this.subscriptions.add(componentConfig.config.inputs.subscribe(config => {\r\n                config.forEach(configEntry => {\r\n                    component.instance[configEntry.key] = configEntry.value\r\n                })\r\n            }))\r\n        }\r\n\r\n        if (componentConfig.config.outputEvents) {\r\n            componentConfig.config.outputEvents.forEach((eventName) => {\r\n                this.subscriptions.add(component.instance[eventName].subscribe(event => {\r\n                    this.componentEvents.emit({ name: eventName, data: event })\r\n                }))\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { FxHeaderComponent } from './fx-header.component'\r\nimport { FxBoundarySelectorModule } from '../fx-boundary-selector/fx-boundary-selector.module'\r\nimport { FxSecurityModule } from '../fx-security/fx-security.module'\r\nimport { FxConfidentialityLogoModule } from '../fx-confidentiality-logo/fx-confidentiality-logo.module'\r\nimport { FxBoundarySelectorComponent } from '../fx-boundary-selector/fx-boundary-selector.component'\r\nimport { FxUserSelectorComponent } from '../fx-security/components/fx-user-selector/fx-user-selector.component'\r\nimport { FxWikiModule } from '../fx-wiki/fx-wiki.module'\r\nimport { FxHeaderConfigValidatorService } from './services/fx-header-config-validator.service'\r\nimport { FxHeaderConfigService } from './services/fx-header-config.service'\r\nimport { FxLoginComponent } from '../fx-security/components/fx-login/fx-login.component'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\r\nimport { FxTranslationModule } from '../fx-translation/fx-translation.module'\r\nimport { RouterModule } from '@angular/router'\r\nimport { FxHeaderAppSpecificTextComponent } from './components/fx-header-app-specific-text.component'\r\nimport { FxWikiComponent } from '../fx-wiki/fx-wiki.component'\r\nimport { FxConfidentialityLogoComponent } from '../fx-confidentiality-logo/fx-confidentiality-logo.component'\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FxHeaderComponent,\r\n        FxHeaderAppSpecificTextComponent\r\n    ],\r\n    exports: [\r\n        FxHeaderComponent,\r\n        FxHeaderAppSpecificTextComponent\r\n    ],\r\n    imports: [\r\n        RouterModule,\r\n        CommonModule,\r\n        FxBoundarySelectorModule,\r\n        FxSecurityModule,\r\n        FxConfidentialityLogoModule,\r\n        FxWikiModule,\r\n        NgbModule,\r\n        FxTranslationModule,\r\n    ],\r\n    providers: [\r\n        FxHeaderConfigService,\r\n        FxHeaderConfigValidatorService\r\n    ],\r\n    entryComponents: [FxBoundarySelectorComponent, FxUserSelectorComponent, FxLoginComponent, FxWikiComponent, FxConfidentialityLogoComponent, FxHeaderAppSpecificTextComponent]\r\n})\r\nexport class FxHeaderModule { }\r\n","import { Type } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\n\r\nexport interface FxHeaderComponentConfigModel {\r\n    componentClass: Type<any>\r\n    config?: {\r\n        outputEvents?: string[]\r\n        inputs?: Observable<{ key: string, value: any }[]>\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core'\r\nimport { FxHeaderRouteConfigModel } from './fx-header-route-config.model'\r\nimport { FxHeaderComponentConfigModel } from './fx-header-component-config.model'\r\nimport { FxHeaderAppSpecificComponentConfigModel } from './fx-header-app-specific-component-config.model'\r\n\r\nexport let FX_HEADER_CONFIG = new InjectionToken<FxHeaderConfigModel>('app.fxheaderconfig')\r\n\r\nexport interface FxHeaderConfigModel {\r\n    logoPath?: string\r\n    appTitleShort: string\r\n    appTitle: string\r\n    routes: FxHeaderRouteConfigModel[]\r\n    appSpecificComponents?: FxHeaderAppSpecificComponentConfigModel[]\r\n    staticComponents?: FxHeaderComponentConfigModel[]\r\n    components?: FxHeaderComponentConfigModel[]\r\n}\r\n","export interface FxHeaderRouteConfigModel {\r\n    name: string\r\n    route: string\r\n}\r\n","export interface FxHeaderEvent {\r\n    name: string\r\n    data: any\r\n}\r\n","import { NgxUiLoaderService } from 'ngx-ui-loader'\r\n\r\nexport function showOrHideLoader(loading: boolean | number,\r\n                                 ngxUiLoaderService: NgxUiLoaderService,\r\n                                 loadingId: string,\r\n                                 showLoader: boolean = true): void {\r\n  if (showLoader && !!ngxUiLoaderService && !!ngxUiLoaderService.getLoaders()[loadingId]) {\r\n    !!loading ? ngxUiLoaderService.startLoader(loadingId) : ngxUiLoaderService.stopLoader(loadingId)\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core'\r\nimport { DatatableColumnTooltip } from '../interfaces/datatable-column'\r\n\r\nexport function getTooltip(tooltip: DatatableColumnTooltip | DatatableColumnTooltip[], translateService: TranslateService, row?: any): string | undefined {\r\n  if (!tooltip || !translateService) {\r\n    return undefined\r\n  }\r\n  let tipObj: DatatableColumnTooltip\r\n  if (Array.isArray(tooltip)) {\r\n    const tipArray: DatatableColumnTooltip[] = [...tooltip as DatatableColumnTooltip[]]\r\n    if (!tipArray || tipArray.length === 0) {\r\n      return undefined\r\n    }\r\n    const tripFromArray = tipArray.find(tip => tip.showCondition(row))\r\n    if (tripFromArray) {\r\n      tipObj = tripFromArray\r\n    } else {\r\n      return undefined\r\n    }\r\n  } else {\r\n    tipObj = tooltip as DatatableColumnTooltip\r\n    if (!tipObj || (tipObj.showCondition && !tipObj.showCondition(row))) {\r\n      return undefined\r\n    }\r\n  }\r\n  return tipObj ? translateService.instant(tipObj.text) + (tipObj.column ? ` (${row[tipObj.column]})` : '') : undefined\r\n}\r\n","import { formatDate } from '@angular/common'\r\nimport { Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, TemplateRef, ViewChild } from '@angular/core'\r\nimport { TranslateService } from '@ngx-translate/core'\r\nimport { DataTableColumnDirective, DatatableComponent, SortType } from '@swimlane/ngx-datatable'\r\nimport { ClipboardService } from 'ngx-clipboard'\r\nimport { ContextMenuComponent } from 'ngx-contextmenu'\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader'\r\nimport { PositionType, SpinnerType } from 'ngx-ui-loader/lib/utils/types'\r\nimport { Subject, Subscription } from 'rxjs'\r\nimport { debounceTime, filter, map } from 'rxjs/operators'\r\nimport { FxNotificationService } from '../fx-notification/fx-notification.service'\r\nimport { showOrHideLoader } from '../shared/helper/loading.helper'\r\nimport { getTooltip } from '../shared/helper/tooltip.helper'\r\n\r\nimport { DatatableColumn, DatatableColumnBorder, DatatableColumnFoldColumns, DatatableColumnTooltip } from '../shared/interfaces/datatable-column'\r\nimport { DatatableRowDetail } from '../shared/interfaces/datatable-row-detail'\r\nimport { PageInfo } from '../shared/interfaces/page-info'\r\nimport { ScrollInfo } from '../shared/interfaces/scroll-info'\r\nimport { SortInfo } from '../shared/interfaces/sort-info'\r\n\r\ntype RowHeightFunctionType = (row?: any, index?: number) => number\r\n\r\n@Component({\r\n  selector: 'app-fx-custom-table',\r\n  templateUrl: './fx-custom-table.component.html',\r\n  styleUrls: ['./fx-custom-table.component.scss'],\r\n})\r\n\r\nexport class FxCustomTableComponent implements OnInit, OnChanges, OnDestroy {\r\n  @ViewChild('defaultCellTemplate', {static: true})\r\n  public defaultCellTemplate: TemplateRef<any>\r\n\r\n  @ViewChild('defaultHeaderTemplate', {static: true})\r\n  public defaultHeaderTemplate: TemplateRef<any>\r\n\r\n  @ViewChild('datatable', {static: true})\r\n  public datatable: DatatableComponent\r\n\r\n  @ViewChild('debugContextMenu', {static: true})\r\n  public debugContextMenu: ContextMenuComponent\r\n\r\n  @ViewChild('selectableContextMenu', {static: true})\r\n  public selectableContextMenu: ContextMenuComponent\r\n\r\n  @Input()\r\n  public loading: number | boolean = 0\r\n\r\n  @Input()\r\n  public columnMode = 'force'\r\n\r\n  @Input()\r\n  public showLoader = false\r\n\r\n  @Input()\r\n  public loadingId = 'custom-table'\r\n\r\n  @Input()\r\n  public hasProgressBar = false\r\n\r\n  @Input()\r\n  public foregroundColor = '#004666'\r\n\r\n  @Input()\r\n  public overlayColor = 'rgba(255,255,255,0.9)'\r\n\r\n  @Input()\r\n  public loadingType: SpinnerType = 'circle'\r\n\r\n  @Input()\r\n  public loadingPosition: PositionType = 'center-center'\r\n\r\n  @Input()\r\n  public loaderSize = 70\r\n\r\n  @Input()\r\n  public columns: DatatableColumn[] = []\r\n\r\n  @Input()\r\n  public messagesEmptyMessage = 'i18n.common.table.messages.emptyMessage'\r\n\r\n  @Input()\r\n  public messagesTotalMessage = 'i18n.common.table.messages.totalMessage'\r\n\r\n  @Input()\r\n  public messagesSelectedMessage = 'i18n.common.table.messages.selectedMessage'\r\n\r\n  @Input()\r\n  public count = 0\r\n\r\n  @Input()\r\n  public offset = 0\r\n\r\n  @Input()\r\n  public limit: number | undefined = 20\r\n\r\n  @Input()\r\n  public headerHeight: number | 'auto' = 50\r\n\r\n  @Input()\r\n  public rows: any[]\r\n\r\n  @Input()\r\n  public externalPagingLoadedPage: number\r\n\r\n  @Input()\r\n  public footerHeight: number\r\n\r\n  @Input()\r\n  public rowHeight = 25\r\n\r\n  @Input()\r\n  public rowClassCallback: (row: any) => { [key: string]: boolean }\r\n\r\n  @Input()\r\n  public rowHeightCallback = ((row, index): number => {\r\n    if (typeof this.rowDetail.rowHeight === 'function') {\r\n      return (this.rowDetail.rowHeight as RowHeightFunctionType)(this.rows[index], index)\r\n    }\r\n    return (this.rowDetail.rowHeight as number)\r\n  })\r\n\r\n  @Input()\r\n  public externalPaging = true\r\n\r\n  @Input()\r\n  public externalSorting = true\r\n\r\n  @Input()\r\n  public sorts: any[]\r\n\r\n  @Input()\r\n  public sortType = SortType.single\r\n\r\n  @Input()\r\n  public scrollbarH = true\r\n\r\n  @Input()\r\n  public scrollbarV = false\r\n\r\n  @Input()\r\n  public preloadNextPage = true\r\n\r\n  @Input()\r\n  public preloadPrevPage = true\r\n\r\n  @Input()\r\n  public rowDetail: DatatableRowDetail\r\n\r\n  @Input()\r\n  public isDebugContextMenuVisible: boolean\r\n\r\n  @Input()\r\n  public loadingPageDebounceTimeInMilliseconds = this.externalPaging ? 200 : 0\r\n\r\n  @Output()\r\n  public pageCallback = new EventEmitter<PageInfo>()\r\n\r\n  @Output()\r\n  public sortCallback = new EventEmitter<SortInfo>()\r\n\r\n  @Output()\r\n  public scrollCallback = new EventEmitter<ScrollInfo>()\r\n\r\n  @Output()\r\n  public selectRowCallback = new EventEmitter<{ row: any, column: any }>()\r\n\r\n  public tableRows: any[]\r\n\r\n  public originalColumns: DatatableColumn[]\r\n\r\n  public loadedEntries: number\r\n\r\n  public pageInfo: PageInfo = {\r\n    offset: 0,\r\n    pageSize: 0,\r\n  }\r\n\r\n  public fetchDataDebouncer = new Subject<PageInfo>()\r\n\r\n  private loadingPages = new Map<number, boolean>()\r\n\r\n  private subscriptions: Subscription = new Subscription()\r\n\r\n  public constructor(\r\n    private clipboardService: ClipboardService,\r\n    private elRef: ElementRef,\r\n    private ngxUiLoaderService: NgxUiLoaderService,\r\n    private notificationService: FxNotificationService,\r\n    private translate: TranslateService,\r\n  ) {\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe()\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.loading) {\r\n      this.handleLoading()\r\n    }\r\n\r\n    if (changes.count) {\r\n      if (this.externalPaging) {\r\n        if (this.count > 0) {\r\n\r\n          this.tableRows = new Array<any>(this.count)\r\n          this.loadingPages = new Map<number, boolean>()\r\n\r\n          this.goToFirstPage()\r\n        }\r\n      }\r\n    }\r\n\r\n    if (changes.rows) {\r\n      if (!this.externalPaging) {\r\n        this.tableRows = this.rows\r\n        return\r\n      }\r\n\r\n      if (this.tableRows) {\r\n        const start = (this.offset || this.pageInfo.offset) * this.pageInfo.pageSize\r\n        this.tableRows.splice(start, this.rows.length, ...this.rows)\r\n        if (this.isDebugContextMenuVisible) {\r\n          this.loadedEntries = this.tableRows.filter(row => !!row).length\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.handleInitialColumnFolding()\r\n\r\n    this.subscriptions.add(this.fetchDataDebouncer\r\n      .pipe(\r\n        filter(pageInfo => !!pageInfo),\r\n        map(pageInfo => this.getNextPage(pageInfo, 0)),\r\n        map(pageInfo => {\r\n          this.pageInfo = pageInfo\r\n\r\n          const maxOffset = Math.max(0, Math.ceil(pageInfo.count / pageInfo.pageSize) - 1)\r\n          const isFirstPage = pageInfo.offset === 0\r\n          const isLastPage = pageInfo.offset === maxOffset\r\n\r\n          const currentAllDataIsFilled = this.isAllDataFilled(this.tableRows, pageInfo)\r\n\r\n          let prevAllDataIsFilled = true\r\n          let newPageInfoPrev: PageInfo\r\n          if (isLastPage || this.preloadPrevPage) { // pre-load previous page\r\n            newPageInfoPrev = this.getNextPage(pageInfo, -1)\r\n            prevAllDataIsFilled = this.isAllDataFilled(this.tableRows, newPageInfoPrev)\r\n          }\r\n\r\n          let nextAllDataIsFilled = true\r\n          let newPageInfoNext: PageInfo\r\n          if (isFirstPage || this.preloadNextPage) { // pre-load next page\r\n            newPageInfoNext = this.getNextPage(pageInfo, 1)\r\n            nextAllDataIsFilled = this.isAllDataFilled(this.tableRows, newPageInfoNext)\r\n          }\r\n          return {\r\n            currentAllDataIsFilled,\r\n            pageInfoCurrent: pageInfo,\r\n            prevAllDataIsFilled,\r\n            pageInfoPrev: newPageInfoPrev,\r\n            nextAllDataIsFilled,\r\n            pageInfoNext: newPageInfoNext,\r\n          }\r\n        }),\r\n        filter(pageInfo => !pageInfo.currentAllDataIsFilled || !pageInfo.prevAllDataIsFilled || !pageInfo.nextAllDataIsFilled),\r\n        debounceTime(this.loadingPageDebounceTimeInMilliseconds || 0),\r\n      )\r\n      .subscribe(pageInfo => {\r\n        this.getNewData(pageInfo.pageInfoPrev, pageInfo.prevAllDataIsFilled)\r\n        this.getNewData(pageInfo.pageInfoCurrent, pageInfo.currentAllDataIsFilled)\r\n        this.getNewData(pageInfo.pageInfoNext, pageInfo.nextAllDataIsFilled)\r\n\r\n        this.handleLoading()\r\n      }),\r\n    )\r\n  }\r\n\r\n  public getFilteredColumns(originalColumns: DatatableColumn[], expectedFoldState: boolean = false): DatatableColumn[] {\r\n    if (!originalColumns) {\r\n      return undefined\r\n    }\r\n    return originalColumns.filter(c => expectedFoldState ? c.isFolded : !c.isFolded) // isFolded could also be null or undefined (it equal 'false')\r\n  }\r\n\r\n  public selectRow(row: any, column: DatatableColumn): void {\r\n    this.selectRowCallback.emit({row: row, column: column})\r\n  }\r\n\r\n  public getStaticTooltip(tooltip: DatatableColumnTooltip | DatatableColumnTooltip[], row?: any): string | undefined {\r\n    return getTooltip(tooltip, this.translate, row)\r\n  }\r\n\r\n  public getRowTooltip(noTextOverflow: boolean, dataColumn: DatatableColumn, row: any, value: any): string {\r\n    if ('tooltip' in row && dataColumn.name in row.tooltip) {\r\n      return row.tooltip[dataColumn.name]\r\n    }\r\n    if (noTextOverflow) {\r\n      return value\r\n    }\r\n    return ''\r\n  }\r\n\r\n  public isTooltipDisabled(divElement: HTMLDivElement, row: any, dataColumn: DatatableColumn): boolean {\r\n    return (divElement && divElement.offsetWidth >= divElement.scrollWidth\r\n      && !('tooltip' in row && dataColumn.name in row.tooltip))\r\n  }\r\n\r\n  public getBorderClass(border: DatatableColumnBorder): string[] {\r\n    const borderClasses: string[] = []\r\n    if (border && (border.bottom || border.left || border.right || border.top)) {\r\n      if (border.bottom) {\r\n        borderClasses.push('border-bottom')\r\n      }\r\n      if (border.left) {\r\n        borderClasses.push('border-left')\r\n      }\r\n      if (border.right) {\r\n        borderClasses.push('border-right')\r\n      }\r\n      if (border.top) {\r\n        borderClasses.push('border-top')\r\n      }\r\n    }\r\n    return borderClasses\r\n  }\r\n\r\n  public getCellStyleClasses(baseClass: string | ((data: any) => string | any), data: any): string[] {\r\n    const additionalClass: string = (typeof baseClass === 'function') ? baseClass(data) : baseClass\r\n    return additionalClass ? [additionalClass] : []\r\n  }\r\n\r\n  public getCellClasses(dataColumn: DatatableColumn): string {\r\n    const cellClasses: string[] = []\r\n\r\n    if (dataColumn.cellAlign) {\r\n      cellClasses.push('align__' + dataColumn.cellAlign)\r\n    }\r\n    const borderClasses = this.getBorderClass(dataColumn.cellBorder)\r\n    if (borderClasses.length > 0) {\r\n      cellClasses.push(...borderClasses)\r\n    }\r\n\r\n    if (dataColumn.isFolded === false) {\r\n      cellClasses.push('unfolded')\r\n    }\r\n\r\n    if (dataColumn.cellClass && typeof dataColumn.cellClass !== 'function') {\r\n      cellClasses.push(dataColumn.cellClass as string)\r\n    }\r\n    return cellClasses.join(' ')\r\n  }\r\n\r\n  public getHeaderClasses(dataColumn: DatatableColumn): string {\r\n    const headerClasses: string[] = []\r\n\r\n    if (dataColumn.headerAlign) {\r\n      headerClasses.push('align__' + dataColumn.headerAlign)\r\n    }\r\n    const borderClasses = this.getBorderClass(dataColumn.headerBorder)\r\n    if (borderClasses.length > 0) {\r\n      headerClasses.push(...borderClasses)\r\n    }\r\n\r\n    if (dataColumn.isFolded === false) {\r\n      headerClasses.push('unfolded')\r\n    }\r\n\r\n    if (dataColumn.headerClass && typeof dataColumn.headerClass !== 'function') {\r\n      headerClasses.push(dataColumn.headerClass as string)\r\n    }\r\n\r\n    if (dataColumn.foldColumns && dataColumn.foldColumns.isFolded === false) {\r\n      headerClasses.push('fold-trigger-active')\r\n    }\r\n    return headerClasses.join(' ')\r\n  }\r\n\r\n  public trimString(value: any): string | any {\r\n    if (!!value && typeof value === 'string' || value instanceof String) {\r\n      return value.trim()\r\n    }\r\n    return value\r\n  }\r\n\r\n  public goToFirstPage(): void {\r\n    // sorry for this hack but no other \"solution\" does work 100% :(\r\n    const firstTabButton = this.elRef.nativeElement.querySelector('.datatable-icon-prev')\r\n    if (!!firstTabButton) {\r\n      firstTabButton.click()\r\n    }\r\n  }\r\n\r\n  public emitScrollCallback(scrollInfo: ScrollInfo): void {\r\n    scrollInfo = {\r\n      ...scrollInfo,\r\n      page: this.pageInfo.offset,\r\n      size: this.pageInfo.pageSize,\r\n    }\r\n\r\n    this.scrollCallback.emit(scrollInfo)\r\n  }\r\n\r\n  public emitPageCallback(pageInfo: PageInfo, indexes: { first: number, last: number }): void {\r\n    if (!pageInfo) {\r\n      return\r\n    }\r\n    if (this.pageInfo.pageSize !== pageInfo.pageSize) {\r\n      this.loadingPages = new Map<number, boolean>()\r\n    }\r\n\r\n    this.pageInfo = {\r\n      ...pageInfo,\r\n      ...indexes,\r\n    }\r\n\r\n    if (this.externalPaging) {\r\n      this.fetchDataDebouncer.next(this.pageInfo)\r\n    } else {\r\n      this.pageCallback.emit(this.pageInfo)\r\n    }\r\n  }\r\n\r\n  public copyLoadedValuesToClipboard(columnData: DataTableColumnDirective): void {\r\n    const prop = columnData.prop\r\n    if (!!prop) {\r\n      const values = this.tableRows.reduce((result, column) => (result += (result === '' ? '' : ', ') + column[prop], result), '')\r\n\r\n      this.copyValueToClipboard(values)\r\n    }\r\n  }\r\n\r\n  public copyValueToClipboard(value: string): void {\r\n    if (!!value) {\r\n      this.clipboardService.copyFromContent(value)\r\n      this.notificationService.success('copiedToClipboard')\r\n    }\r\n  }\r\n\r\n  public evaluateFormat(format: any, value: any): any {\r\n    if (typeof format === 'function') {\r\n      return format(value)\r\n    }\r\n    return format && value ? formatDate(value, format, this.translate.currentLang) : value\r\n  }\r\n\r\n  public handleColumnFolding(datatableColumn: DatatableColumn): void {\r\n    if (!this.originalColumns && this.columns) {\r\n      this.originalColumns = this.columns\r\n    } else if ((!this.originalColumns && !this.columns) || !datatableColumn.foldColumns) {\r\n      return\r\n    }\r\n    this.setFoldStateForColumns(datatableColumn.foldColumns, !datatableColumn.foldColumns.isFolded)\r\n    this.columns = this.getFilteredColumns(this.originalColumns)\r\n  }\r\n\r\n  public handleInitialColumnFolding(): void {\r\n    if (!this.originalColumns && this.columns) {\r\n      this.originalColumns = this.columns\r\n    } else if (!this.originalColumns && !this.columns) {\r\n      return\r\n    }\r\n    this.originalColumns.forEach(datatableColumn => {\r\n      this.setFoldStateForColumns(datatableColumn.foldColumns)\r\n    })\r\n    this.columns = this.getFilteredColumns(this.originalColumns)\r\n  }\r\n\r\n  private setFoldStateForColumns(foldColumns: DatatableColumnFoldColumns, newFoldState?: boolean): void {\r\n    if (!foldColumns || !foldColumns.columnNames) {\r\n      return\r\n    }\r\n    foldColumns.isFolded = newFoldState != null ? newFoldState : foldColumns.isFolded\r\n    foldColumns.columnNames.forEach(columnName => {\r\n      const column = this.originalColumns.find(col => col.name === columnName)\r\n      column.isFolded = foldColumns.isFolded\r\n    })\r\n  }\r\n\r\n  private getNewData(pageInfo: PageInfo, isAllDataFilled: boolean): void {\r\n    if (!pageInfo) {\r\n      return\r\n    }\r\n\r\n    if (isAllDataFilled) {\r\n      this.loadingPages.delete(pageInfo.offset)\r\n      return\r\n    }\r\n\r\n    if (!this.loadingPages.get(pageInfo.offset)) {\r\n      this.loadingPages.set(pageInfo.offset, true)\r\n      this.pageCallback.emit(pageInfo)\r\n    }\r\n  }\r\n\r\n  private getNextPage(pageInfo: PageInfo, direction: number): PageInfo {\r\n    const maxOffset = Math.max(0, Math.ceil(pageInfo.count / pageInfo.pageSize) - 1)\r\n    const offset = Math.min(Math.max(0, pageInfo.offset + direction), maxOffset)\r\n\r\n    const first = Math.max(0, pageInfo.first + (pageInfo.pageSize * direction))\r\n    const last = Math.max(first, Math.min(pageInfo.count - 1, pageInfo.last + (pageInfo.pageSize * direction)))\r\n\r\n    const newPageInfo: PageInfo = {\r\n      ...pageInfo,\r\n      first,\r\n      last,\r\n      offset,\r\n    }\r\n    return newPageInfo\r\n  }\r\n\r\n  private isAllDataFilled(dataRows: any[], pageInfo: PageInfo): boolean {\r\n    if (!dataRows || !pageInfo) {\r\n      return false\r\n    }\r\n    if (pageInfo.first >= pageInfo.last) {\r\n      return false\r\n    }\r\n\r\n    for (let i = pageInfo.first; i <= pageInfo.last; i++) {\r\n      if (!dataRows[i]) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  private handleLoading(): void {\r\n    showOrHideLoader(this.loading, this.ngxUiLoaderService, this.loadingId, this.showLoader)\r\n    this.hasProgressBar = this.loading > 1\r\n  }\r\n}\r\n","import { ColorRange } from '../interfaces/color-range'\r\n\r\nexport function getColorByValue(colorRanges: ColorRange[], value: number): string | undefined {\r\n  if (!colorRanges || colorRanges.length === 0) {\r\n    return undefined\r\n  }\r\n\r\n  const result = colorRanges.find(colorRange => (colorRange.start == null || colorRange.start <= value) && (colorRange.end == null || colorRange.end >= value))\r\n  return result ? result.color : undefined\r\n}\r\n","import { Component, Input } from '@angular/core'\r\nimport { getColorByValue } from '../../../shared/helper/color-range.helper'\r\nimport { DatatableColumn } from '../../../shared/interfaces/datatable-column'\r\nimport { ColorRange } from '../../../shared/interfaces/color-range'\r\n\r\n@Component({\r\n  selector: 'app-fx-color-indicators-cell-template',\r\n  templateUrl: './fx-color-indicators-cell-template.component.html',\r\n  styleUrls: ['./fx-color-indicators-cell-template.component.scss'],\r\n})\r\nexport class FxColorIndicatorsCellTemplateComponent {\r\n  @Input()\r\n  public value: number\r\n\r\n  @Input()\r\n  public datatableColumn: DatatableColumn\r\n\r\n  public constructor() {\r\n  }\r\n\r\n  public getColorByValue(colorRanges: ColorRange[], value: number): string | undefined {\r\n    return getColorByValue(colorRanges, value)\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { FormsModule } from '@angular/forms'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { RouterModule } from '@angular/router'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\r\nimport { DataTableBodyComponent, NgxDatatableModule } from '@swimlane/ngx-datatable'\r\nimport { ContextMenuModule } from 'ngx-contextmenu'\r\nimport { FxTranslationModule } from '../fx-translation/fx-translation.module'\r\nimport { SharedModule } from '../shared/shared.module'\r\nimport { FxCustomTableComponent } from './fx-custom-table.component'\r\nimport { FxColorIndicatorsCellTemplateComponent } from './templates/color-indicators-cell-template/fx-color-indicators-cell-template.component'\r\n\r\n/**\r\n * nasty fix for:\r\n * DataTableBodyComponent.html:64 ERROR TypeError: Cannot read property '0' of undefined at Object.eval [as updateDirectives] (DataTableBodyComponent.html:37)\r\n */\r\nDataTableBodyComponent.prototype.updateRows = function (): void {\r\n  const {first, last}: any = this.indexes\r\n  let rowIndex = first\r\n  let idx = 0\r\n  const temp: any[] = []\r\n\r\n  this.rowIndexes.clear()\r\n\r\n  if (this.groupedRows) {\r\n    while (rowIndex < last && rowIndex < this.groupedRows.length) {\r\n      // Add the groups into this page\r\n      const group = this.groupedRows[rowIndex]\r\n      temp[idx] = group\r\n      idx++\r\n\r\n      // Group index in this context\r\n      rowIndex++\r\n    }\r\n  } else {\r\n    while (rowIndex < last && rowIndex < this.rowCount) {\r\n      const row = this.rows[rowIndex]\r\n\r\n      if (row) {\r\n        this.rowIndexes.set(row, rowIndex)\r\n        temp[idx] = row\r\n      }\r\n\r\n      idx++\r\n      rowIndex++\r\n    }\r\n  }\r\n\r\n  this.temp = temp.filter(x => !!x)\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FxColorIndicatorsCellTemplateComponent,\r\n    FxCustomTableComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ContextMenuModule.forRoot(),\r\n    FormsModule,\r\n    FxTranslationModule,\r\n    NgbModule,\r\n    NgxDatatableModule,\r\n    SharedModule,\r\n    RouterModule,\r\n  ],\r\n  exports: [\r\n    FxColorIndicatorsCellTemplateComponent,\r\n    FxCustomTableComponent,\r\n  ],\r\n\r\n})\r\nexport class FxCustomTableModule {\r\n}\r\n","import { Component, Input } from '@angular/core'\r\nimport { FxFooterRouteModel } from './models/fx-footer-route.model'\r\n\r\n@Component({\r\n    selector: 'app-fx-footer',\r\n    templateUrl: './fx-footer.component.html',\r\n    styleUrls: ['./fx-footer.component.scss']\r\n})\r\nexport class FxFooterComponent {\r\n    @Input()\r\n    public routes: FxFooterRouteModel[] = []\r\n\r\n    @Input()\r\n    public backgroundColor = 'transparent'\r\n\r\n    constructor() { }\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { FxFooterComponent } from './fx-footer.component'\r\nimport { FxTranslationModule } from '../fx-translation/fx-translation.module'\r\nimport { RouterModule } from '@angular/router'\r\n\r\n@NgModule({\r\n    declarations: [FxFooterComponent],\r\n    exports: [\r\n        FxFooterComponent\r\n    ],\r\n    imports: [\r\n        RouterModule,\r\n        CommonModule,\r\n        FxTranslationModule\r\n    ]\r\n})\r\nexport class FxFooterModule {}\r\n","export interface FxFooterRouteModel {\r\n    name: string\r\n    route: string\r\n}\r\n","export const FACILITY = 'FACILITY'\r\nexport const DEBUG = 'DEBUG'\r\n","import { DEBUG, FACILITY } from '../constants/local-storage.constants'\r\n\r\nexport function setItem(key: string, value: string): void {\r\n  if (!key) {\r\n    return\r\n  }\r\n  localStorage.setItem(key, value)\r\n}\r\n\r\nexport function deleteItem(key: string): void {\r\n  if (!key) {\r\n    return\r\n  }\r\n  localStorage.removeItem(key)\r\n}\r\n\r\nexport function getItem(key: string): string {\r\n  if (!key) {\r\n    return null\r\n  }\r\n  return localStorage.getItem(key)\r\n}\r\n\r\nexport function setFacility(facility: string): void {\r\n  setItem(FACILITY, facility)\r\n}\r\n\r\nexport function getFacility(): string {\r\n  return getItem(FACILITY)\r\n}\r\n\r\nexport function deleteFacility(): void {\r\n  deleteItem(FACILITY)\r\n}\r\n\r\nexport function setDebugMode(debug: boolean): void {\r\n  setItem(DEBUG, debug ? '1' : '0')\r\n}\r\n\r\nexport function isDebugMode(): boolean {\r\n  return getItem(DEBUG) === '1'\r\n}\r\n\r\nexport function deleteDebugMode(): void {\r\n  deleteItem(DEBUG)\r\n}\r\n","export function getShuffleArray(originalArray: Array<any>): Array<any> {\r\n  const array = Object.assign([], originalArray)\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]]\r\n  }\r\n  return array\r\n}\r\n\r\nexport function getUniqueArray(arrayFirst: Array<any>, propertyKey: string): Array<any> {\r\n  const unique = arrayFirst\r\n    .map(item => item[propertyKey])\r\n    .map((item, index, final) => final.indexOf(item) === index && index)\r\n    .filter(index => arrayFirst[index])\r\n    .map(index => arrayFirst[index])\r\n  return unique\r\n}\r\n","import { InjectionToken } from '@angular/core'\r\nimport { FxNotificationConfig } from '../fx-user-notification.module'\r\n\r\nexport const NOTIFICATION_CONFIG = new InjectionToken<FxNotificationConfig>('NOTIFICATION_CONFIG')\r\n","import { Inject, Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { FxUserNotification } from '../domain/fx-user-notification'\r\nimport { NOTIFICATION_CONFIG } from '../domain/fx-notification-config'\r\nimport { FxNotificationConfig } from '../fx-user-notification.module'\r\nimport { IFxUserNotificationLocalDevelopmentService } from './i-fx-user-notification.service'\r\n\r\n@Injectable()\r\nexport class FxUserNotificationService implements IFxUserNotificationLocalDevelopmentService {\r\n\r\n  public baseUrl: string\r\n  constructor(private http: HttpClient,\r\n              @Inject(NOTIFICATION_CONFIG) notificationConfig: FxNotificationConfig) {\r\n    this.baseUrl = notificationConfig.notification_service_url\r\n  }\r\n  public getNotifications(): Observable<Array<FxUserNotification>> {\r\n    return this.http.get<Array<FxUserNotification>>(`${this.baseUrl}/api/v1/read-unread-usernotifications`)\r\n  }\r\n\r\n  public postUserReadLog(): Observable<Object> {\r\n    return this.http.post(`${this.baseUrl}/api/v1/userlogs`, {})\r\n  }\r\n}\r\n\r\n","export interface FxUserNotification {\r\n  audience?: Map<string, Array<string>>,\r\n  id: string,\r\n  messageHeadline: string,\r\n  messageText: string,\r\n  severity: string,\r\n  updateTimestamp: Date,\r\n  updatedByUser: string,\r\n  read: boolean\r\n}\r\n\r\nexport const priorityMap = new Map([\r\n  ['ERROR', 1],\r\n  ['WARNING', 2],\r\n  ['INFO', 3]\r\n])\r\n\r\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core'\r\nimport { IconProp, SizeProp } from '@fortawesome/fontawesome-svg-core'\r\nimport { faBell } from '@fortawesome/free-solid-svg-icons'\r\nimport { FxUserNotificationService } from '../../services/fx-user-notification.service'\r\nimport { FxUserNotification, priorityMap } from '../../domain/fx-user-notification'\r\nimport { Subscription, timer } from 'rxjs'\r\n\r\n@Component({\r\n  selector: 'app-fx-user-notification',\r\n  templateUrl: './fx-user-notification.component.html',\r\n  styleUrls: ['./fx-user-notification.component.scss']\r\n})\r\nexport class FxUserNotificationComponent implements OnInit, OnDestroy {\r\n\r\n  public opened = false\r\n\r\n  @Input()\r\n  public icon: IconProp = faBell\r\n\r\n  @Input()\r\n  public color = 'white'\r\n\r\n  @Input()\r\n  public size: SizeProp = '2x'\r\n\r\n  @Input()\r\n  public refreshInterval = 60000\r\n\r\n  @Input()\r\n  public charsOfShortText = 50\r\n\r\n  public userNotificationList: Array<FxUserNotification> = []\r\n  public userNotificationUnreadList: Array<FxUserNotification> = []\r\n  public userNotificationReadList: Array<FxUserNotification> = []\r\n\r\n  public notificationCount: number\r\n  public intervalTimeSubscription\r\n\r\n  private userNotificationSubscription: Subscription\r\n\r\n  constructor(private userNotificationService: FxUserNotificationService) {\r\n  }\r\n\r\n  public getNotificationIconColor(): { color: string } {\r\n    return {color: this.color}\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.intervalTimeSubscription = timer(0, this.refreshInterval).subscribe(() => {\r\n      this.receiveNotifications()\r\n    })\r\n  }\r\n\r\n  public receiveNotifications(): void {\r\n    this.userNotificationSubscription = this.userNotificationService.getNotifications().subscribe(res => {\r\n      this.sortNotificationsAndRemember(res)\r\n    })\r\n  }\r\n\r\n  public toggleNotificationArea(): void {\r\n    this.opened = !this.opened\r\n    if (!this.opened) {\r\n      this.postReadNotificationLogAndRefreshNotifications()\r\n    }\r\n  }\r\n\r\n  public sortNotificationsAndRemember(notificationData: Array<FxUserNotification>): void {\r\n    this.userNotificationReadList = notificationData.filter((notification) => {\r\n      return notification.read\r\n    })\r\n    this.userNotificationUnreadList = notificationData.filter((notification) => {\r\n      return !notification.read\r\n    })\r\n    this.userNotificationList = this.sortNotification(this.userNotificationUnreadList).concat(this.sortNotification(this.userNotificationReadList))\r\n    this.notificationCount = this.userNotificationUnreadList.length\r\n  }\r\n\r\n  public sortNotification(notificationData: Array<FxUserNotification>): Array<FxUserNotification> {\r\n    return notificationData.sort((notification1, notification2) => {\r\n      {\r\n        if (priorityMap.get(notification1.severity) < priorityMap.get(notification2.severity)) {\r\n          return -1\r\n        }\r\n        if (priorityMap.get(notification1.severity) > priorityMap.get(notification2.severity)) {\r\n          return 1\r\n        }\r\n        return this.compareUpdateTime(new Date(notification1.updateTimestamp), new Date(notification2.updateTimestamp)  )\r\n      }\r\n    })\r\n  }\r\n\r\n  public postReadNotificationLogAndRefreshNotifications(): void {\r\n    this.userNotificationService.postUserReadLog().toPromise().then(() => {\r\n      this.receiveNotifications()\r\n    })\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this.intervalTimeSubscription) {\r\n      this.intervalTimeSubscription.unsubscribe()\r\n    }\r\n    if (this.userNotificationSubscription) {\r\n      this.userNotificationSubscription.unsubscribe()\r\n    }\r\n  }\r\n\r\n  private compareUpdateTime(ts1: Date, ts2: Date): number {\r\n    if (ts1.getTime() < ts2.getTime()) {\r\n      return 1\r\n    } else if (ts1.getTime() > ts2.getTime()) {\r\n      return -1\r\n    }\r\n    return 0\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core'\r\nimport { Observable, of, timer } from 'rxjs'\r\nimport { FxUserNotification } from '../domain/fx-user-notification'\r\nimport { IFxUserNotificationLocalDevelopmentService } from './i-fx-user-notification.service'\r\n\r\n@Injectable()\r\n/**\r\n * A implementation of IFxUserNotificationLocalDevelopmentService just without server, it generates all data offline.\r\n * <b>Purpose:</b>\r\n * Ease of development and demonstration in a showcase.\r\n */\r\nexport class FxUserNotificationLocalDevelopmentService  implements IFxUserNotificationLocalDevelopmentService {\r\n\r\n  public notifications: Array<FxUserNotification> = []\r\n\r\n  private idCounterForMessages = 0\r\n\r\n  constructor() {\r\n    this.startTimer()\r\n  }\r\n\r\n  public getNotifications(): Observable<Array<FxUserNotification>> {\r\n    return of(this.notifications)\r\n  }\r\n\r\n  public postUserReadLog(): Observable<Object> {\r\n    this.notifications.forEach((message) => message.read = true)\r\n    return of({})\r\n  }\r\n\r\n  private startTimer(): void {\r\n    // this timer is on purpose not stopped or unsubscribed as it simulates a server that is generating messages,\r\n    // it will not be stopped by the client.\r\n    timer(0, 5000).subscribe(() => {\r\n      this.notifications.push(this.generateNewMessage())\r\n    })\r\n  }\r\n\r\n  private generateNewMessage(): FxUserNotification {\r\n    this.idCounterForMessages++\r\n\r\n    const severity = this.getRandomSeverity()\r\n    const messageText = Math.random() > 0.5\r\n      ? `This is ${severity} message ${this.idCounterForMessages.toString()} locally generated.`\r\n      : `This is ${severity} message ${this.idCounterForMessages.toString()} locally generated. With a text which is longer than expected. This way a collapsible message can be demonstrated.`\r\n\r\n    return {\r\n      messageHeadline: `Dummy ${severity} Message ${this.idCounterForMessages.toString()}`,\r\n      updatedByUser: 'dummy',\r\n      severity: severity,\r\n      read: false,\r\n      messageText: messageText,\r\n      id: this.idCounterForMessages.toString(),\r\n      audience: undefined,\r\n      updateTimestamp: new Date()\r\n    }\r\n  }\r\n\r\n  private getRandomSeverity(): 'INFO' | 'WARNING' | 'ERROR' {\r\n    const rnd = Math.random()\r\n    if (rnd > 0.66) {\r\n      return 'INFO'\r\n    } else if (rnd > 0.33) {\r\n      return 'WARNING'\r\n    } else {\r\n      return 'ERROR'\r\n }\r\n  }\r\n}\r\n\r\n","import { Component, Input, OnInit } from '@angular/core'\r\nimport { FxUserNotification } from '../../domain/fx-user-notification'\r\n\r\n@Component({\r\n  selector: 'app-fx-user-single-notification-area',\r\n  templateUrl: './fx-user-single-notification-area.component.html',\r\n  styleUrls: ['./fx-user-single-notification-area.component.scss']\r\n})\r\nexport class FxUserSingleNotificationAreaComponent implements OnInit {\r\n\r\n  public completeNotification: FxUserNotification\r\n\r\n  @Input()\r\n  public set notification(notification: FxUserNotification) {\r\n    this.completeNotification = notification\r\n    this.updateVisibleMessageText()\r\n  }\r\n\r\n  @Input()\r\n  public charsOfShortText = 150\r\n\r\n  public isMessageShorted = false\r\n  public visibleMessage = ''\r\n  public show = false\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.updateVisibleMessageText()\r\n  }\r\n\r\n  public getSeverityStyle(notification: FxUserNotification): string {\r\n    if (!notification) {\r\n      return ''\r\n    }\r\n    if (!notification.read) {\r\n      if (notification.severity === 'ERROR') {\r\n        return 'alert alert-danger'\r\n      } else if (notification.severity === 'WARNING') {\r\n        return 'alert alert-warning'\r\n      } else {\r\n        return 'alert alert-info'\r\n      }\r\n    } else {\r\n      return 'alert alert-secondary'\r\n    }\r\n  }\r\n\r\n  public showToggle(): void {\r\n    this.show = !this.show\r\n    this.updateVisibleMessageText()\r\n  }\r\n\r\n  public getSeverityIcon(notification: FxUserNotification): string {\r\n    if (!notification) {\r\n      return ''\r\n    }\r\n    if (notification.severity === 'ERROR') {\r\n      return 'fas fa-exclamation-circle'\r\n    } else if (notification.severity === 'WARNING') {\r\n      return 'fas fa-exclamation-triangle'\r\n    } else {\r\n      return 'fas fa-info-circle'\r\n    }\r\n  }\r\n\r\n  private updateVisibleMessageText(): void {\r\n    if (!this.completeNotification) {\r\n      return\r\n    }\r\n    if (this.completeNotification.messageText.length > this.charsOfShortText && !this.show) {\r\n      this.visibleMessage = this.completeNotification.messageText.slice(0, this.charsOfShortText)\r\n      this.isMessageShorted = true\r\n    } else {\r\n      this.visibleMessage = this.completeNotification.messageText\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { FxUserNotificationComponent } from './components/fx-user-notification/fx-user-notification.component'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\r\nimport { FormsModule } from '@angular/forms'\r\nimport { NOTIFICATION_CONFIG } from './domain/fx-notification-config'\r\nimport { FxTranslationModule } from '../fx-translation/fx-translation.module'\r\nimport { FxUserNotificationService } from './services/fx-user-notification.service'\r\nimport { FxUserNotificationLocalDevelopmentService } from './services/fx-user-notification-local-development.service'\r\nimport { FxUserSingleNotificationAreaComponent } from './components/fx-user-single-notification-area/fx-user-single-notification-area.component'\r\n\r\n@NgModule({\r\n  declarations: [FxUserNotificationComponent, FxUserSingleNotificationAreaComponent],\r\n  exports: [\r\n    FxUserNotificationComponent\r\n    , FxUserSingleNotificationAreaComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    NgbModule,\r\n    FontAwesomeModule,\r\n    FormsModule,\r\n    FxTranslationModule\r\n  ],\r\n  bootstrap: [FxUserNotificationComponent]\r\n})\r\nexport class FxUserNotificationModule {\r\n  public static forRoot(notificationConfig: FxNotificationConfig): any {\r\n    return {\r\n      ngModule: FxUserNotificationModule,\r\n      providers: [{\r\n        provide: NOTIFICATION_CONFIG,\r\n        useValue: notificationConfig\r\n      },\r\n        FxUserNotificationService]\r\n    }\r\n  }\r\n\r\n  public static forLocalDevelopment(notificationConfig: FxNotificationConfig): any {\r\n    return {\r\n      ngModule: FxUserNotificationModule,\r\n      providers: [\r\n        {\r\n          provide: NOTIFICATION_CONFIG,\r\n          useValue: notificationConfig\r\n        },\r\n        {\r\n          provide: FxUserNotificationService,\r\n          useClass: FxUserNotificationLocalDevelopmentService\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nexport interface FxNotificationConfig {\r\n  notification_service_url: string\r\n}\r\n","import { Type } from '@angular/core'\r\nimport { JestOriginalFunction } from '../../../shared/types/jest.types'\r\nimport { JestExtended, JestSpyObject } from '../../interfaces/jest-extended'\r\n\r\nexport function getAllFunctionNames<T extends Type<any>>(clazz: T): PropertyKey[] {\r\n  if (typeof clazz === 'function') {\r\n    clazz = clazz.prototype\r\n  }\r\n  let foundedFunctionNames: PropertyKey[] = Reflect.ownKeys(clazz)\r\n  const parentClass = Object.getPrototypeOf(clazz)\r\n  if (!!parentClass && parentClass.constructor.name !== 'Object') {\r\n    foundedFunctionNames = [...foundedFunctionNames, ...getAllFunctionNames(parentClass)]\r\n  }\r\n  return foundedFunctionNames\r\n}\r\n\r\nconst createSpyObjWithFunctionArray = <K, T extends Type<any>>(originalFunctions: JestOriginalFunction[]): JestSpyObject<K> => {\r\n  let spyObject = {}\r\n\r\n  for (const originalFunction of originalFunctions) {\r\n    if (!!(originalFunction as JestExtended).originalFnName) {\r\n      const jestFunction = originalFunction as JestExtended\r\n      spyObject = {\r\n        ...spyObject,\r\n        // @ts-ignore\r\n        [jestFunction.originalFnName]: !!jestFunction.mockFunction ? jest.fn(jestFunction.mockFunction) : jest.fn(),\r\n      }\r\n    } else {\r\n      spyObject = {\r\n        ...spyObject,\r\n        // @ts-ignore\r\n        [originalFunction]: jest.fn(),\r\n      }\r\n    }\r\n  }\r\n  return spyObject as any\r\n}\r\n\r\nexport const createSpyObjFromClass = <K, T extends Type<any>>(clazz: T, ...originalFunctions: JestExtended[]): JestSpyObject<K> => {\r\n  const functionNames = getAllFunctionNames(clazz).sort()\r\n  if (functionNames && functionNames.length > 0) {\r\n    let functions: JestOriginalFunction[] = functionNames.filter(functionName => functionName !== 'constructor') as string[]\r\n    if (originalFunctions && originalFunctions.length > 0) {\r\n      functions =\r\n        [\r\n          ...functions.filter(functionName => originalFunctions.find(original => original.originalFnName === functionName) === undefined),\r\n          ...originalFunctions,\r\n        ]\r\n    }\r\n\r\n    return createSpyObjWithFunctionArray<K, T>(functions)\r\n  }\r\n  return null\r\n}\r\n\r\nexport const createSpyObj = <K, T extends Type<any>>(...originalFunctions: JestOriginalFunction[]): JestSpyObject<K> => {\r\n  return createSpyObjWithFunctionArray<K, T>(originalFunctions)\r\n}\r\n","import { BehaviorSubject } from 'rxjs'\r\n\r\nexport class ActivatedRouteMock {\r\n\r\n  public get testParams(): {} {\r\n    return this._testParams\r\n  }\r\n\r\n  public set testParams(params: {}) {\r\n    this._testParams = params\r\n    this.params.next(params)\r\n  }\r\n\r\n  public get testFragment(): string {\r\n    return this._fragment\r\n  }\r\n\r\n  public set testFragment(fragment: string) {\r\n    this._fragment = fragment\r\n    this.fragment.next(fragment)\r\n  }\r\n\r\n  public get testQueryParams(): {} {\r\n    return this._queryParams\r\n  }\r\n\r\n  public set testQueryParams(queryParams: {}) {\r\n    this._queryParams = queryParams\r\n    this.queryParams.next(queryParams)\r\n  }\r\n\r\n  public get snapshot(): {} {\r\n    return {\r\n      params: this.testParams,\r\n      queryParams: this.testQueryParams,\r\n      fragment: this.testFragment,\r\n    }\r\n  }\r\n\r\n  public get parent(): {} {\r\n    return {\r\n      fragment: this.fragment,\r\n      params: this.params,\r\n      queryParams: this.queryParams,\r\n    }\r\n  }\r\n\r\n  public fragment = new BehaviorSubject(this.testFragment)\r\n  public params = new BehaviorSubject(this.testParams)\r\n  public queryParams = new BehaviorSubject(this.testQueryParams)\r\n\r\n  private _testParams: {}\r\n\r\n  private _fragment: string\r\n\r\n  private _queryParams: {}\r\n\r\n}\r\n","export class AuthServiceMock {\r\n\r\n  public get isLoggedIn(): boolean {\r\n    return this._isLoggedIn\r\n  }\r\n\r\n  public set isLoggedIn(isLoggedIn: boolean) {\r\n    this._isLoggedIn = isLoggedIn\r\n  }\r\n\r\n  public set token(token: string) {\r\n    this._token = token\r\n  }\r\n\r\n  private _isLoggedIn = false\r\n\r\n  private _token = ''\r\n\r\n  public getAuthTokenHeaderString(): string {\r\n    return this.isLoggedIn ? this._token : ''\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { ActivatedRoute, Params } from '@angular/router'\r\n\r\n@Injectable()\r\nexport class RouterMock {\r\n\r\n  public navigate(target: string, params?: Params): Promise<boolean> {\r\n    return undefined\r\n  }\r\n\r\n  public navigateRelative(target: string, route?: ActivatedRoute): Promise<boolean> {\r\n    return undefined\r\n  }\r\n\r\n  public navigateBack(route: ActivatedRoute): Promise<boolean> {\r\n    return undefined\r\n  }\r\n}\r\n","import { get } from 'lodash'\r\nimport { Observable, of, Subject } from 'rxjs'\r\n\r\nexport interface ITranslateServiceMock {\r\n  onTranslationChange: Observable<any>\r\n  onLangChange: Observable<any>\r\n  onDefaultLangChange: Observable<any>\r\n\r\n  get(key: string | Array<string>, param?: Object): Observable<any>\r\n\r\n  instant(key: string): any\r\n\r\n  getBrowserLang(): string\r\n\r\n  getBrowserCultureLang(): string\r\n\r\n  getTranslation(lang: string): Observable<any>\r\n}\r\n\r\nexport interface ITranslateServiceMockConfig {\r\n  browserCulterLang?: string\r\n  currentLang?: string\r\n  translation?: { [key: string]: any }\r\n  translations?: { [key: string]: any }\r\n}\r\n\r\nexport class TranslateServiceMockImpl implements ITranslateServiceMock {\r\n  public onDefaultLangChange: Observable<any>\r\n  public onLangChange: Subject<any>\r\n  public onTranslationChange: Observable<any>\r\n\r\n  public get currentLang(): string {\r\n    return get(this._config, 'currentLang', this.getBrowserCultureLang().substr(0, 2))\r\n  }\r\n\r\n  public constructor(private _config: ITranslateServiceMockConfig) {\r\n    this.onLangChange = new Subject<any>()\r\n  }\r\n\r\n  public get(key: string | Array<string>, param?: Object): Observable<any> {\r\n    if (Array.isArray(key)) {\r\n      const keyMap = {}\r\n      key.forEach(k => {\r\n        keyMap[k] = this.instant(k)\r\n      })\r\n      return of(keyMap)\r\n    }\r\n    return of(this.instant(key))\r\n  }\r\n\r\n  public switchLanguage(language: any): void {\r\n    this.onLangChange.next(language)\r\n  }\r\n\r\n  public getBrowserCultureLang(): string {\r\n    return get(this._config, 'browserCultureLang', 'de-DE')\r\n  }\r\n\r\n  public getBrowserLang(): string {\r\n    const [browserLang]: string[] = this.getBrowserCultureLang().split('-')\r\n    return browserLang\r\n  }\r\n\r\n  public getTranslation(lang: string): Observable<any> {\r\n    return of(get(this._config, `translation.${lang}`, lang))\r\n  }\r\n\r\n  public instant(key: string): any {\r\n    return get(this._config, `translations.${key}`, key)\r\n  }\r\n\r\n}\r\n\r\nexport const translateServiceMock = new TranslateServiceMockImpl({})\r\n\r\nexport function createTranslateServiceMock(config: ITranslateServiceMockConfig): ITranslateServiceMock {\r\n  return new TranslateServiceMockImpl(config)\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { ActivatedRoute } from '@angular/router'\r\n\r\nimport { Observable } from 'rxjs'\r\nimport { AuthenticationService } from '../../../fx-security/services/authentication.service'\r\nimport { isDebugMode } from '../../helper/local-storage.helper'\r\n\r\n@Injectable()\r\nexport class DebugDataInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthenticationService,\r\n              private route: ActivatedRoute) {\r\n  }\r\n\r\n  /**\r\n   * interceptor for debug data instead of real data\r\n   * [example:\r\n   *  api call https://fx-part-demand-gateway-service-integration/ccs/api/v1/11/vehicle/\r\n   *  redirects to ./assets/mock-data/fx-part-demand-gateway-service-integration/ccs/api/v1/11/vehicle.json\r\n   * ]\r\n   */\r\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const queryParams = this.route.snapshot.queryParams\r\n    const debug = (queryParams['debug'] === 'true' || isDebugMode()) && queryParams['debug'] !== 'false'\r\n    const isLoggedIn = this.authService.isLoggedIn\r\n\r\n    let newRequest = request\r\n    const searchString = '.apps.emea.vwapps.io'\r\n    const index = request.url.indexOf(searchString)\r\n\r\n    if (isLoggedIn && debug && index > -1) {\r\n      const apiName = request.url.substring(request.url.indexOf('//') + 2, index)\r\n      let newUrl = request.url.substring(index + searchString.length).replace(/\\/\\s*$/, '')\r\n      newUrl = `./assets/mock-data/${apiName}${newUrl}.json`\r\n      newRequest = request.clone({\r\n        url: newUrl,\r\n        method: 'Get',\r\n      })\r\n    }\r\n    return next.handle(newRequest)\r\n  }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { AuthenticationService } from '../../../fx-security/services/authentication.service'\r\n\r\n@Injectable()\r\nexport class HttpTokenInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthenticationService) {\r\n  }\r\n\r\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const bearerToken = this.authService.getAuthTokenHeaderString()\r\n    const isLoggedIn = this.authService.isLoggedIn\r\n    let newRequest = request\r\n    if (isLoggedIn && bearerToken && request.url.indexOf('.apps.emea.vwapps.io') > -1) {\r\n      let url = newRequest.url\r\n      url = this.replaceHttpOrPrefixUrlWithHttps(url)\r\n      newRequest = request.clone({\r\n        setHeaders: {\r\n          Authorization: bearerToken,\r\n        },\r\n        url: url,\r\n      })\r\n    }\r\n    return next.handle(newRequest)\r\n  }\r\n\r\n  private replaceHttpOrPrefixUrlWithHttps(originalUrl: string): string {\r\n    let url = originalUrl\r\n    if (!url.startsWith('https')) {\r\n      if (url.startsWith('http:')) {\r\n        url = url.replace('http:', 'https:')\r\n      } else if (url.startsWith('//')) {\r\n        url = 'https:' + url\r\n      } else {\r\n        url = 'https://' + url\r\n      }\r\n    }\r\n    return url\r\n  }\r\n}\r\n","export interface ColorRange {\r\n  start?: number\r\n  end?: number\r\n  color: string\r\n}\r\n","import { TableColumn } from '@swimlane/ngx-datatable'\r\nimport { DataTableColumnDirective } from '@swimlane/ngx-datatable/lib/components/columns/column.directive'\r\nimport { ColorRange } from './color-range'\r\n\r\nexport interface DatatableColumnTooltip {\r\n  column?: string\r\n  container?: string\r\n  placement?: 'left' | 'right' | 'top' | 'bottom'\r\n  showCondition?: (row?: any) => boolean\r\n  text?: string\r\n}\r\n\r\nexport interface DatatableColumnIcon {\r\n  class: string,\r\n  placement?: 'left' | 'right' | 'top' | 'bottom'\r\n}\r\n\r\nexport interface DatatableColumnSubIcon {\r\n  class: string\r\n  placement?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\r\n}\r\n\r\nexport interface DatatableColumnBorder {\r\n  bottom?: boolean\r\n  left?: boolean\r\n  right?: boolean\r\n  top?: boolean\r\n}\r\n\r\nexport interface DatatableColumnNavigationRoute {\r\n  routerLink: any[] | string\r\n  queryParams?: {\r\n    [k: string]: any\r\n  }\r\n}\r\n\r\nexport interface DatatableColumnFoldColumns {\r\n  isFolded: boolean,\r\n  columnNames: string[],\r\n}\r\n\r\nexport interface DatatableColumn extends TableColumn {\r\n  cellAlign?: 'left' | 'center' | 'right'\r\n  cellBorder?: DatatableColumnBorder\r\n  colorRanges?: ColorRange[]\r\n  format?: 'yyyy-MM-dd HH:mm:ss' | string | ((data: number) => string)\r\n  isFolded?: boolean\r\n  foldColumns?: DatatableColumnFoldColumns,\r\n  headerAlign?: 'left' | 'center' | 'right'\r\n  headerBorder?: DatatableColumnBorder\r\n  headerIcon?: DatatableColumnIcon\r\n  headerSubIcon?: DatatableColumnSubIcon\r\n  noTextOverflow?: boolean\r\n  navigationRoute?: (...params: any) => DatatableColumnNavigationRoute\r\n  selectable?: boolean\r\n  staticCellTooltip?: DatatableColumnTooltip | DatatableColumnTooltip[]\r\n  staticHeaderTooltip?: DatatableColumnTooltip | DatatableColumnTooltip[]\r\n  translationKey?: string\r\n  translationValues?: {\r\n    [key: string]: string\r\n  }\r\n  uniqueCellClass?: string | ((data: any) => string | any)\r\n}\r\n","import { EventEmitter, TemplateRef } from '@angular/core'\r\n\r\nexport interface DatatableRowDetail {\r\n  class?: string\r\n  expandAndCollapseRowTitle?: string\r\n  rowHeight: number | ((row?: any, index?: number) => number)\r\n  template: TemplateRef<any>\r\n  customExpandRowDetailTemplate?: TemplateRef<any>\r\n  toggle?: EventEmitter<any>\r\n  toggleIconColumnWidth?: number\r\n}\r\n","export interface JestExtended {\r\n  originalFnName: string\r\n  mockFunction?: (...params: any) => any | void\r\n}\r\n\r\nexport type JestSpyObject<T> = {\r\n  [P in keyof T]?: jest.Mock<any>\r\n}\r\n","export interface PageInfo {\r\n  count?: number\r\n  pageSize?: number\r\n  limit?: number\r\n  offset?: number\r\n  first?: number\r\n  last?: number\r\n}\r\n","export interface ScrollInfo {\r\n  offsetX: number\r\n  offsetY: number\r\n  page?: number\r\n  size?: number\r\n}\r\n","export interface SortInfo {\r\n  sorts: { dir: string, prop: string }[]\r\n  column: {}\r\n  prevValue: string\r\n  newValue: string\r\n}\r\n","export interface UrsToken {\r\n  app: string\r\n  email: string\r\n  exp: number\r\n  family_name: string\r\n  given_name: string\r\n  iss: string\r\n  roles: UrsRoles[]\r\n  sub: string\r\n  username: string\r\n}\r\n\r\nexport interface UrsRoles {\r\n  role: string\r\n  boundaries: UrsBoundaryPlant | null\r\n}\r\n\r\nexport interface UrsBoundaryPlant {\r\n  Plant: string[]\r\n}\r\n"],"names":["FX_LANGUAGE","tslib_1.__extends","fasIndustry","fasBox","fasCar","farCopyright","fasUser","fasSignOutAlt","fasBan","farAngry","fasExclamation","fasQuestionCircle","farQuestionCircle","tslib_1.__values","fasQuestion","fasCalendarAlt","farCalendarAlt","fasCalendar","farCalendar","fasCalendarWeek"],"mappings":"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"}