import { ChangeDetectorRef, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';
import { AuthenticationService } from '../services/authentication.service';
import { AuthorizationService } from '../services/authorization.service';
export declare class HasRoleDirective implements OnDestroy {
    private _viewContainer;
    private authorizationService;
    private changeDetector;
    private _context;
    private _thenTemplateRef;
    private _elseTemplateRef;
    private _thenViewRef;
    private _elseViewRef;
    private loginEventsSubscription;
    constructor(_viewContainer: ViewContainerRef, templateRef: TemplateRef<HasRoleContext>, authService: AuthenticationService, authorizationService: AuthorizationService, changeDetector: ChangeDetectorRef);
    ngOnDestroy(): void;
    hasRole: any;
    hasRoleFactory: string;
    hasRoleThen: TemplateRef<HasRoleContext>;
    hasRoleElse: TemplateRef<HasRoleContext>;
    private _updateView;
}
export declare class HasRoleContext {
    $implicit: any;
    hasRole: any;
    factory: string;
}
