import { Router } from '@angular/router';
import { BehaviorSubject, Observable } from 'rxjs';
import { Payload } from '../domain/payload';
import { SecurityConfig } from '../fx-security.module';
import { LoginService } from './login.service';
import { RedirectorService } from './redirector.service';
export declare type LoginEvent = 'loggedin' | 'loggedout';
export declare const TOKEN_KEY = "URS_TOKEN";
export declare const ID_TOKEN_KEY = "URS_ID_TOKEN";
export interface IdpIdentityToken {
    token: string;
    state: string;
    app: string;
}
export declare class AuthenticationService {
    private loginService;
    private router;
    private redirectorService;
    protected securityConfig: SecurityConfig;
    isLoggedIn: boolean;
    protected _token?: string;
    token: string;
    loginEvents: BehaviorSubject<LoginEvent>;
    constructor(loginService: LoginService, router: Router, redirectorService: RedirectorService, securityConfig: SecurityConfig);
    login(identityToken: IdpIdentityToken): Observable<IdpIdentityToken>;
    logout(): void;
    getAuthTokenHeaderString(): string;
    initTokenFromStorage(): void;
    loginFromUrlToken(url: string): Observable<IdpIdentityToken>;
    getPayload(): Payload;
    loginWithRedirectUrl(): void;
    redirectToIdpLogin(targetUrl: string): void;
    private initLogin;
    private removeLoginInformation;
    private buildIdpLoginUrl;
    private mathFloorRandom;
    private generateNonce;
    private extractTokenFromUrl;
    private extractHashPart;
    private extractParameters;
    private buildIdpLogoutUrl;
}
